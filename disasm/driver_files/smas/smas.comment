008000  Set interput flag
008001  Disable NMI, IRQ, and joypad read
008004  HDMA Disabled
008007  DMA Disabled
00800A \
00800D  | SPC ports disabled.
008010  |
008013 /
008016 \ Forced blank
008018 /
00801B \ Native mode
00801C /
00801D 16-bit AXY, not decimal mode
00801F \ Direct page register is now $0000
008022 /
008023 \ The stack pointer is now $00:01FF
008026 /
008027  8-bit AXY
008029 \
00802B  | Set program bank: Bank $00
00802C /
00802D \ This ROM is NTSC
008030  | If the SNES is a NTSC SNES 
008032 / Continue
008034  Otherwise, show error message (incompatible SNES)
008037 Show error message (Pirated game)
008048 16-bit A
008056 8-bit A
008058 \
00805A /Enable NMI and joypad.
00805D Store timer of Mario logo (#$81 too)
008063 \No operation. Likely overwriting a
008064 /deprecated program operation
008065 \ Copier check
008067  |
00806B  |If $700000 is not $AA
00806F /Then the game is pirated, show error msg.
008071 \ Another copier check
008073  |
008077  |If $700000 is not $55
00807B /Then the game is pirated, show error msg.
00807D \ Wait for NMI
008080 /
008085 Enable IRQ
008086 Frame counter increment
008088 \ Game mode as index
00808A  |If flag to clear OAM is set, indexed by
00808D  |game mode
00808F / <Then clear the OAM.
008092  Update the game
008096 \
008098  |If flag to update OAM sizes is set
00809B  |
00809D / Update OAM sizes
0080A3  Game loop
0080C7 \
0080C9  |
0080CD  |Store indirect pointers.
0080CF  |
0080D3  |
0080D5  |
0080D9 /
0080DB Jump to the indirect game pointers.
0080DE Forced blank + HDMA-Disable
0080E2 Disable interrupts
0080E5 \
0080E7  |Set program bank to $00
0080E8 /
0080E9 Set interrupt flag
0080EA \No interrupts and HDMA
0080ED /
0080F0 \
0080F2  |Stack pointer: $01FF
0080F5  |
0080F6 /
0080F8 \
0080FA  |
0080FC  |Clear sound effects and music
0080FE  |
008100  |
008103  |
008106  |
008109  |
00810C  |(Mute SFX panel 2?)
00810E /
008139 Forced blank + HDMA-Disable
00813D Disable interrupts
008140 \
008142  |Set program bank to $00
008143 /
008144 Set interrupt flag
008145 \Disable interrupts and HDMA
008148 /
00814B \
00814D  |Stack pointer: $01FF
008150  |
008151 /
008153 \
008155  |
008157  |
008159  |
00815B  |Clear sound effects and music
00815E  |
008161  |
008164  |
008167  |Mute SFX panel 2?
008169 /
008194 Indirect game pointers.
008198 $038000, $0D8000, $118000, $208000
00819C SMB1, SMBTLL, SMB2, SMB3
008207 Load savegame into RAM $7FFB00 area.
00822B \ Get game to show
00822F /
008230 \
008231  | Do  different game next time
008233 /
008239 \ We are doing the game-play exmaple video
00823B /
00823F \
008241  |
008243  | ?? Seems to write $00 to SRAM
008247  |
008248 /
00824C \
00824F  |
008251  | Clear $7F:0000
008254  |
008256 /
00825C \ Get game to show
00825D /
00825F  A->X
008260  +1
008261  *2
008262  Store here
008266 \
00826A  |
00826C  | Get pointers
008270  |
008272  |
008276 /
00827A \
00827D  |
00827F  | Clear $00:00F0
008282  |
008284 /
008288 \
00828B  |
00828D  | Clear $00:0200
008290  |
008292 /
00829B \
00829C  | Pull return address
00829D /
0082CB  Jump to pointer
0082CE \
0082D0  |
0082D2  | NMI Pointers, based on current game.
0082D4  | 
0082D6 /
0082D8 Set interrupt flag
0082D9 \
0082DB  |
0082DC  |Preserve 'everything', set direct page reg to $0000
0082DD  |
0082DE  |Set program bank to current bank
0082DF  |
0082E2  |
0082E3  |
0082E4  |
0082E5  |
0082E6  |PEI ($00) would've worked too.
0082E8  |Preserve RAM address $00-$01 (scratch ram)
0082E9 /
0082EB \
0082EF  |Jump to NMI routines of the current game
0082F0 /
0082F3 \
0082F5  |Recover scratch RAM
0082F6  |
0082F9  |
0082FA  |
0082FB  |Recover 'everything'
0082FC  |
0082FD  |
0082FE /
0082FF \
008301  |Set direct page to $0100
008302  |
008304 /
008305 vital read to enable NMI
008308 \
00830A /Copy of reg $2100 to $0100 (Brightness)
00830D Disable HDMA
008310 \
008312  |
008314  |
008316  |Flag to do some general purpose DMA?
008317  |When $0122 is set, do some DMA transfers I guess
00831A  |
00831C /
00831D Set up hardware addresses
008320 Do something SFX panels and music related
008323 \
008325  |
008327  |If $7E0124 is set, let the IRQ cover the whole screen
008329  |by disabling NMI or something.
00832B  |
00832D  |
008330  |
008332  |
008335  |
008338  |
00833B  |
00833E  |
008340 /
008343 \$7E0100 = brightness
008345 /
008348 \$7E0120 = HDMA enable
00834A /
00834E \NMI for SMB1
008352 /
008353 \NMI for SMB:TLL
008357 /
008358 \NMI for SMB2
00835C /
00835D \NMI for SMB3
008361 /
008362 \
008364  |
008366  | IRQ Pointers, based on current game.
008368  |
00836A /
00836C \
00836E  |
00836F  |Preserve "everything", set direct page to $0000
008370  |
008371  |
008372  |
008375  |
008376  |
008377  |
008378  |
008379 /
00837B \
00837F  |Execute IRQ based on current game
008380 /
008383 \
008385  |
008386  |Recover "everything" and return
008387  |
008388  |
008389  |
00838A /
00838B \Menu IRQ routine. Wait until IRQ occurs
00838E /
008390 \Wait for H-blank
008393 /
008395 \ 
008398  |Set BG1 H-scroll to normal
00839B  |
00839E  |
0083A1 /
0083A2 \IRQ for SMB1
0083A6 /
0083A7 \IRQ for SMB:TLL
0083AB /
0083AC \IRQ for SMB2
0083B0 /
0083B1 \IRQ for SMB3
0083B5 /
0083B6 Upload SPC engine + audio data of hall and menu screen
0083B9 16-bit A. 8-bit XY.
0083BB \ Size: $0150
0083BE /
0083C0 \ Destination: $00:0000
0083C3 /
0083C4  Clear RAM
0083C8 \ Size: $1E00
0083CB /
0083CD \ Destination: $00:0200
0083D0 /
0083D1  Clear RAM
0083D5 \ Size: $E000
0083D8 /
0083DA \ Destination: $7E:2000
0083DD /
0083DF  Clear RAM
0083E3 \ Size: $10000
0083E6 /
0083E8 \ Destination: $7F:0000
0083EB /
0083ED  Clear RAM
008405 \
008406  |
008408  |Direct page: $0100
008409  |
00840B  |
00840C  |No interlace, overscan, p-hires etc
00840F  |Setup hardware RAM addresses of menu screens
008412 /Recover direct page
008413 \
008415 /Upload full palette data from $7F:9200 for 1 frame.
00841A 16-bit XY. This routine sets up hardware regs
00841C \DP is $0100 in this case.
00841E /Object size + Chr address
008421 \BG1 Tilemap Address and Size
008423 /BG2 Tilemap Address and Size
008426 \BG3 Tilemap Address and Size
008428 /
00842B \BG1 and 2 Character address
00842D /
008430 \
008432  |BG1 Horizontal Scroll
008435  |
008437 /
00843A \
00843C  |BG1 Vertical Scroll
00843F  |
008441 /
008444 \
008446  |BG2 Horizontal Scroll
008449  |
00844B /
00844E \
008450  |BG2 Vertical Scroll
008453  |
008455 /
008458 \
00845A  |BG3 Horizontal Scroll
00845D  |
00845F /
008462 \
008464  |BG3 Vertical Scroll
008467  |
008469 /
00846C \
00846E  |
008471  |Fixed Color data
008473  |
008476  |
008478 /
00847B \Main and Subscreen designation
00847D /
008480 \Window mask designation for main
008482 /and subscreen
008485 \Window Mask Settings for BG1/2/3/4
008487 /
00848A \Window Mask Settings for OBJ and Color Window
00848C /
00848F \Color addition select & CGADSUB
008491 /
008494 \Screen mode
008496 /
008499 8-bit XY
00849B Return.
00849C Forced blank + HDMA-Disable
0084A0 \
0084A1  |
0084A3  |Direct page: $0100 
0084A4  |
0084A6 /
0084A7 \ If it is not time to upload the game select screen tilemap, branch
0084A8 /
0084AA \
0084AC  | Set vertical IRQ timer
0084AF  |
0084B1 /
0084B4 \
0084B5  |
0084B6  |
0084B8  |Upload the game select tilemap to RAM after
0084BC  |closing the file select menu. Upload the tiles
0084BF  |according to $D0's index so we won't upload the
0084C0  |wrong game's portrait tiles.
0084C1  |
0084C4  |
0084C7  |
0084CA  |
0084CD  |Source: $02:F000. Dest: $7F:1000
0084D0  |Used when collapsing a file select menu
0084D3  |after selecting a game. 8-bit AXY
0084D5  |
0084D6 /
00852F \
008531  |Set direct page to $4300
008534  |
008535  |DMA game select/menu tiles to VRAM
008538 /
008539 \
00853A  | Index correctly
00853D  |
00853E /
00853F \ Size: $0200
008542 /
008544 \
008547  | Upload palette
008549  |
00854B /
00854D \ $7F:9200
008550 /
008552  Upload to RAM
008561 Upload "Hall screen" tiles to VRAM
008563 Upload "Game select" tiles to VRAM
008565  Upload Hall Screen/Game select tiles
008566 \Set VRAM mode
008568 /
00856B \
00856D  |DMA mode 01: 2 regs write once
00856E /
008570 <DMA Channel #0
008572 \
008573  |
008574  |
008575  |
008578  |
008579 /
00857A \ DMA 'hall screen' graphics to VRAM
00857D  |DMA to: VRAM $0000-$7FFF
008580  |
008583  |
008585  |DMA source: $01:8000
008587  |Size: $8000 bytes/32kB
008589  |
00858C  |
00858E /
008591 \ Upload animated hall screen tiles of Bowser, princess, toad, luigi's ear to VRAM
008594  |DMA to: VRAM $8000-$93FF
008596  |
008598  |
00859A  |DMA Source: $3D:CC00
00859D  |Size: $1400 bytes
00859F /
0085A2 \ Upload triangle fading GFX to VRAM
0085A5  |
0085A8  |DMA to: VRAM $A000-$A7FF
0085AB  |
0085AD  |DMA Source: $02:9000
0085AF  |Size: $0800 bytes
0085B1  |
0085B4  |
0085B6 /
0085B9 \ Upload Nintendo Presents graphics to VRAM
0085BC  |
0085BF  |
0085C2  |DMA to: VRAM $C000-$CFFF
0085C4  |
0085C6  |DMA Source: $02:8000
0085C8  |Size: $1000 bytes
0085CB  |
0085CD /
0085D0 \ Upload default BG2 hall screen tilemap?
0085D3  |
0085D6  |DMA to: VRAM $E000-$E7FF
0085D9  |
0085DB  |DMA Source: $02:C000
0085DD  |DMA Size: $0800 bytes
0085DF  |
0085E2  |
0085E4 /
0085E7 \ upload default BG1 hall screen tilemap
0085EA  |
0085ED  |
0085F0  |DMA to: VRAM $F000-$F7FF
0085F2  |
0085F4  |DMA Source: $3C:8000
0085F6  |DMA Size: $0800 bytes
0085F9  |
0085FB /
0085FF \
008602  |Upload game select menu tiles
008605  |and its components to VRAM $0000-$D7FF
008608  |
00860A  |Source: $2B8000-$2BFFFF
00860C  |        $2C8000-$2CFFFF
00860E  |
008611  |
008613  |
008616  |
008619  |
00861B  |
00861D  |
00861F  |
008622  |
008624 /
008627 \ Upload default BG2 hall screen tilemap?
00862A  |DMA to VRAM $D800-$DFFF
00862D  |
008630  |Source: $02:C000
008632  |
008634  |Size: $0800 bytes
008636  |
008639  |
00863B /
00863E \
008641  |
008644  |Upload to VRAM $E000-$E7FF
008647  |
008649  |Upload absolute nothingness?
00864B  |
00864D  |Source: $3D:A800
008650  |
008652 /
008655 \
008658  |
00865B  |Upload game select menu tilemap
00865E  |to VRAM $F000-$FFFF
008660  |
008662  |Source: $02:F000-$02:FFFF
008664  |
008667  |
008669 /
00866D \ 
008670  |
008673  |
008676  |
008679  |DMA stuff to RAM routine.
00867B  |Input: $7E0002 - 3 bytes - source address
00867E  |       $7E0000 - 2 bytes - size
008680  |A = destination RAM
008683  |Y = flag for RAM $7F/$7E
008685  |A = 16-bit. XY = 8-bit.
008688  |
00868A /
00868E \Clear RAM routine
008690  |
008693  |
008696  | Input:
008699  | A: Dest low and high
00869C  | Y: Dest bank
00869E  | $00: DMA Size
0086A1  | $02: 16-bit value to transfer (usually $0000 or $FFFF)
0086A3  |
0086A6  |
0086A7  |
0086AA  |
0086AC  |
0086AF  |
0086B1  |
0086B4 /
0086B5 \NES-styled Joypad data 1
0086B8  |Read if the latch is open
0086BA  |Reverse the latch status
0086BC  |Multiply by 2
0086BD /Store into SRAM
0086CC \
0086CF /Something related to controllers
008719 \ Prepare OAM for the logo, menu, hall screen etc.
00871A  |Direct page: $0800
00871C  |
00871F /
008720 \
008723  |
008726  |
008727  |
008729  |
00872B  |
00872D  |
00872F  |
008731  |Clear OAM
008733  |Clear $0800-$09FF
008735  |
008737  |
008739  |
00873B  |
00873D  |
00873F  | 
008741  |
008743  |
008745  |
008747  |
008749  |
00874B  |
00874D  |
00874F  |
008751  |
008753  |
008755  |
008757  |
008759  |
00875B  | 
00875D  |
00875F  |
008761  |
008763  |
008765 /
008767 \
008768  |
008769  |If not done yet
00876C  |Loop
00876D /
00876F 8-bit AXY
008771 Recover direct page
008772 Return.
008773 \
008774  |
008776  |Direct page: $0A00
008777  |
008779 /
00877A \
00877C  |
00877D  |
00877E  |
00877F  |Basically this sticks 2 bits of 4 bytes into 1 byte
008780  |And stores it to OAM $0A00-$0A1F for the tilesize
008782  |
008783  |
008784  |
008786  |
008787  |
008788  |
00878A  |
00878B  |
00878C  |
00878E  |
008791  |
008793  |
008794  |
008795  |
008797  |
008798  |
008799  |
00879B  |
00879C  |
00879D  |
00879F  |
0087A2  |
0087A4  |
0087A5  |
0087A6  |
0087A8  |
0087A9  |
0087AA  |
0087AC  |
0087AD  |
0087AE  |
0087B0  |
0087B3  |
0087B5  |
0087B6  |
0087B7  |
0087B9  |
0087BA  |
0087BB  |
0087BD  |
0087BE  |
0087BF  |
0087C1  |
0087C4  |
0087C5  |
0087C6  |
0087C7  |
0087C8  |
0087CA /
00882E \Enable forced blank & Disable HDMA
008830  |Forced blank
008833  |Forced blank on mirror too
008836  |HDMA disable
008839  |HDMA disable on mirror too
00883C /
0088C3 \
0088C5  |Direct page: $43xx
0088C6  |
0088C8 /
0088C9 16-bit XY
0088CB \Base register: $2118. 2 regs write once.
0088CE /
0088D0 \VRAM:
0088D2 /increment after writing $2119/reading $213A
0088D5 \
0088D8  |Flag to do file select images DMA. If it is set:
0088DA  |Do file select images DMA.
0088DD  |VRAM Destination: $D800
0088E0  |
0088E3  |DMA Source: $2C:D800
0088E5  |
0088E7  |Size: 4kB 
0088E9  |
0088EC  |Do DMA transfer
0088EE  |
0088F0  |
0088F3 /Reset "file select images DMA" flag
0088F6 \Clear offset of fading out into game select triangle 
0088F9 /                              graphics.
0088FD \ If we're fading out into the game select room
008900  |
008902  |DMA source: bank #$02, offset that $00E5 has
008904  |
008906  |
008908  |
00890B \|If fading out, VRAM address is $A000, else, $E000
00890E /|
008910  |
008913  |
008916  |DMA size: $800 bytes
008919  |
00891B  |
00891D  |
008920  |
008923 /
008926 \ If character animation on hall screen flag is set
008929  |
00892B  |VRAM address: $F000
00892E  |
008931  |Update screen's tilemap using ram $7F0000 AKA animate stuff
008934  |Source: $7F0000
008936  |
008938  |
00893A  |
00893D  |Size: $0800 bytes
00893F  |
008941  |Enable DMA transfer
008944 / Reset character animation on hall screen flag
008947 \ Dynamically upload palette
00894A  |If $0AC0 is set, upload full palette to CGRAM
00894C  |located at Source: $7F:9200.
00894F  |One reg write once. Reg = $2122
008952  |
008954  |Source: $7F:9200
008957  |
008959  |
00895B  |
00895D  |Size: Full palette
008960  |
008962  |
008964  |
008967 /
00896A \ Update OAM using DMA
00896C  |
00896E  |OAM address: $0000?
008971  |\1 reg write once
008974  |/OAM data DMA
008976  |Source: $00:0800 - OAM
008979  |
00897B  |
00897D  |Size: 544 bytes (entire OAM)
008980  |
008982  |Enable DMA transfer
008984 /
008987 \ 2 regs write once $2118
00898A  |
00898C  |...the same thing again?
00898F  |
008991  |
008994  |
008995  |
008998  |Indirect pointer $7F8002 at $E8-$EA
00899A  |
00899C  |
00899E  |
0089A1  |
0089A3  |
0089A5  |
0089A8  |
0089AB  |
0089AD  |
0089B0  |
0089B4  |
0089B5  |
0089B9 /
0089F1 Pointer to SPC data upload of games. SMB1
0089F3 SMB:TLL
0089F5 SMB2
0089F7 SMB3
0089F9 Set IRQ disable flag
0089FA \Disable interrupts
0089FD /Disable HDMA
008A00 \
008A03  |Disable SFX and music stuff
008A06  |
008A09  |
008A0B /
008A0E \
008A10  |Load selected game
008A11  |
008A12 / Upload SPC data of selected game
008A15 \
008A17  |
008A19  |
008A1C  |
008A1E  |
008A21  |Do some DMA transfers to RAM
008A23  |
008A25  |The DMA'd data goes in RAM, but doesn't get
008A27  |read???
008A2A  |
008A2C  |
008A30  |
008A33  |
008A35 /
008A47 \Enable interrupts
008A49 /
008A4F \
008A51  |DMA SPC-700 data to RAM, part 1 of 2
008A54  |Source: $07FC00
008A56  |Size: $0400 bytes
008A59  |Destination: $7F0000
008A5B  |
008A5D  |
008A5F  |
008A62  |
008A64 /
008A68 \
008A6B  |DMA SPC-700 data to RAM, part 2 of 2
008A6D  |Source: $3B8000
008A70  |Size: $8000 bytes
008A72  |Destination: $7F0400
008A74  |
008A76  |
008A79  |
008A7B  |
008A7F /
008A81 \
008A83  |
008A85  |SPC-700 data source: $7F:0000
008A87  |
008A89 /
008A8B Upload SPC engine + SMAS hall and menu audio data
008AA3 \
008AA5  |
008AA7  |SPC-700 data source: $0B:8000
008AA9  |
008AAB /
008AAD Upload SPC data
008ABD  Don't let NMI interrupt the upload
008AC0  No DMA
008AC3  No HDMA
008AC6 \
008AC9  |
008ACB  | Tell SPC700 we are ready to upload data
008ACE  |
008AD1 /
008AD4 \
008AD6  |
008AD8  |SPC-700 data source: $0B:8000
008ADA  |
008ADC /
008ADE Upload SPC data
008AE8  Don't let NMI interrupt the upload
008AEB  No DMA
008AEE \
008AF1  |
008AF3  | Tell the SPC700 we are ready to upload data
008AF6  |
008AF9 /
008AFC \
008AFE  |
008B00  |
008B02  |SPC-700 data source: $3B:A251
008B04  |
008B06 /
008B08 Upload SPC-700 data
008B0B \ Enable NMI again and joypad read
008B0D /
008B10  Next sub-game mode
008B12 \ Play talking crowd SFX
008B14 /
008B17 \
008B19  |
008B1B  |
008B1D  |SPC-700 data source: $1F:8000
008B1F  |
008B21 /
008B23 Upload SPC-700 data
008B27 \
008B29  |
008B2B  |
008B2D  |SPC-700 data source: $1F:C000
008B2F  |
008B31 /
008B33 Upload SPC-700 data
008B37 \
008B39  |
008B3B  |SPC-700 data source: $0C:8000
008B3D  |
008B3F  |
008B41 /
008B43 Upload SPC-700 data
008B53 \
008B55  |
008B57  |SPC-700 data source: $0C:8000
008B59  |
008B5B  |
008B5D /
008B5F Upload SPC-700 data
008B71 \
008B74  |
008B76  |
008B79  |SPC-700 data to RAM:
008B7B  |Source: $07:C000
008B7D  | Dest.: $7F:0000
008B7F  | Size: $2800 bytes
008B82  |
008B84 /
008B88 \
008B8A  |
008B8C  |SPC-700 data source: $7F:0000
008B8E  | 
008B90  |
008B92  |
008B94 /
008B96 Upload SPC-700 data
008B99 \
008B9B  |
008B9E  |Clear $7F0000-$
008BA0  |
008BA3  |
008BA5  |
008BA9 /
008BAC Upload SPC data routine
008BAF index to SPC data
008BB2 \
008BB5  |Wait until SPC-700 is ready
008BB8 / (it reaches ARAM $0fdc then)
008BBA \
008BBC  |Tell SPC-700 that you're ready, and begin
008BBE / uploading data.
008BE6 SPC-700 data header consists of 2 words/4 bytes
008BE9 This loads the first word:
008BEB Length of SPC-700 data in hex (little-endian)
008BEE This loads the second word:
008BF0 Where in ARAM the SPC-700 should be uploaded to
008BF1 (little-endian)
008C1D \
008C1F /Clear debug mode
009307 \
009337  |
009367  |
009397  |
0093CA 8-bit A
0093CC Push direct page
0093CD CGRAM 'pointer': Palette 00
0093D0 16-bit A
0093E2 \Direct page: $43xx
0093E5 /
0093E6 \increment after writing $2119/reading $213A
0093E8 /
0093EB \4 colors which are white, and 3 blue tints
0093EE  |They are located at palette 00
0093F1  |Colors $0C, $0D, $0E, $0F
0093F4  |
0093F7  |
0093FA  |
0093FD /
009403 \Base register: $2122
009406 /Writing mode: 1 regs write once
009408 \DMA source: $00:0200
00940B  |
00940D  |
00940F /
009411 DMA Size: 0x200/512 bytes.
009413 \
009415 /Enable DMA channel 1
009418 \Base register: $2118
00941B /Writing mode: 2 regs write once
00941D \VRAM Address: $0000
009420 /
009423 \
009426  |DMA Source: $19:9800.
009428  |(SMB2 font GFX is located there)
00942A /
00942C \DMA Size:
00942F /0x800 bytes/2kB
009431 Enable DMA channel
009434 \
009435  |Set program bank: $00
009437  |
009438 /
009439 Load loop stuff.
00943B \
00943E  |
009441  |
009444  |Store all the text to RAM
009447  |
00944A  |
00944D  |
009450 /
009453 \
009454  |If not done yet (uploading 48 * 4 tiles)
009455  |
009457 / Loop
009459 Recover program bank.
00945A \VRAM address: $1000
00945D /
009460 \
009463  |DMA Source: $00:0800
009465  |
009467 /
009469 DMA Size: 0x800 bytes/2kB
00946B Activate DMA channel 1
00946E 8-bit A
009470 Recover direct page.
009471 \BG1 tilemap address: $4000
009473 /
009476 BG1 char address: $0000
009479 \Enable BG1 on main screen
00947B  |nothing on subscreen
00947E /
009481 \Mode 1, 8x8 tiles
009483 /
009486 No color math?
009489 No CGADSUB
00948C \
00948F  |
009492  |NO BG1/2/3 Horizontal and vertical scroll
009495  |
009498  |
00949B  |
00949E  |
0094A1  |
0094A4  |
0094A7  |
0094AA  |
0094AD /
0094B0 \Maximum brightness
0094B2 /
0094B5 \Wait for VBlank
0094B8 /
0094BA \From now on everything from here will execute
0094BC  |on a vblank. Increase frame counter
0094BE  |If it isn't $18 yet
0094C0 / branch 
0094C2 Store zero to the something
0094C4 CGRAM Palette destination: 00
0094C7 16-bit A
0094C9 \Direct page:
0094CC /$43xx
0094CD \increment after writing $2119/reading $213A
0094CF /
0094D2 \Load 2nd color.
0094D5  |Push it into A
0094D6  |Load 3rd color
0094D9  |Overwrite 2nd color
0094DC  |load last color
0094DF  |overwrite 3rd color
0094E2  |Pull 2nd color from A
0094E3 /Store into last color
0094E6 \Base register: $2122. 1 reg write once
0094E9  |
0094EB  |
0094EE  |Source address: $00:0200
0094F0  |
0094F2 /
0094F4 DMA Size: 512 bytes.
0094F6 \Enable DMA channel 1
0094F8 /
0094FB \
0094FE  |Recover direct page. 8-bit A
0094FF /
009501 \If you have Vblank, don't continue
009504 /if out of Vblank then continue with...
009506 ...Loop forever..... evil coding
009641 Set interrupt flag
009642 No interrupts
009645 No HDMA
009648 No DMA
00964B \Forced blank
00964D /
009650 \
009653  |No SFX
009656 /
009659 \
00965B /Fade out the music
009661 16-bit A
009663 Push direct page
009664 Palette number: $00
009667 16-bit A
009679 \Direct page: $43xx
00967C /
00967D \increment after writing $2119/reading $213A
00967F /
009682 \
009685  |
009688  |4 colors which are white, and 3 blue tints
00968B  |They are located at palette 00
00968E  |Colors $0C, $0D, $0E, $0F
009691  |
009694  |
009697 /
00969A \1 reg write once. base reg = $2122
00969D /CGRAM write reg
00969F \
0096A2  |DMA Source: $00:0200
0096A4  |
0096A6 /
0096A8 DMA size: 0x200/512 bytes.
0096AA \Enable DMA channel 1
0096AC /
0096AF \Base reg: $2118: VRAM Write
0096B2 /2 regs write once
0096B4 \VRAM Address: $0000
0096B7 /
0096BA \
0096BD  |DMA Source: $19:9800
0096BF  |SMB2 font GFX
0096C1 /
0096C3 \DMA Size: 0x800 bytes/2kB
0096C6 /
0096C8 Enable DMA channel 1
0096CB \
0096CC  |Set program bank
0096CE  |
0096CF /
0096D0 \
0096D2  |
0096D5  |
0096D8  |
0096DB  |
0096DE  |Upload the 'pirated' message to RAM
0096E1  |
0096E4  |
0096E7  |
0096EA  |
0096ED  |
0096F0  |
0096F3 /
0096F6 \
0096F7  |If not done yet, continue uploading.
0096F8  |
0096FA /
0096FC Continue updating palette animation and loop.
0096FF Values in a decrementing fashion
009780 Values in a decrementing fashion
009B80  $00 = Set up things for Nintendo Presents Screen
009B82  $01 = Fade into Nintendo Presents Screen
009B84  $02 = Show Nintendo Presents Screen
009B86  $03 = Fade out of presents screen and setup title screen
009B88  $04 = Fade into title screen
009B8A  $05 = Title screen (lights out and everyone is talking)
009B8C  $06 = Waste some time
009B8E  $07 = Waste some time
009B90  $08 = Waste some time
009B92  $09 = Waste some time
009B94  $0A = Get some SPC data uploaded and play title screen music
009B96  $0B = ??? Unused?
009B98  $0C = Title screen
009B9A  $0D = Turn black
009B9C  $0E = Turn back to normal
009B9E  $0F = Black
009BA0  $10 = Normal
009BA2  $11 = Black
009BA4  $12 = Normal
009BA6  $13 = Black
009BA8  $14 = Waste some time
009BAA  $15 = Waste some time
009BAC  $16 = Waste some time
009BAE  $17 = Waste some time
009BB0  $18 = Waste some time
009BB2  $19 = Upload SPC data
009BB4  $1A = Lights out (again)
009BB6  $1B = Title screen
009BB8  $1C = Title screen (almost time to change)
009BBA  $1D = Fade out to gameplay example
009BBC  $1E = Wait a bit and play "fade out" SFX
009BBE  $1F = Triangle fade out routine
009BC0 \
009BC2  | Do sub-modes
009BC3  |
009BC4 /
009BC7 \
009BC9  | If we are not on the title screen yet, branch
009BCB /
009BCD  Show "Super Mario-All Stars" and Nintendo copyright text
009BD0 \
009BD2  | If we are not actually displaying the title screen yet, branch
009BD4 /
009BD6 \
009BD8 /
009BDA \
009BDC  |
009BDE  | Get controller input
009BE0  |
009BE2 /
009BE4 \ If we are not pressing start, branch
009BE6 /
009BE8 \
009BEA  |
009BED  |
009BEF  |
009BF2  | Upload palette
009BF4  |
009BF6  |
009BF8  |
009BFB  |
009BFD /
009C01 \ Set color 0 to black
009C04 /
009C08 \
009C0A  |
009C0C  | Set back drop color
009C0F  |
009C11  |
009C14  |
009C16 /
009C19  Update CGRAM
009C1C  Move BG1 tilemap to RAM
009C1F \
009C21  | Set timer
009C23 /
009C25 \
009C27  | Set timer
009C29 /
009C2B \
009C2D /
009C2F \ Mute music
009C31 /
009C34 \ Play sound effect
009C36 /
009C44 \ Size
009C47 /
009C49 \
009C4C  | Source: $02:CA00
009C4E  |
009C50 /
009C52 \ RAM: $7F:9200
009C55 /
009C57  Upload to RAM
009C5B \
009C5E  | Make the first two colors black
009C62 /
009C68  Update CGRAM
009C6B \ Sprites on main screen
009C6D /
009C78  Next sub-game mode
009C7A  Draw sprite
009C7D  Increase screen brightness
009C80 \
009C83  | Branch if we haven't reached max brightness
009C85 /
009C87  Next sub-game mode
009C8A \
009C8C  |If the presents timer reaches this value, branch
009C8E /
009C90 \Blink SFX
009C92  |
009C95  |Set blinking timer to #$02
009C97  |
009C99  |
009C9B /
009C9D  Keep the sprite drawn
009CA0 \ If it is not time to blink, branch
009CA2 /
009CA7 \ Decrease presents timer
009CA9 / If it is not zero, return
009CAB  Next sub-game mode
009CBC  Keep the sprite drawn
009CBF \ Decrease screen brightness
009CC2 / If it is not zero, branch
009CC4 \
009CC6  | Force blank
009CC9 /
009CCC  Upload BG1 tilemap and set some timers
009CD1 \
009CD4  |
009CD6  |
009CD9  |
009CDB  | Upload title screen palette
009CDD  |
009CDF  |
009CE2  |
009CE4 /
009CE8 \ Set the first color to black
009CEB /
009CEF \
009CF1  |
009CF4  |
009CF7  | Upload sprite GFX
009CFA  |
009CFD  |
009D00  | Source: $02A000
009D03  | Size:   $2000
009D06  |
009D08  |
009D0B  |
009D0E  |
009D11  |
009D13 /
009D18 \ BG2 on main screen
009D1A / why?
009D1D \ BG1 and sprites on sub-screen
009D1F /
009D22 \
009D24  | Enable sub-screen
009D27  |
009D29 /
009D2C \
009D2E  | Set backdrop color
009D31  |
009D33  |
009D36  |
009D38 /
009D3B \ Play chatting noise
009D3D /
009D40  Update CGRAM
009D43  Screen brightness = 0
009D46  Next subgame mode
009D48  Fade into title screen
009D4B \
009D4E  | If we have not reached max screen brightness branch
009D50 /
009D54 \ Set timer (amount of time until we change the palette/"turn the lights on")
009D57 /
009D5B  Next sub-game mode
009D60 \
009D62  | If the timer is < $0020 branch
009D65 /
009D69  Make everyone talk
009D6E \ If it is not time to "turn the lights on", return
009D70 /
009D74  Upload BG1 tilemap
009D77 \
009D79  |
009D7C  |
009D7E  | Put palette in RAM
009D81  |
009D83  |
009D85  |
009D87  |
009D8A  |
009D8C /
009D90 \ color 0 black
009D93 /
009D99 \
009D9B  |
009D9E  | Set backdrop color
009DA0  |
009DA3  |
009DA5 /
009DA8  Upload palette buffer to CGRAM
009DAD \ Set amount of time left on title screen
009DB0 /
009DBC  Next sub-game mode
009DBE \ Mute sound on this channel
009DC0 /
009E16  Handle flashing "Super Mario All-Stars" text
009E1B \ If there is still time left on the title screen, branch
009E1D /
009E1F \
009E22  |
009E24  |
009E27  | Change palette
009E29  |
009E2B  |
009E2D  |
009E30  |
009E32 /
009E36 \ Make the first color black
009E39 /
009E3D \ Set timer
009E40 /
009E42 \
009E45  |
009E48  | Set backdrop color
009E4B  |
009E4E  |
009E51 /
009E54  Update CGRAM
009E57  Next sub-game mode
009E5C  Move everyone
009E61 \ Decrease timer
009E63 /
009E65 \
009E68  | Set timer
009E6A /
009E6F \
009E72  |
009E74  |
009E77  |
009E79  |
009E7B  | Set palette
009E7D  |
009E80  |
009E82  |
009E86  |
009E89 /
009E8D \ Set timer
009E90 /
009E92 \
009E95  |   
009E98  | Set backdrop color
009E9B  |
009E9E  |
009EA1 /
009EA4  Update CGRAM
009EA7  Next sub-game mode
009EAE \ Decrease timer
009EB0 /
009EB2 \
009EB5  |
009EB7  |
009EBA  | Upload palette
009EBC  |
009EBE  |
009EC0  |
009EC3  |
009EC5 /
009EC9 \ Make the first color black
009ECC /
009ED3 \
009ED5  | Only mute the music after the last flash
009ED7 /
009ED9 \ Mute music
009EDB /
009EDE  Set timer
009EE2  Update CGRAM
009EE5  Next sub-game mode
009EE7 \
009EE9  |
009EEC  | Set backdrop color
009EEE  |
009EF1  |
009EF3 /
009EF9  Go upload some SPC data
009EFC \ Play title screen music
009EFE /
009F01  Next sub-game mode
009F04  Move everyone
009F07  Upload SPC data
009F0C \ Set timer
009F0F /
009F14  Make "All-Stars" text flash
009F17  Move everyone
009F1C \ Decrease timer
009F1E /
009F20 \
009F23  |
009F25  |
009F28  | Set palette
009F2A  |
009F2C  |
009F2E  |
009F31  |
009F33  |
009F37  |
009F3A /
009F3E \
009F41  |
009F44  | Set backdrop color
009F47  |
009F4A  |
009F4D /
009F5F  Update CGRAM
009F67  Go upload some SPC data
009F6D  Make "All-Stars" text flash
009F70  Move everyone
009F75 \ Decrease timer
009F77 /
009F7B  next sub-game mode
009F7D \
009F7F /
009F85 \ Decrease screen brightness until black
009F88 /
009F8A \
009F8C  | screen brightness = 0
009F8F /
009F92  Upload SPC data
009F95  sub-game mode 0
009F97 \ Do gameplay example
009F99 /
009F9C  Make "All-Stars" text flash
009F9F \ Decrease timer
009FA1 /
009FA3 \ Play "fade out" SFX
009FA5 /
009FA8  Next sub-game mode
009FAB Triangle fading graphic offsets. bank is hardcoded at #$02
009FF1 \
009FF3  | Return all odd frames
009FF4 /
009FF8  Get which step we are on
009FFA \ Set source data location to upload to BG2's tilemap in $E5
009FFE /
00A000 \ Step we are on+2
00A001 /
00A002  Remeber it
00A004 \ If this isn't the last step branch
00A006 /
00A008  Next game mode
00A00A \ Clear sub-game mode and timer
00A00C /
00A00E \ Force blank
00A011 /
00A017 Nintendo presents logo tilemap.
00A02B \
00A02D /Clear registers X and Y
00A02E \#$50 to logo Y
00A030 /
00A032 \#$60 to logo X
00A034 /
00A036 \
00A038  |
00A03B  |Write logo to OAM
00A03D  |
00A040  |
00A043  |
00A046  |
00A047  |
00A049  |
00A04C  |
00A04D  |
00A04E  |
00A04F  |
00A050  |
00A051  |Write logo tiles size to OAM. $00 = 8x8, $02 = 16x16
00A053  |
00A056  |
00A057  |
00A058  |
00A059  |
00A05A  |
00A05B  |
00A05D  |
00A05E  |
00A060  |If not done yet, continue looping
00A062  |
00A064  |
00A066  |
00A068  |
00A069  |
00A06B  |
00A06D  |
00A06F /
00A072 How long the 4 blinks of the presents logo lasts
00A076 RGB values for the blink. Kinda hard to figure it out...
00A08E same as above
00A0A6 \
00A0A8  |
00A0A9  |Multiply $23 with 06 and move it to Y
00A0AB  |
00A0AC  |
00A0AD  |
00A0AF /
00A0B0 \
00A0B2  |
00A0B5  |
00A0B9  |
00A0BC  |Do some logo-blinking stuff
00A0C0  |
00A0C1  |
00A0C2  |
00A0C4 /
00A0C9 \Decrease blinking timer.
00A0CB /
00A0CD \
00A0CF  |If not done yet with the blinking
00A0D1  |Load the next blink's duration
00A0D3 /
00A0D5 \
00A0D7  |Otherwise, we're done!
00A0D9  |
00A0DB /
00A0DD \ Load blinking duration, indexed by blink count
00A0E0  |
00A0E2 /
00A1A7 Super Mario All-Stars logo OAM tilemap
00A248 Same purpose as above table!
00A2D8 \
00A2DC /
00A2DE \
00A2E2  | Get the last game played
00A2E4 /
00A2E9  Upload GFX and palette
00A2ED  Upload SPC data
00A2F0 \ Screen brightness
00A2F2 /
00A2F5  Update CGRAM
00A2F8  Next game mode
00A2FA  Sub-game mode 0
00A2FC \ Set timer
00A2FE /
00A300  Reset the frame counter
00A305 \ Play SFX
00A307 /
00A39B \ If we are running the game select screen branch
00A39D /
00A409 \
00A40B  | If we are not pressing left or right branch
00A40D  |
00A40F /
00A411 \ If we are pressing left, branch
00A413 /
00A415  Get the current game we are on
00A41B \ Move the correct amount
00A41E /
00A421  Next game
00A424 \ Play SFX
00A426 /
00A429 \ If zero, branch
00A42C /
00A430 \
00A433  |
00A434  | Move the games
00A437  |
00A43A /
00A441  Same thing up there but the other way
00A46B \
00A46E  | If we stopped moving, branch
00A471 /
00A473  Return
00A478 \ 
00A47B /
00A48C \ If we did not select a game, branch
00A48F /
00A491 \
00A493  |
00A495  | If we want to select a new game, branch
00A497  |
00A499  |
00A49B  |
00A49D /
00A4AB \
00A4AD  |
00A4AF  | If we choosed a game, branch
00A4B1  |
00A4B3 /
00A520 \SFX to play when you move cursor |> over files ABCD
00A522 /when selecting a savefile after selecting a game.
00A60D \SFX to play when you can't decrease world number
00A60F /in a FILE A/B/C/D select
00A849 \
00A84A  |Program bank: SRAM
00A84C  |
00A84D /
00A84E \
00A850  |
00A852  |
00A854  |
00A856  | 
00A858  |
00A85B  | Load $120 bytes of saved data from SRAM Offset of last save data accessed
00A85E  | into RAM $7FFB00 whenever you load a game. Doesn't matter which.
00A861  |
00A865  |
00A866  |
00A867  |
00A869 /
00A86B \
00A86E /Which world you have loaded, from SRAM into RAM
00A872 \
00A875 /Which level you have loaded, from SRAM into RAM
00A879 \
00A87D /Loaded game into scratch RAM
00A87F \
00A881  |
00A885  | If SMB1
00A886  | Save slot # << 4
00A887  | OR $00  (isn't this always 00 because we only get here when it's 00?)
00A889  | 
00A88A  | Clear high byte, to index.
00A88C  | 
00A88D  | (so basically save slot * 4 to index)
00A88E \|
00A892 / More difficult quest flag for SMB1
00A896 \
00A898  |
00A899  |
00A89D  | Loaded save slot * 4 to X index
00A89F  | (for what purpose?)
00A8A0  |
00A8A1  |
00A8A2  |
00A8A4  |
00A8A5 /
00A9B1  Tilemap in selected game's file select
00A9C7 Tilemap in selected game's file select
00B642 \ Decrease timer (used for making Mario, toad, move the carpet bird/pidget, move luigi's hand, and birdo's tail move)
00B645 / If it is not zero branch
00B647  Move luigi's hand
00B64A  Move toad
00B64D  Move birdo's tail
00B650  Move pidget
00B653  Move Mario
00B656 \ Reset timer
00B658 /
00B65B  Upload tilemap
00B65D \ If it is not time to make bowser talk and luigi's head move, branch
00B660 /
00B662  Move luigi's head
00B665  Move bowser
00B668 \ Reset timer
00B66A /
00B66D  Upload tilemap
00B66F \ If it is not time to make peach talk and birdo talk, branch
00B672 /
00B674  Move peach
00B677  Move birdo
00B67A \ Reset timer
00B67C /
00B67F  Upload tilemap
00B686  Upload BG1 tilemap to RAM
00B688  Source low and high byte
00B68B  Destination low and high byte
00B68E  Amount of byte to transfer
00B691  Transfer $3C:8000 -> $7F:0000
00B697 \
00B699  |
00B69C  |
00B69E  | Set timers
00B6A1  |
00B6A3  |
00B6A6  |
00B6A8 /
00B6AB \ Upload $7F:0000 to BG1 tilemap
00B6AD /
00B6B2 \
00B6B4  | Set flash timer for the "All-Stars" text on the title screen
00B6B6 /
00B6B9 \ Source bank
00B6BB /
00B6BF  Get frame
00B6C7 \ Source low and high byte
00B6CA /
00B6CC \ Destination
00B6CF /
00B6D1  Put tilemap in RAM
00B6D6  Next frame
00B6DA \ Source bank
00B6DC /
00B6E0  Get the frame
00B6E8 \ Source low and high
00B6EB /
00B6ED \ Destination
00B6F0 /
00B6F2  Put tilemap in RAM
00B9AB \ Push X and Y
00B9AC /
00B9AD  X= #$0000
00B9B0  Get destination
00B9B2  Read data
00B9B4  If it is zero, branch
00B9B6  If it is negative, return
00B9B8  Write data
00B9BC \
00B9BD  | Move on
00B9BE  |
00B9BF /
00B9C2 \
00B9C3  |
00B9C4  | Move on
00B9C6  |
00B9C7  |
00B9CA /
00BD8D \ If the timer is not zero, branch
00BD8F / (if it is not time to "flash")
00BD91 \
00BD93  | If we finished flashing branch
00BD95 /
00BD97 \ Set timer
00BD99 /
00BDA0 \
00BDA2  | Get which step we are on
00BDA5 /
00BDA7 \ If we are halfway through it or more, branch
00BDAA /
00BDB3  Change the palette
00BDD0  Change the palette
00BDE5 \ Increase the timer
00BDE7 /
00BDE9  Update CGRAM
00BDF3 \
00BDF5  | If the amount of time left on the title screen is not equal to $0225,  branch
00BDF8 /
00BDFA \
00BDFD  | Reset timers
00BDFF /
00BE05  Decrease the timer
00BE08  Palette of the shining ALL*STARS logo
00C060 For SMB:TLL
00C062 Set loop count
00C064 \
00C067 /Branch if Mario
00C069 Get Luigi palette data
00C06F Get Mario palette data
00C073 Write palette data to RAM
00C07F Write princess peach thank you message
00C083 Mario portrait Palette of princess saved sequence
00C0A3 Luigi portrait Palette of princess saved sequence
00C0D2 \
00C0D4 /Main Screen designation
00C0D7 \
00C0D9 /Sub Screen designation
00C0DC 16 bit xy
00C0DE \
00C0E1 /Push world number onto stack
00C0E2 \
00C0E6 / Branch if loaded game isn't SMB1
00C0E8 \ When SMB1
00C0EB / If not more difficult quest flag, branch
00C0ED \
00C0EF / Set world number to... 0C?
00C0F2 \
00C0F4 /Clear high byte
00C0F5 \
00C0F8  | Player << 2
00C0F9  | 
00C0FA / into $00
00C0FC \ World number
00C0FF  | Bit is set when in world D
00C101  | >> 2
00C102  | 
00C103  | OR with the player thing
00C105 / to index
00C106 \
00C107 /restore world number
00C10A \
00C10D /Get message index
00C117 \ Check if the written byte is FF
00C118 / if so, return
00C126 Indices to the messages of peach to the player
00C12E  "Thank you Mario! The kingdom is saved!
00C1D2  "Thank you Mario for restoring peace to our
00C284  "Thank you Luigi! The kingdom is saved!
00C328  "Thank you Luigi for restoring peace to our
00C471 \ Set player X position to A0
00C473 / (This happens when the princess hugs the player and gets pushed back 2 pixels or so)
00E3D2 \
00E3D5  |
00E3D6  |
00E3D7  | Jump to pointers according to the world number
00E3DA  |
00E3DC  |
00E3DF  |
00E3E1 /
00E3E4 $00 - World 1
00E3E6 $01 - World 2
00E3E8 $02 - World 3
00E3EA $03 - World 4
00E3EC $04 - World 5
00E3EE $05 - World 6
00E3F0 $06 - World 7
00E3F2 $07 - World 8
00E3F4 $08 - World 9
00E3F6 $09 - World A
00E3F8 $0A - World B
00E3FA $0B - World C
00E3FC $0C - World D
018000 Graphics. 
028000 more graphics!
038000 Jump to the main game: SMB1
038003 Jump to NMI data of SMB1
038006 Jump to SMB1 IRQ Data
038011 Show "Pirated game" message
038015 \Waste time for no reason?
038016 /
038017 \
038019  |
03801D  |
038021  |Check if the ROM is pirated. If so
038023  |Show the pirated message
038025  |
038029  |
03802D /
03802F Set interrupt flag
038030 \
038033  |Disable NMI, IRQ, DMA, HDMA, Auto-read joypad
038036 /
038039 \Forced blanking
03803B /
03803E \Set program bank to current bank
03803F /
038040 \Stop most of the animations
038042 /
038050 \Load the current level number loaded from save
038054  |Should be 0, because you can't specify which level you want to load in SMB1.
038057 /
03805B \Load the current world number loaded from save
03805F  |
038062 /|Store into world number to load from the title screen
038066  | Current world number * 4 + current level number
038067  |
038068  |
038069 /
03806D Into X
03806E \Load from level table
038072  |Store into current level number loaded from save
038076 /|And some other address
03807A / And into current level
03807D \OBJ size: 8x8 and 16x16 sprites
03807F /OBJ VRAM: $C000
038082 \BG1 Tilemap address: $0000
038084 /Enable BG1 tilemap horizontal mirroring
038087 \BG2 Tilemap address: $1000
038089 /Enable BG2 tilemap horizontal mirroring
03808C \BG3 Tilemap address: $B000
03808E /Enable BG3 tilemap horizontal mirroring
038091 no BG4, but set it just in case.
038094 \BG1 and 2 gfx address: $2000
038096 /
038099 \BG3 and 4 gfx address: $A000
03809B /
03809E Nothing special about screen mode/video select
0380A1 unused?
0380A4 Set level mode to Title Screen
0380B0 Reset scroll registers
0380B4 \Game mode and character size
0380B6 /Mode 1 with mode 1 bg3 priority bit enabled
0380B9 No screen pixelation/mosaic
0380BC \
0380BE /Main screen designation
0380C1 Sub screen designation
0380C4 Window mask settings for BG1 and 2
0380C7 Window mask settings for BG3 and 4
0380CA Window mask settings for OAM and color window
0380CD Color addition select
0380D0 \CGADSUB settings
0380D2 /
0380D5 \
0380D7  |
0380DA  |Set fixed color
0380DC  |
0380DF  |
0380E1 /
0380E4 HDMA enable: none
0380E7 \Enable f-blank
0380E9 /
0380EC Reset lag thing.
0380F2 Related to when fading in and out
0380F5 Clear pause flag
03810F Clear flag to upload animated graphics
0381E5 In debug mode
038256 \Fade out music
038258 /
038269 \
03826C  |Branch if paused
03826D /
0382F1 High bytes of VRAM addresses used by the stripe image uploader
038308 \
038309  |Set program bank to this one
03830A /
03830B Read to enable NMI
03830E \ Forced blank if
038311  |the screen is pitch-black
038313  |
038315 / Otherwise, normal brightness
038318 Reset HDMA
03831B \
03831E /Make sure the game runs at normal fps?
038326 \
038329  |
03832C  |
03832E  |
038331  | 
038333  |
038335  |
038337 / Stripe image uploader
03833A \
03833D  |
03833F /
03834F Stripe image uploader
038352 \
038353  |
038355  |Direct page: $4300
038356  |
038358 /
038359 16-bit XY
03835B \Address increment mode: after every write to 2119
03835D /Also, every 32 bytes. so vertical
038360 \2 regs write once
038363 /DMA destination: $2118
038365 What is this address?
03836A \DMA source bank: $7F
03836C /
038376 \
03837A /Set VRAM address
03837D \
03837E  |
03837F  |
038382 /DMA source address: $0000 + 4 something?
038384  DMA size: $0040 bytes
038386 \
038387  |
038388  | add $42 bytes
03838B /
03838C \Enable DMA
03838F /
03839D What is this address?
0383A2 \
0383A4 /DMA source bank: $7F
0383AE \
0383B2 /Set VRAM address
0383BC DMA size: $0038 bytes
0383E9 CGRAM address: $00
0383EC \
0383EF /1 reg write once to $2122
0383F1 \
0383F4  |
0383F6  | DMA source: $00:1000
0383F8  | Length: 512 bytes
0383FA  |
0383FD /
0383FF \
038401 /Enable HDMA channel 0
038413 \
038416  | Branch if stripe image destination VRAM index is not 6
038418 /
038448 \
038449  |
03844B  |Direct page: $2100
03844C  |
03844E /
03844F \$7E:120E: Window 2 left position
038452 /
038454 \$7E:120F: Window 2 right position
038457 /
038459 \$7E:1210: Direct color register
03845C /
03845E \$7E:1209: Color addition select
038461 /
038463 \$7E:120A: CGADSUB
038466 /
038468 \$7E:1204: Window mask settings for BG1 and 2
03846B /
03846D \$7E:1205: Window mask settings for BG3 and 4
038470 /
038472 \$7E:1206: Window mask settings for OAM and color wind
038475 /
038477 \$7E:120B: Main screen designation
03847A /
03847C \$7E:120C: Subscreen designation
03847F /
038481 \$7E:1207: Window mask designation for main screen
038484 /
038486 \$7E:1208: Window mask designation for sub screen
038489 /
03848B \$7E:0EE0: Direct color register
03848E /
038490 \$7E:0EE1: Direct color register
038493 /
038495 \$7E:0EE2: Direct color register
038498 /
03849A \$7E:120D: Screen mode
03849D /
03849F \$7E:0E7E: Screen pixelation/Mosaic
0384A2 /
0384A4 \Zero out BG3 horizontal scroll
0384A6 /
0384A8 \
0384AB  |If starry night IRQ flag is set
0384AD  |
0384B0  |$7E:0EEE-$7E:0EEF: BG2 Horizontal scroll
0384B2  |
0384B5 /
0384B7 \
0384BA /Fade in/out things?
0384BC \$7E:073F: BG1 xscroll offset low byte
0384BF /
0384C1 \$7E:071A: BG1 xscroll offset high byte
0384C4 /
0384C6 \
0384C9 /If not Starry Night BG flag
0384CB \$7E:0EFD: BG2 xscroll offset low byte
0384CE /
0384D0 \$7E:0EFE: BG2 xscroll offset high byte
0384D3 /
0384D5 \$7E:0E70: BG1 yscroll offset low byte
0384D8 /
0384DA BG1 yscroll offset high byte hardcoded at #$00
0384DC \$7E:0ED2: BG2 yscroll offset low byte
0384DF /
0384E1 \$7E:0ED3: BG2 yscroll offset high byte
0384E4 /
0384E6 recover direct page
0384E7 \$7E:1203: HDMA enable
0384EA /
0384ED \
0384EF /If IRQ is active
0384F2 Read IRQ flag for whatever reason
0384F7 \$7E:0EF2: V-timer
0384FA  |With $00 as vtimer high byte
0384FD /
038500 \
038503 /Store zero to h-timer
038506 \
038508 /Enable NMI, IRQ, and auto joypad-read enable, only
03850B when IRQ itself is enabled.
03850C Return
03850D \SMB1 IRQ Routine
03850E  |Set current program bank
03850F /
038510 \If IRQ isn't fired yet, return
038513 /
038515 \If this bit is set, return
038518 /(Seems like it is used as "IRQ enable flag")
03851A \"Starry night" IRQ mode
03851D /If it is clear, go to normal IRQ mode
03851F \
038522 /Wait till H-blank
038524 \ Used with Starry BG IRQ mode
038527  |Set BG2 Horizontal scroll
03852A  |
03852D /
038530 Return
038532 \
038535 /Wait till H-blank
038537 \
03853A  |Set BG3 horizontal scroll
03853D  |
038540 /
038543 \Recover program bank & return
038544 /
038545 \
038548  |Set up 'operation modes' (RAM $7E:0770)
038549  |see pointers below for effects
03854A /
03854D $00 Title screen
03854F $01 Normal playing and controls
038551 $02 Defeated Bowser
038553 $03 Game Over
038555 \
038558  |Branch if operation mode is Defeated Bowser
03855A /
03855C \
03855E /Branch if operation mode is Main
038573 \
038576  |Branch if Timer to disable start button = 0
038578 /Otherwise, keep decreasing
03859C \If within pause screen
03859F /Skip "pause game" button check function
0385A1 \
0385A4  |Get controller data based on player #.
0385A7  | if start is not pressed, continue
0385A9 /
0385AB \Else, pause the game
0385AD /Timer to disable start button (works while outside pause, fading into it)
0385B0 \
0385B2  |Tone down volume of music
0385B5  |Play pause sound
0385B7 /
0385C3 \
0385C4  |Direct page: $0B00
0385C6  |
0385C7  |
0385C9 /
03869B \
03869E  |Clear sound registers so no sound plays during title screen
0386A1  |
0386A4 /
0386D1 \"WRONG" sound
0386D3 /
0386E6 \
0386E8  |
0386EC  |Reset highscore and its display
0386F0  |
0386F4  |
0386F8  |
0386FC  |
038700  |
038703  |
038706  |
038709  |
03870C  |
03870F /
038712 \High score resetted sound
038714 /
03872C Reset highscore
03873A Reset highscore
03879C \Collected a coin sound
03879E /
0387D8 \"CORRECT" sound
0387DA /
0387F0 Enable hidden 1-up flag
0387FC "More difficult quest" flag. Sets $076A too and shows star next to world
0387FF "More difficult quest" flag
038883 \ Current demo action in X
038886  |
038889  |If timer isn't 0 yet, branch
03888B  |
03888C  |
0388BB Princess/toad saved sequence activator
0388D0 \
0388D3  |If world 8, jump to other pointers
0388D5  |
0388D8  |
0388DA /
0388EC $00 - Collapse bridge if necessary
0388FA $00 - Collapse bridge if necessary
038914 $0D - Wait until player pushes start button
038916 $0E - Player chose to continue the game
03892C \
03892F  |
038932  |
038935  |Zero out all controller data
038938  |
03893B  |
03893E  |
038941 /
038944 \
038946 /End of level timer to score conversion speed
03894C \
03894F /Return if small mario
03896B \
03896D /Princess got rescued music.
038970 Upload new palettes for the kiss sequence
038989 Wait until player pushes the start button
03898E Player chose to continue the game
03899D \
03899F  |If the "Timer converted to score" sound...
0389A1 /...is already playing, skip the SFX write
0389A3 \"Timer converted to score" sound
0389A5 /(At level end)
0389AB \
0389AE  |Check if timer is 000 during decrement
0389B1  |at level end. If it is not 000, return
0389B4 /
0389B6 \Stops the "Timer converted to score" sound
0389B8 /(at level end)
038ADE \
038AE1  |
038AE3 / If current world is 8 or higher, branch
038AE5 \
038AE7  |
038AEA  |Zero out player's current level number (set it to level 1)
038AED / Set operation mode to 0
038AF0 Increase current world by 1
038AF3 \
038AF5 /Lock animations (for some reason)
038AF8 Swap players if necessary
038AFB Set level number and map type
038AFF Increase operation mode to $01 (because it was set to 0 earlier)
038B02 \
038B04 /Game operation mode = main
038B5A Increase lives by one
038B5E \1-UP sound
038B60 /
038C18 \
038C1B  | Current screen routine to execute
038C1C  |
038C1D /
038C20 $00 - 
038C22 $01 - 
038C24 $02 - 
038C26 $03 - 
038C28 $04 - 
038C2A $05 - 
038C2C $06 - Display intermediate
038C2E $07 - 
038C30 $08 -
038C32 $09 -
038C34 $0A -
038C36 $0B -
038C38 $0C -
038C3A $0D -
038C3C $0E - Write top score
038C50 \
038C53  | Save background color and current player status
038C54  | to stack
038C57 /
038C58 Small powerup
038C5B \
038C5D /Set background color
038C64 \
038C65  | Restore background color and current player powerup
038C68  |
038C69 /
038C6C To next screen routine
038CF0 "More difficult quest" flag. Sets 076A too and shows star next to world
038D7B \
038D7E /Skip if game operating mode is title screen
038D80 \
038D82 /If game over, display game over instead.
038D84 \
038D87 /Branch if an exit is taken
038D89 \
038D8B  | Check for castle level
038D8D / If castle, branch
038D8F \
038D92 / Go to next screen task if level preview skip flag is set
038DC2 No screen pixelation/mosaic
038F16  Move to next screen routine task
039196 "More difficult quest" flag. Sets 076A too and shows star next to world
03922D \If done rendering the level, return?
039230 /or: If no objects flag is set, return?
039232 16-bit AXY
039234 \ 
039237 / ??
039239 \Load layer 1 drawing handler
03923C /Store it here?
03923F \
039240 /Swap high and low bytes and store it here.
039352 yeah waste one more by for a mere RTS you genius
039387 Increase the counter for the amount of bounce blocks you've created.
039440 MAP16 tile 000  
039B08 \Execute Pointer Short routine
039B09  |
039B0A  |(ExecutePtrShort)
039B0B  |
039B0D  |
039B0E  |
039B10  |
039B11  |
039B13  |
039B15  |
039B16  |
039B18  |
039B1A /
039B1D Bunch of DMA routines
039B1F Direct page = $4300. DMA mode: 1 reg write once
039B21 OAM address low byte: 00
039B24 \Dest: data for OAM write $2104
039B27  |Source: $00:0800
039B29  |
039B2C /
039B2E \$220 bytes
039B31 /
039B33 \
039B35  |Enable DMA
039B38 /
039B3A \
039B3C  |Regular sprite priority.
039B3F / OAM address: $0000
039B4A \Flag to disable animated graphics
039B4D /
039B4F \Flag to upload animated graphics
039B52 /
039B56 \
039B59 /VRAM address
039B5C \2 regs write once
039B5F /to 2118
039B61 \
039B64  |
039B66  | DMA source: [$7E0285]
039B69 /
039B6B \DMA size: $0288
039B6E /
039B70 enable DMA
039B91 Clear flag so graphics animate again
039BBC Stripe image uploader. Stripe image format:
039BBE \VVVVVVVV VVVVVVVV DRLLLLLL LLLLLLLL <data bytes>
039BC0 /DMA source: bank 3
039BC3 Clear something
039BC5 Go into a loop
039BC8 \Load next byte
039BCA /If positive, go process stripe image
039BCC \else, return.
039BCE /
039BCF \
039BD1  |Store stripe image VRAM destination in 
039BD2  |RAM $03-$04.
039BD4  |
039BD6 /
039BD7 \
039BD9  |Get direction bit.
039BDB  |0 = Horizontal, 1 = Vertical
039BDC  |
039BDD /
039BDF \
039BE1  |Get RLE bit. 1 = RLE, 0 = normal
039BE3  |
039BE5  |
039BE6  |
039BE7  |DMA transfer becomes RLE if necessary
039BE8  |
039BEA /
039BED \DMA destination: $2118, $2119
039BEF /
039BF2 16-bit A
039BF4 \Set DMA VRAM dest
039BF6 /
039BF9 \
039BFB  |Get Length bytes
039BFC  |
039BFF  |
039C00  |
039C01 /
039C04 \
039C05 /Get at next bytes
039C06 \
039C07  |Setup DMA source
039C08  |
039C0A /
039C0D \If not RLE, branch
039C0F /
039C11 \
039C12  |Setup RLE DMA size
039C13  |
039C14  |
039C15 /
039C18 8-bit A
039C1A \
039C1C  |Set RLE DMA flag
039C1D  |
039C1E  |
039C1F /
039C22 \
039C24 /Get RLE DMA direction. Either horz or vert
039C27 \Enable RLE DMA. This will DMA the low bytes of VRAM
039C29 /data.
039C2C \RLE DMA dest: $2119
039C2E /
039C31 \
039C33  |
039C34  |Setup RLE DMA source
039C36  |
039C37 /
039C3A \Setup RLE VRAM dest
039C3C /
039C3F Setup RLE size
039C42 \
039C45  |
039C47  |
039C48  |Increase pointer to stripe image data
039C49  |
039C4B  |
039C4C /
039C4E \
039C50  |Set VRAM DMA mode: Either horz/vert
039C52 / normal address increment mode
039C55 \Enable DMA to upload stripe image to VRAM
039C57 /
039C5A \If done, return
039C5C /
039C5E Otherwise, process next chunk.
039C61 \Return from stripe image uploading.
039C63 /
039D91 \
039D93 /F-Blank
039D96 \
039D98  |Palette 8, color 1 = white
039D9B  |
039D9D /
039E0C \ Load current world
039E0F  |If it is smaller than world 08
039E11 /Skip the "set level number & map type" routine
039E13 set level number & map type
039E80 "More difficult quest" flag
039EA2 \Load background image
039EA4  |If it is the 'real' Bowser's Castle background
039EA6 /branch
039EA8 \If it is the underwater Bowser's Castle background
039EAA /Branch
039EAC \Fade out the music
039EAE /
039F77 "More difficult quest" flag. Sets $076A too and shows star next to world
039F7A "More difficult quest" flag
039F97 "More difficult quest" flag
039F9A "More difficult quest" flag. Sets 076A too and shows star next to world.
03A0B0 $00
03A0B2 $01
03A0B4 $02
03A0BC \Game over music
03A0BE /
03A0E9 \Mario collected a coin sound
03A0EB /
03A120 \Mario collected a coin sound
03A122 /
03A142 Frame counter which runs when the game is paused
03A16D \Pause sound
03A16F /
03A172 \Music fades out
03A174 /
03A17C \
03A17E /"Save & Continue/Save & Quit" sound
03A1C7 Enable hidden 1-up flag
03A1F4 \Residual from NES: store world number into secret continue function variable
03A1F7 /
03A204 Set level number and map type
03A208 \Skip clear powerup if new world from rescuing the princess
03A20B /
03A20D \Skip clear powerup if 2 players
03A210 /
03A212 \
03A214  |Set small player flag
03A217 / Clear powerup
03A21A set some timer flag
03A21D Clear everything freezes timer
03A220 set player action to 0
03A222 Operation mode task to execute is 0
03A225 \
03A227 /Operation mode: main
03A22C \Branch if single player
03A22F /
03A231 \
03A234 /Branch if previous player's extra lives is below 0
03A236 \
03A239  |
03A23A  |
03A23D  |Swap previous player's small flag with current player's
03A240  |
03A241 /
03A244 \
03A247  |
03A248  |
03A24B  |Swap previous player's powerup with current player's
03A24E  |
03A24F /
03A252 \"More difficult quest" flag
03A255  |
03A256  |
03A259  |Swap "more difficult quest" flag with previous player
03A25C  |
03A25D /
03A260 \
03A263  |Swap current player
03A265 /
03A268 And the current player's image
03A26B \
03A26D  |Swap things like current player's coins, lives, levels, etc
03A270  |
03A271  |
03A274  |
03A277  |
03A278  |
03A27B  |
03A27C /
03A305 Increment column position RAM
03A30D Increment column position RAM
03A5CC 16-bit XY
03A5CE Load 0004 into X
03A5D1 Store zero in 3-byte object flag
03A5D4 Store X into $9E: Sprite index
03A5D9 Offset of level object data
03A5DC \
03A5DE  |If end-of-area, skip all of this
03A5E0 /
03A64F Increase level data index accordingly
03A675 \
03A677  |
03A67A  | Increase index to level data by 2. If it's a 3-byte object, increase by 3.
03A67D  |
03A680  |
03A683  |
03A685 /
03A68F Clear the 3 byte object flag
03A77D Offset of current level data in index
03A780 Get level data's high nibble (x-coordinate?)
03A79C \
03A79E  | If vertically extendable object
03A7A0 / Set flag for 3 byte object
03A7A3 Increase level data index accordingly
03A7A6 \
03A7A8 / If vertically extendable objects, branch
03A7B3 \
03A7B5  |
03A7B7  |
03A7B8  |
03A7BA  |
03A7BB  | Build vertically extendable objects appropriately and place them into the level
03A7BC  |
03A7BF  |
03A7C1  |
03A7C4  |
03A7C6 /
03A7C9 $00 - Warp pipe
03A7CB $01 - $0733-dependant object. 00 = normal, green platform. 01 = mushroom, 02 = bullet bill cannons
03A7CD $02 - Row of bricks
03A7CF $03 - Row of stones
03A7D1 $04 - Row of coins
03A7D3 $05 - Column of bricks
03A7D5 $06 - Column of stones
03A7D7 $07 - Decoration pipe
03A7D9 $08 - Hole object
03A7DB $09 - Pulley rope
03A7DD $0A - Bridge (high)
03A7DF $0B - Bridge (mid)
03A7E1 $0C - Bridge (low)
03A7E3 $0D - Water/lava pit
03A7E5 $0E - Row of Coin Question blocks (high)
03A7E7 $0F - Row of Coin Question blocks (low)
03A7E9 $10 - 
03A7EB $11 - 
03A7ED $12 - 
03A7EF $13 - these point to an rts
03A7F1 $14 - 
03A7F3 $15 - 
03A7F5 $16 - 
03A7F7 $17 - 
03A7F9 $18 - 
03A7FB $19 - 
03A7FD $1A - 
03A7FF $1B - 
03A801 $1C - 
03A803 $1D - 
03A805 $1E - 
03A807 $1F - Underwater horizontal pipe
03A809 $20 - Empty block
03A80B $21 - Springboard object
03A80D $22 - 
03A80F $23 - 
03A811 $24 - 
03A813 $25 - 
03A815 $26 - 
03A817 $27 - 
03A819 $28 - 
03A81B $29 - 
03A81D $2A - 
03A81F $2B - 
03A821 $2C - 
03A823 $2D - 
03A825 $2E - 
03A862 "warpzone scroll stop code" ~ SWR | Warpzone setup
03A864 \If world 1-x
03A867 /Set warp zone config to world 1's warps
03A869 adjust config for next checks
03A86A \If map type is not "ground" and world is not 1-x
03A86C  |Set warp zone config to world 4's single warp
03A86D /
03A86F Else set warp zone config to world 4's outside warps
03A870 \
03A871 /Store warpzone config
03A874 Routine to write the "Welcome to warpzone" message
03A877 \Destroy all piranha plants
03A879 /
03A87C \
03A87F  |Flip scroll enabled flag on or off
03A881 /
03A884 Return
03A885 \ Destroy all sprites with sprite number specified in A by setting them
03A887  |off-screen.
03A889  |
03A88B  |
03A88D  |
03A88F  |
03A891  |
03A893  |
03A894  |
03A896 /
03A897 Generators: Bullet Bill, Flying Cheep-Cheep, Stop Generators
03A8A9 \
03A8AB /Set enemy to generate: nothing
03A8AF \
03A8B2  |
03A8B3  |
03A8B4  |Execute routines according to area object styles
03A8B7  |
03A8B9  |
03A8BC  |
03A8BE /
03A8C1 Regular
;Mushroom platforms
;Bullet bill cannons
03A8C7 Get object attributes from level object pointer
03A96B Place tile in Accumulator into level.
03A972 Place tile in Accumulator into level.
03A975 Pulley rope map16 tiles: left corner, middle, right corner
03A978 Get length of pulley rope object
03A97B Initialize tile buffer index
03A97D If starting, render left corner
03A97F \
03A980  |
03A983 /If not at the end, render rope
03A985 Otherwise render right corner
03A986 \
03A989 /render
03A98D Get object attributes from level object pointer
03A995 Pipe top tile
03A99A Pipe bottom tile
03A9BE Place tile in Accumulator into level.
03A9F7 Get pipe height
03A9FA \
03A9FC /Branch if warp pipe
03AA03 Preserve A
03AA04 \
03AA07  |If 1-1, piranha plants do not appear
03AA0A /
03AA11 \Get free sprite slot for the piranha plant
03AA14 /If none, skip
03AA16 \Get Xpos of screen ((AND #$F0>>4)<<4)
03AA19  |
03AA1A  |Add 8 pixels to it
03AA1C  |Store into Sprite X-Position
03AA1F  |
03AA22  |Handle page boundary accordingly
03AA24 /
03AA26 \
03AA28  |Sprite is onscreen in a normal way
03AA2A /
03AA2C \ (A << 4) + $20
03AA2F /Store ypos
03AA32 \
03AA34 /Sprite to generate: Piranha plant
03AA36 Run piranha plant code?
03AA39 Recover A
03AA4A Place tile in Accumulator into level.
03AA52 Get object attributes from level object pointer
03AA5E \ Get free sprite slot (begin-end)
03AA60  |
03AA61  |
03AA63  |
03AA65  |
03AA66  |
03AA68  |
03AA6A /
03AA6B \ Routine only used by piranha plant
03AA6D  |
03AA6E  |
03AA70  |Get free sprite slot (end-begin)
03AA72  |Index = $FF if none
03AA73  |
03AA75  |
03AA77 /
03AA78 Water/lava pit top tiles: Underwater, normal, cave, castle
03AA7C Water/lava pit tiles
03AA7E Get length of object
03AA81 Set row to 10
03AA83 \
03AA85  |
03AA87  |
03AA89 /Set row to 11 if castle level
03AA8A \
03AA8C  |
03AA8F  | Render tile depending on level type
03AA92  |
03AA93  |
03AA94  |
03AA95  |
03AA96 /
03AA99 Height 2
03AA9B Place tile in Accumulator into level.
03AA9E Set row
03AAA2 Set row
03AAA5 Get length of object
03AAAA Coin question block map16
03AAB0 set row
03AAB4 set row
03AAB8 set row
03AABB Get bridge length
03AACB Bridge begin railing tile
03AACF Bridge middle railing tile
03AAD6 Bridge end railing tile
03AAD9 render tile
03AADC go down once
03AADD \bridge height is 1
03AADF  |Bridge tile
03AAE1 /Place tile in Accumulator into level.
03AAF7 Turn current screen x-coordinate (16x16) to pixel coordinate
03AB26 Coin map16, depending on $7E005C
03AB2A \
03AB2C /Load coin map16 tile number
03AB2F Render
03AB4E Get object attributes from level object pointer
03AB53 Empty block map16 tile
03AB57 Place tile in Accumulator into level.
03AB5A Stone map16, depending on $5C
03AB5E Brick map16, depending on $5C.
03AB63 \
03AB65  |
03AB68  |
03AB6A  |If cloud level, set index to $04
03AB6C / Get brick map16 tile number
03AB6F Render
03AB72 \
03AB74 /Get stone map16 tile number and render
03AB77 map16 tile on stack
03AB78 check object length
03AB7D Set vertical height of 1 block high
03AB80 Place tile in Accumulator into level.
03AB83 \
03AB85  |Get brick map16 tile depending on area type and render
03AB88 / Note that in this column code, there's no cloud area override.
03AB8A \
03AB8C /Get stone map16 tile number and render
03AB90 Get object attributes from level object pointer
03AB96 Place tile in Accumulator into level.
03AB99 Get object attributes from level object pointer
03ABB2 Place tile in Accumulator into level.
03ABB8  (A << 4) + $20
03ABC4 Turn current screen x-coordinate (16x16) to pixel coordinate
03ABD5 Get object attributes from level object pointer
03ABD8 Get free sprite slot (begin-end)
03ABDB \Turn current screen x-coordinate (16x16) to pixel coordinate
03ABDE /Store into sprite X-pos, low byte
03ABE1 \Store screen number number into sprite X-pos, high byte
03ABE4 /
03ABE6 (A << 4) + $20
03ABEE \
03ABF0 /Sprite to generate: springboard
03AC2E Get object attributes from level object pointer
03AC3F \
03AC42 /Skip if length already defined
03AC44 \
03AC46 /Branch if not water level.
03AC48 Whirlpool spawning code. Get whirlpool index
03AC4B \Turn current screen x-coordinate (16x16) to pixel coordinate
03AC4E  |
03AC4F  |subtract 10 pixels
03AC51 /store as left extent of whirlpool
03AC54 \
03AC57  |Get page location
03AC59 / subtract with carry, store into page of whirlpool
03AC5C \
03AC5D /Increment length by 2
03AC5E \
03AC5F  |
03AC60  |
03AC61  |Multiply by 16 to get size of whirlpool
03AC62  |
03AC63 /Store into size
03AC66 Increment whirlpool index
03AC67 \
03AC69 /If we didn't reach 5th whirlpool yet, branch
03AC6B Otherwise, back at index 0
03AC6D Store whirlpool index
03AC70 Get map type in x, but it's lost again later?
03AC72 Map16 tile: hole
03AC74 Row number: 9 (bottom)
03AC76 Vertical height of object
03AC78 Store vertical height of object
03AC7B \Get map16 tile of current spot in question of being rendered
03AC7E /If empty, proceed
03AC80 \If middle of green platform, wait until next row
03AC82 /
03AC84 \If middle of mushroom platform, wait until next row
03AC86 /
03AC88 \If coin block
03AC8A /overwrite
03AC8C \If middle part of green platform's brown base w/ shadow, wait until next row
03AC8E /
03AC90 \If middle part of green platform's brown base, wait until next row
03AC92 /
03AC94 \If map16 tile $E8-$FF, wait until next row
03AC96 /($E7 is not included because it's already checked for earlier)
03AC98 \
03AC9A  |If ground tile base, skip ground tile top check
03AC9C  |If ground tile top, overwrite
03AC9E /
03ACA0 \
03ACA2 /If mushroom platform stem, wait until next row
03ACA4 Otherwise, write the map16 tile
03ACA7 Next row
03ACA8 \
03ACAA /Stop rendering if at bottom of screen
03ACAC \Decrement object height and stop if we're done rendering all height.
03ACAF  |
03ACB0 /
03ACB3 Get object attributes from level object pointer
03ACB6 Check object length buffer
03ACB9 Clear carry
03ACBA \if $FF,
03ACBC  | Set specified fixed length in object length buffer?
03ACBD /
03ACC0 Set carry
03ACD0 \Get first byte of level object
03ACD2  |get Y coordinates
03ACD4 /Save as row location
03ACD6 \
03ACD7  |Get next byte of level object
03ACD9  |
03ACDB  |(object number?)
03ACDD  |
03ACDE /
03ACE0 \
03ACE3  | Turn screen X-coordinates from 16x16 to pixel coordinate
03ACE4  |
03ACE5  |
03ACE6  |
03ACE7 /
03ACEE \Account for the statusbar area
03ACEF /
03AD0B \
03AD0C  |
03AD0D  |
03AD0E  |Place tile in Accumulator into level.
03AD11  |
03AD12 /
03AD13 \
03AD14  |
03AD15  |
03AD16  |Check if object is fixed or varied length
03AD19  |
03AD1A /
03AD1B \
03AD1C  |
03AD1D  |
03AD1E  |Turn current screen x-coordinate (16x16) to pixel coordinate
03AD21  |
03AD22 /
03AD23 \
03AD24  |
03AD25  |
03AD26  |Jump to get free sprite slot
03AD29  |
03AD2A /
03AD2B Mysterious, Empty space
03AD60 \
03AD63  |Get "In-game modes"
03AD64  |
03AD65 /
03AD68 $00 Screen goes black
;$01 "Image before level" mode
;$02 Pause timer, Sprites go disappear
;$03 Normal mode
03AF21 \
03AF23  |Player actions
03AF24  |
03AF25 /
03AF28 $00 - Set up level load game timer
;$01 - Autoclimb vine
;$02 - Enter pipe from the side
;$03 - Enter pipe normally
;$04 - Slide on flagpole
;$05 - Player ends level (where he fades out and stuff)
;$06 - Player loses life
;$07 - Player enters level
;$08 - Regular control routine
;$09 - Player changes size
;$0A - Player has injury invincibility
;$0B - Player dies
;$0C - Player obtains fire flower
03AF91 \
03AF93 /Enter pipe/hurt sound
03B035 \
03B039 /Branch if debug mode
03B03E \
03B03F  |
03B042  |Get controller input
03B045 /
03B046 \ 
03B048  |Skip if no input
03B04A  |
03B04C / Branch if controller input is $40
03B04E Clear small player flag.  Controller input is $80
03B051 \
03B053 /Set mushroom powerup
03B058 Clear small player flag
03B05B \
03B05D /Set fireflower powerup
03B060 \
03B063  |If select not pressed, branch
03B065 /
03B067 \ Select pressed.
03B06A  | Pass through objects debug mode flag
03B06D  |
03B06E  |
03B06F  |
03B070  |
03B071 /
03B072 Disable collision detection
03B0C3 Increase lives by one
03B1B4 \Mario died music
03B1B6 /
03B1BC \Set Small Mario flag
03B1BE /
03B1C1 Small Mario powrup
03B1D4 \Set game mode: Fade out to image before level
03B1D6 /
03B35C Enable hidden 1-up flag
03B409 \
03B40B  |If Mario is not dying
03B40D / 
03B4C1 \
03B4C3  |
03B4C5  |Each 7 frames,
03B4C7  |
03B4C9 /Mario is climbing vine sound plays.
03B56B \Mario is swimming sound
03B56D /
03B57B \Mario is jumping sound
03B57D /
03B6AB \Mario threw a fireball sound
03B6AD /
03B6E4 Fireball Xspeed: Right, left
03B6F0 \If fireball exists in any form,
03B6F2  |Go to fireball throw routine
03B6F4 /Otherwise, return
03B6FA \Load Mario's Xpos (Xpos in single page)
03B6FD  |Add $04/$05 to it (Depends on C flag)
03B6FF /Store into Fireball creation Xpos
03B702 \Load Mario's Xpos (Page # player is in)
03B704  |Add $00/$01 to it (Depends on C flag)
03B706 /Store into page of Fireball (not sure)
03B708 \Load Mario's Ypos
03B70B /Store into Ypos of fireball
03B70E \Set the "Mario threw a fireball" flag
03B710 /
03B712 \Mario's direction
03B715  |Decrease with 1
03B716  |Load Horizontal speeds
03B719 /Store into Fireball horizontal speed
03B71B \Y-speed of the fireball when it gets thrown
03B71D /Which is of course, downwards
03B724 Decrease fireball state timer
03B735 Impose gravity
03B7F3 \If timer countdown timer isn't, $00 yet, branch
03B7F6 /
03B7F8 \
03B7FB  |Branch if timer is 000
03B7FE  |
03B801 /
03B803 \
03B806  |
03B807  |Check hundreds, if not $00, branch
03B809 \|
03B80C  |Check the tens and ones. If not $00, branch
03B80F /
03B811 \
03B813 /Time is running out! sound
03B816 \
03B818 /Control the timer countdown speed
03B84B  Erase sprite
03B8E8 Impose gravity
03B952 \Goal music
03B954 /
03B9CD Springboard launch force
03B9D4 \
03B9D7 /Store springboard launch force into player Y speed
03B9DC \Springboard sound
03B9DE /
03B9FD \
03B9FF /Sprite to generate: Vine
03BA01 \
03BA03 /Sprite on screen
03BA05 \Spawn in current screen of course
03BA08 /
03BA0A \Spawn at the brick
03BA0D /Store into Sprite X-Position
03BA10 \
03BA13  |If brick position is at the very top
03BA15  |Spawn vine from the very bottom
03BA17 / (Used in level entrances with the vine animation?)
03BA29 \
03BA2B /Play vine sound
03BA2E Return
03BA76  Erase sprite
03BAF9 \
03BAFB /Sprite to generate: Bullet bill
03BB4B \Bullet bill sound
03BB4D /
03BB7F  Erase sprite
03BBB2 \
03BBB4 /Set extended sprite clipping size?
03BBB9 \
03BBBB  |Get sprite index and clear carry flag
03BBBC /
03BBE5 Impose gravity
03BBF0 Hammer bros hammer y-speed
03BBFC \
03BBFE  |
03BBFF  | Hammer bros hammer x-speed depending on direction
03BC02  |
03BC04 /
03BC0E \Hammer thrown sound
03BC10 /
03BCB9 \
03BCBB  |Iterate through 9 slots of extended sprites
03BCBD  |
03BCBF / Continue iterating if empty slot.
03BCC1 \ If bit 7 set, it's a jumping coin (from [?] blocks)
03BCC2 /
03BCC4 Otherwise, it's a hammer
03BCC7 Continue iterating
03BCCA \
03BCCC  | Check sprite state. if #$01, run jumping coin.
03BCCD /
03BCD1 \
03BCD4  |
03BCD5  | Add camera scrolling X-Speed to the sprite X position and store it there.
03BCD8  |
03BCDB  |
03BCDD  |
03BCDF /
03BCE1 \
03BCE3  |
03BCE5  | Check if floating score reached peak. If so, clear this jumping coin.
03BCE7  |
03BCE9 /
03BCEB Continue iterating through extended sprites.
03BCEE \
03BCEF  |Increase index for next subroutine
03BCF0  |
03BCF2 /
03BCF3 \set downward movement amount
03BCF5 /
03BCF7 \set maximum vertical speed
03BCF9 /
03BD00 Impose gravity
03BD47 Increase lives by one
03BD4B \
03BD4D /1-up sound
03BDBD \Item out of [?] box sound
03BDBF /
03BE73 code related to breaking bricks.
03BE76 Make brick bounce block shatter
03BE78 Get bounce block index
03BE7B \
03BE7E / Skip next instruction if big Mario
03BE80 \Make brick bounce block bounce
03BE82 /
03BF2F \"Mario hits ceiling/shell hits wall" sound
03BF31 /
03BF34 Horizontal speed of bounce blocks: none
03BF39 No vertical speed of Mario
03BF3B \Vertical speed of bounce blocks
03BF3D /
03BF5C Spawn Mushroom
;Spawn Coin
;Spawn Coin
;Spawn 1UP
;Spawn Mushroom (again)
;Spawn Vine
;Spawn Star
;Spawn Coin
;Spawn 1UP
03BF6E \Spawn Mushroom
03BF70 /
03BF72 \Spawn Star
03BF74 /
03BF76 \Spawn 1-Up
03BF78 /
03BF7E \Spawn vine?
03BF80  |Sprite index: $09
03BF83 / Y = ???
03BFA9 \ 
03BFAC  |If there's no SFX playing already
03BFAE  |Shatter bricks sound
03BFB0 /
03BFDE \
03BFE0 /Coin sound
03C113 \
03C115  |
03C117  |If sprite state is #$05, Y = $20, else, Y = $3D
03C119  |
03C11B  |
03C11D /
03C160 Impose gravity
03C181 Impose gravity
03C187 Impose gravity
03C2DB Hide all OAM tiles
03C317 \
03C31A /Skip if no pipe fadeout
03C31C Hide all OAM tiles
03C31F \ Load brightness
03C322  |Inverse the last nibble
03C324  |\<<4
03C325  | |
03C326  | |
03C327  |/
03C328  | Affect all the layers
03C32A /Store into mosaic register
03C32D Also hide player's OAM tiles for good measure (even though they were hidden already)
03C330 \
03C333  |
03C335  | Clear pipe fading flag if brightness is maximum
03C337 /
03C33B \
03C33C  |
03C33E  |
03C340  |
03C343  |
03C346  | Hides all OAM tiles by setting their Y position off-screen
03C349  | and also zeroing out something
03C34C  |
03C34D  |
03C34E  |
03C34F  |
03C350  |
03C352  |
03C353 /
03C354 \
03C355  |
03C357  |
03C359  |
03C35C  | Hides player's OAM tiles by setting their Y position off-screen
03C35D  |
03C35E  |
03C35F  |
03C360  |
03C362  |
03C364  |
03C365 /
03C398 Looks like some empty space.
03C3F5 \
03C3F7  |
03C3F8  |Take the player back 4 pages
03C3FA /
03C3FC \
03C3FF  |Take the screen number back 4 pages
03C400  |
03C402 /
03C405 \
03C408  |
03C409  | Take coordinates of left side of screen back 4 pages
03C40B /
03C40E \
03C411  |
03C412  | Take coordinates of right sight of screen back 4 pages
03C414 /
03C417 \
03C41A  | Take screen number relative to page skips back 4 pages
03C41B  |
03C41D /
03C428 Zero out 16-bit enemy data pointer index
03C42B Zero out page of the most recent sprite
03C434 Set level object data pointer index according to 
03C471 \
03C473 /"Correct" sound
03C487 \
03C489 /"Incorrect" sound
03C4A0 Branch if all maze checkpoints taken correctly
03C4A2 \
03C4A5  | Branch if world 7
03C4A7 /
03C4AE \
03C4B0 /"Incorrect" sound
03C4BC \
03C4BE  | Zero out correct checkpoints counter
03C4C1  | The total checkpoints counter
03C4C4 / 
03C4DA \ Get offset of enemy sprite data
03C4DD  |Check first byte
03C4DF  |If end of data, continue
03C4E1 /
03C4E3 else, jump
03C59A "More difficult quest" flag
03C60B Load Sprite number into A
03C60D \If it is #15 or greater
03C60F  |Branch
03C611 /Transfer A to Y
03C612 \ no need for CLC since the CMP above did that.
03C615  |sprites $1-$14: Add 8 pixels to the sprite Y position
03C617 /
03C61A \
03C61C /Set initialized flag?
03C61F \
03C620  |Sprite number*2, for index purposes
03C621 /
03C622 \
03C625  |
03C627  |Load sprite pointers and jump to them
03C62A  |for the INIT routine
03C62C /
03C62F 00 - Green Koopa
;01 - Red Koopa (Falls from edges)
;02 - Buzzy Beetle
;03 - Red Koopa (Stays on edges)
;04 - Green Koopa (Doesn't move)
;05 - Hammer Bros
;06 - Goomba
;07 - Blooper
;08 - Bullet Bill
;09 - Yellow Paratroopa (Doesn't move)
;0A - Green Cheep-Cheep
;0B - Red Cheep-Cheep 
;0C - Podoboo
;0D - piranha Plant
;0E - Green Paratroopa
;0F - Red Vertical Flying Paratroopa
;10 - Green Horizontal Flying Paratroopa
;11 - Lakitu
;12 - Spiny
;13 - Nothing?
;14 - Red Flying Cheep Cheep Generator
;15 - Bowser's Fire Generator
;16 - Firework Generator
;17 - Bullet Bill/Cheep Cheep Generator
;18 - Disable Lakitu Generator
;19 - Nothing
;1A - Nothing
;1B - Firebar (Clockwise)
;1C - Fast Firebar (Clockwise)
;1D - Firebar (Counter-Clockwise)
;1E - Fast Firebar (Counter-Clockwise)
;1F - Long Firebar (Clockwise)
;20 - Nothing? Related to the firebars above?
;21 - Nothing? Related to the firebars above?
;22 - Nothing? Related to the firebars above?
;23 - Nothing?
;24 - Balance Lift
;25 - Lift (Up then down)
;26 - Lift (Up)
;27 - Lift (Down)
;28 - Lift (Left then right and so on)
;29 - Lift (Fall)
;2A - Lift (Right)
;2B - Short Lift (Up)
;2C - Short Lift (Down)
;2D - Bowser
;2E - Powerup Object
;2F - Vine
;30 - Flagpole
;31 - Star Flag
;32 - Springboard
;33 - Bullet Bill (Just shot)
;34 - Warp Zone
;35 - Toad (World 1-7), Princess (World 8)
;36 - ??? what is this i dont even?
03C6A4 \Podoboo init
03C6A6 /Set Ypos to bottom of the screen
03C6B5 Reset some timer
03C6B8 \Play podoboo sound
03C6BA /
03C6C0 \INIT routine of Toad/Peach. Load current world
03C6C3  |If you are NOT in world 8
03C6C5  |Set Ypos of sprite to $B8 (floor)
03C6C7 \|Otherwise, set Ypos to $70 (inside cage)
03C6C9 /
03C6CC Return
03C6CD \Set Ypos of sprite to $B8
03C6CF /
03C6D1 Sprite initial xspeed. Format: Normal difficulty, hard difficulty
03C6D3 \
03C6D5  |INIT routine for most walking sprites
03C6D8  |Set sprite initial Xspeed depending on difficulty
03C6DA  |
03C6DB  |
03C6DE /
03C722 \ Set sprite direction to left
03C724 /
03C726 \ Set sprite vertical speed to 0
03C728  |
03C72A Set ??? to 0? Related to sprite falling and other movement-related speed.
03C72E \INIT routine of bullet bill
03C730 /Set direction of sprite to left
03C759  Erase sprite
03C799 \
03C79B /Sprite to generate: Lakitu
03C814 Castle firebar rotation speed data. Format:
03C819 When bit 4 is set, the firebar will rotate C-Clockwise
03C81E Find a free sprite slot and place the sprite in the level.
03C821 No sprite horizontal speed.
03C823 \Load sprite number
03C825  |Subtract $1B from it so we get index to 5 fire types
03C826  |Prepare for indexing
03C828 /
03C829 \Get firebar rotation speed
03C82C /Store in spinning speed of firebars
03C82F \Get firebar rotation direction...
03C832 /
03C835 \
03C838  |Sprite Ypos is 4px higher
03C839  |So it will become centered in 1 16x16 block
03C83B /
03C83E \
03C841  |Sprite Xpos is 4px more to the right
03C842  |So it will become centered in 1 16x16 block
03C844 /
03C847 \
03C849  |Handle page boundary stuff or whatever.
03C84B /
03C918 Find a free sprite slot and place the sprite in the level.
03C946 \
03C948  |Find a free sprite slot
03C949  |
03C94C /
03C94E Store the index of the free sprite slot
03C951 Sprite index -> to accumulator
03C952  OR 0x80
03C954 Store into sprite on-screen flag
03C957 \Sprite xpos high byte
03C959 /
03C95C \
03C95F /Sprite xpos low byte
03C962 \
03C964 /Sprite off-screen flag?
03C966 "position of sprites"
03C969 \
03C96C /Sprite Ypos
03C970 Bowser's fireball possible Y positions
03C974 Fireball Y Speed (both directions, but fireball goes 1-way only?)
03C976 \Bowser Fire generator. Timer to spawn next sprite (generators)
03C979 /If $079B != 00, return
03C97B Sprite vertical speed = 00
03C98B \Index of bowser sprite
03C98E  |
03C991  |If there's a bowser sprite present, branch
03C993 /
03C995 \Get timer delay of next fireball spawn
03C998  |make them spawn #$20 frames later by default.
03C999 /
03C99B \If hard flag (levels after 5-3)
03C99E  |
03C9A0  |make fireballs spawn #$10 frames later instead of #$20
03C9A1  |
03C9A3 /Timer to spawn next sprite
03C9A6 \
03C9A9  |Get random value and make the range $00-$03
03C9AB  |
03C9AE  |
03C9AF  |Store bowser fireball Y position and into $041D,x
03C9B2 /
03C9B5 \
03C9B8  |X-Position of fireball = right border of screen + #$20
03C9B9  |
03C9BB  |
03C9BE  |
03C9C1  |
03C9C3 /
03C9C5 Zero out how long bowser holds his breath for firing
03C9CE \Play fire sound effect
03C9D0 /(note: NOT fire breath from bowser)
03C9DC Set sprite on-screen flag
03C9DE A = 00
03C9E4 Generated sprite index to $0F4E
03CABE \
03CAC0  |if RNG == $AA-$FF, y = 0
03CAC3  |else y = 1
03CAC5  |if world == 2, y = 0
03CAC7  |else y = 1
03CAC8  |
03CACB  |
03CACD  |
03CACF  |
03CAD0  |
03CAD1  |
03CAD3 /
03CAD4 \
03CAD7 /Sprite to generate: Red or Green swimming cheep-cheep depending on above pseudocode
03CB22 \
03CB24 /Quake sound?
03CB38 "More difficult quest" flag
03CBB5 \ Generator to create
03CBB7 / Store in this RAM address
03CBBA \ Subtract sprite by $12
03CBBB /
03CBBD \ Multiply by 2
03CBBE / To use it as an index
03CBBF \
03CBC2  |
03CBC4  | Jump to pointer tables below.
03CBC7  |
03CBC9 /
03CBCC 12 - Lakitu generator (?)
;13 - Nothing at all (crashes)
;14 - Red flying cheep cheep generator
;15 - Bowser's fire generator
;16 - Fireworks generator
;17 - Bullet bill/swimming cheep cheep generator
03CBD8 Return
03CBD9 \ Disable lakitu generator sprite
03CBDB  |Find a lakitu, any of them
03CBDE  |
03CBE0  |
03CBE2  |Tell them to go off-screen to the left without doing
03CBE4  |anything.
03CBE7  |
03CBE8  |
03CBEA  |
03CBEC  |
03CBEF  |Disable on-screen flag?
03CBF1 /Return
03CCA8 Get sprite index
03CCAA load 00 into A
03CCAC Load current sprite number
03CCAE \If it is smaller than $15 ($00-$14)
03CCB0 /Skip the next 2 lines. 
03CCB5 Get index to next table
03CCB6 A -> Y
03CCB7 \
03CCBA  |Load 16-bit pointer tables
03CCBC  |
03CCBF  |
03CCC1 /
03CCC4 Sprites $0-$14
;$15 - Bowser's fire generator
;$16 - Fireworks generator
;$17 - Bullet Bill/Cheep Cheep generator
;$18 - Disable Lakitu generator (nothing in MAIN though)
;$19 - Nothing
;$1A - Nothing
;$1B - Firebar (Clockwise)
;$1C - Fast Firebar (Clockwise)
;$1D - Firebar (Counter-Clockwise)
;$1E - Fast Firebar (Counter-Clockwise)
;$1F - Long Fire Bar (Clockwise)
;$20 - Nothing? Related to the firebars above?
;$21 - Nothing? Related to the firebars above?
;$22 - Nothing? Related to the firebars above?
;$23 - Nothing.
;$24 - Lift (Balance)
;$25 - Lift (Down then Up)
;$26 - Lift (Continuous up)
;$27 - Lift (Continuous down)
;$28 - Lift (Left the Right)
;$29 - Lift (Fall)
;$2A - Lift (Continuous right)
;$2B - Short lift (Up)
;$2C - Short lift (Down)
;$2D - Bowser
;$2E - ???
;$2F - ???
;$30 - Flagpole?
;$31 - Timer->Score and level end controller sprite + end level flag?
;$32 - Red springboard
;$33 - Nothing
;$34 - Warp Zone
;$35 - Toad/Princess
03CD12 \Handle sprites $00-$14
03CD14 / Set sprite onscreen flag
03CD2C \
03CD2F  | Update sprite movement when game is not locked
03CD31 /
03CD37 Load sprite number
03CD39 *2
03CD3A Use as index
03CD3B \
03CD3E  |
03CD40  |Jump to the sprite routines
03CD43  |
03CD45 /
03CD48 00 - Green koopa
;01 - Red koopa (walks off ledges)
;02 - Buzzy beetle
;03 - Red koopa (stays on ledges)
;04 - Green koopa (doesn't move)
;05 - Hammer bros
;06 - Goomba
;07 - Blooper
;08 - Bullet Bill
;09 - Yellow paratroopa (doesn't move)
;0A - Green cheep-cheep (slow)
;0B - Red cheep-cheep (fast)
;0C - Podoboo
;0D - piranha plant
;0E - Green paratroopa (leaping)
;0F - Red paratroopa (down & up)
;10 - Green paratroopa (left & right)
;11 - Lakitu
;12 - Spiny (not recommended for direct use)
;13 - "DO NOT USE" (this points to an RTS)
;14 - Red Flying Cheep-Cheep
03CDC0 \Load sprite number
03CDC2  |Sprite number - $24
03CDC3  |
03CDC5 /|*2
03CDC6 /Use as index. Sprite $24 will haxe index $00
03CDC7 \
03CDCA  |
03CDCC  |
03CDCF  |Jump to pointer tables
03CDD1 /
03CDD4 24 - Lift (Balance)
;25 - Lift (Down then up)
;26 - Lift (Up)
;27 - Lift (Down)
;28 - Lift (Left then right)
;28 - Lift (Fall)
;29 - Lift (Right)
03CDE2  Clear enemy interval timer
03CDE5 \ Check if sprite index is that of a [?]-block item
03CDE7 / If not, skip.
03CDFD No cloud terrain
03CE00 Clear sprite flag
03CE02 Clear sprite number
03CE04 Clear sprite state
03CE06 Clear shell chain counter
03CE1A \If jump timer not expired
03CE1D  |
03CE1F /Init podoboo again
03CE22 \
03CE25  | Set movement force according to LSFR random number generator output
03CE27 /
03CE2A \
03CE2C  | Set interval timer again
03CE2E /
03CE31 \ Set jumping speed of podoboo
03CE33 /
03CE35 \If speed is upwards, skip
03CE38 /
03CE3A \
03CE3D  | if Y position is less than $C0, skip
03CE3F /
03CE4B Reset some timer
03CE4E \Podoboo jump sound
03CE50 /
03CE53 Increase some timer
03CE56 Leave behind fire and lava particles
03CE67 \MAIN routine of hammer bros
03CE69  |If not dying, branch
03CE6B /
03CE6D Else, jump if dying.
03CE70 \ Hammer bros jump timer
03CE73  |If jump timer reached 00, make hammer bros jump
03CE75 / else, decrease timer and continue.
03CE78 \
03CE7B  |If $04,$08 or $0C
03CE7D /Branch
03CE7F \If hammer throw timer ($03A2) is not 00
03CE82 /Branch
03CE84 \
03CE87  | Set hammer throwing timer according to hard world (post 5-3) flag
03CE8A /
03CEE9  Hammer bros forwards walking speed
03CEF1 \ Hammer bros backwards walking speed
03CEF3 /
03CEF5  Set sprite direction to right
03CEF7 \SUB_HORZ_POS
03CEFA / Branch if player is to the right of the hammer bros.
03CEFC  Set sprite direction to left
03CEFD \ Check if Hammer Bros. has waited long enough
03CF00 /
03CF02 \ Hammer bros forwards walking speed after he has waited long enough.
03CF04 /
03CF06 Set sprite direction
03CF69 "More difficult quest" flag
03CF86  Erase sprite
03D068 \
03D06B  |
03D06C  | Subtract sprite X position with sprite X speed
03D06E  |
03D071  |
03D073  |
03D075 /
03D397 0 S:01FF P:EnvMXdIzc HC:0206 VC:000 FC:00 I:00
03D399 0 S:01FF P:EnvMXdIzc HC:0222 VC:000 FC:00 I:00
03D39B 0 S:01FF P:EnvMXdIzc HC:0238 VC:000 FC:00 I:00
03D3DE \
03D3E0  |If not dying, branch
03D3E2 /
03D3E4 Otherwise, take jump when dying.
03D4D0 \
03D4D3  |Check if Bowser still exists
03D4D5  |(He could've been killed by fireballs)
03D4D7 / If he doesn't exist, skip bridge destruction
03D4D9 Store bowser's sprite index into current sprite index
03D4DB \
03D4DD /If Bowser is in a normal state, destroy bridge
03D4DF \
03D4E1 /If Bowser isn't in a defeated state (fall down bridge), remove bridge
03D4E3 \
03D4E6  |If Bowser sprite is not low enough yet, branch
03D4E8 /
03D4EA \Flag to not play music?
03D4ED /
03D4EF \Toad/Princess saved fanfare music
03D4F1 /
03D4F7 Go to next command
03D508 \Amount of delay until the next bridge tile collapses
03D50A /
03D532 \
03D534 /Bowser bridge crumbling sound
03D56D  Erase sprite
03D666 Get timer delay of next fireball spawn
03D669 \If hard mode (after 5-3)
03D66C  |
03D66E  |Timer -= #$10;
03D66F  |
03D671 / store into time until next sprite gets generated
03D674 \Activate bowser fire generator
03D676 /
03D6AF \
03D6B2  |Play real bowser battle music at world 8
03D6B4 /
03D6B6 "real" bowser battle music
03D6BA \"fake" bowser battle music
03D6BC /
03D6C1 \
03D6C3 /Sprite to generate: Bowser
03D6F1 How fast the bowser fire generates.
03D6F9 \
03D6FC  |Get timer delay of next fireball spawn
03D6FF  |Returns: Timer delay in A
03D702  |
03D704  |
03D707  |
03D70A /
03D749 Compare with possible bowser fireball Y positions
03D771 \
03D773 /Firework sound
03D7B2 \
03D7B5  |Flagpole task control
03D7B7 /
03D7B9 ExecutePtrShort
03D7BC $00 - Nothing
;$01 - Check if firework is applicable
;$02 - Award points
;$03 - Raise star flag and launch fireworks
;$04 - Delay to level fadeout
03D7EB \
03D7ED /Timer to score conversion sound
03D7F4 \SMAS menu 'zooming' sound (after pressing start in hall screen)
03D7F6 /
03D914 Lift (balance) movement code
03D91A  Erase sprite
03DC03 \
03DC05  | If cheep-cheep, exit
03DC07 /
03DC09 Get horizontal coordinate of left side of screen
03DC0C \
03DC0E  | Check for hammer bros and piranha plant sprites
03DC10  | Add 56 pixels if those.
03DC12  |
03DC14  |
03DC16 /
03DC18 \Subtract 72 pixels from horizontal coordinate earlier
03DC1A /Regardless of the sprite
03DC1C \
03DC1F  |
03DC21  |
03DC23  |
03DC26  |
03DC27  |add 72 pixels to the right side horizontal coordinate
03DC29  |
03DC2B  |
03DC2E  |
03DC30  |
03DC32  |
03DC35 /
03DC37 \
03DC39  | if enemy object is too far left, branch to erase it
03DC3B /
03DC48 \
03DC4A  |
03DC4C  | Do not erase the following sprites when too far to the right:
03DC4E  | Hammer bros, piranha plant, flagpole, star flag (at end of level), springboard
03DC50  |
03DC52  |
03DC54  |
03DC56  |
03DC58  |
03DC5A  |
03DC5C /
03DC5E Erase sprite if necessary
03DC62 looks like empty space
03DCCD Sprite to generate when you kill Bowser with fireballs. 
03DCD8 \
03DCDA /Shell kick sound
03DD35 \
03DD38  |
03DD3B /Sprite to generate: Bowser killed sprite depending on the world
03DDB4 \Shell kick sound
03DDB6 /
03DE02 \You got powerup sound
03DE04 /
03DE07 \ If you obtained a mushroom or fireflower
03DE0A  |skip this code (to another code)
03DE0C  |
03DE0E  |If you got a 1-up
03DE10 / skip this code (to another code)
03DE12 \ Otherwise enable starman stuff.
03DE14  |You got the star powerup music.
03DE17  |Set the timer of the starman powerup.
03DE19 /
03DE1C Return
03DE1D \If you got a mushroom go branch
03DE20 /
03DE22 If it is NOT fireflower, return
03DE24 useless check, the only values can be $00-$01
03DE28 \Set fireflower powerup
03DE2A /
03DE31 Get sprite index
03DE33 Set "fireflower get" animation
03DE37 \
03DE39 /Get 1up
03DE3C \
03DE3E /No SFX?
03DE42 \
03DE44 /Set Mario's powerup
03DE47 Set "Mario got a powerup" flag
03DE49 Mario standing still flag?
03DE4B Goto powerup stuff
03DEE7 \Shell kick sound
03DEE9 /
03DF5F \
03DF61 /Enter pipe/hurt sound
03DF70 \Everything freezes timer
03DF72 /
03DF8A \
03DF8C /Mario died music
03DF8F \
03DF91 /...
03DFAC \Jump on enemy sound
03DFAE /
03E026 "More difficult quest" flag
03E1B1 \
03E1B3 /No sound
03E309 \When "pass through blocks" flag is enabled
03E30C /return.
03E30E \
03E310  |When in death animation
03E312 / return
03E314 \When on flagpole?
03E316 /return
03E318 \
03E31A  |If swimming, make player state 01
03E31D /branch
03E31F \
03E321  |If player state is 00, make it 02
03E323  |If player state is 03, keep it 03
03E325  |
03E327  |
03E329 /
03E32B \
03E32D  |If position of Mario is NOT inside range --
03E32F /(AKA anywhere he can shoot fireballs), return
03E333 note to self: look at what this store does.
03E336 \
03E339  |Branch if player Y-position is inside the game
03E33B / (AKA not in a bottomless pit)
03E33D Return
03E33E Block interaction routine
03E340 \If Mario is ducking, branch, #$0E into $EB
03E343 /
03E345 \If Small Mario, branch, #$0E into $EB
03E348 /
03E34A \
03E34B  |If swimming, branch, #$07 into $EB
03E34E  |
03E350 /If anything else (normal non-small mario), #$00 into $EB
03E351 \Set Mario's hitbox for object interaction?
03E354 /
03E356 Hitbox size to Y
03E357 Mario Small Flag to X
03E35A \If Mario isn't ducking
03E35D /branch
03E35F Mario is ducking, so Mario Small flag index indicates mario = small
03E360 \Mario's Y position
03E363  |If it's smaller than $20 (Small mario), or $10 (big mario)
03E366 /branch (to make mario not interact w/ objects on/above statusbar)
03E371 \Check if tile is E9 or EA, and if so, play the coin sound
03E374 /Then branch. If not tile E9 or EA, continue.
03E376 \If Mario y-speed is that of falling, branch
03E378 /
03E397 \ Executes as soon as mario hits a cement-block solid
03E399  |block from below which does NOT spawn ANYTHING
03E39C  |Play sound, set Y-speed to downwards
03E39E /
03E48F \
03E491 /Enter pipe/hurt sound
03E556 \Music Fade Out
03E558 /
03E55B \Flagpole sound
03E55D /
03E582 \
03E585  |If player Y-position is not above the flagpole
03E587  |
03E589 \|Player action: climb a vine/slide down the flagpole
03E58B /
03E58D \Player state: slide down the flagpole
03E58F /
03E591 \Store zero to player X-speed
03E593  |
03E595 /Full left movement, minimal right movement flag?
03E60B \
03E60D /Springboard launch force
03E6A1 Enable hidden 1-up flag
03E6AF \
03E6B1 /Enter pipe/hurt sound
03E706 0 S:01FF P:EnvMXdIzc HC:1062 VC:000 FC:00 I:00
03E709 0 S:01FF P:EnvMXdIzc HC:1078 VC:000 FC:00 I:00
03E70C 0 S:01FF P:EnvMXdIzc HC:1094 VC:000 FC:00 I:00
03E717 \
03E719 /Coin sound
03E71C Return
03E8A1 \Hit hard block sound
03E8A3 /
03E8BC SUB_HORZ_POS. Distance between Player and the sprite gets stored in $00
03E97C \
03E97E /Hit hard block sound
03EB3F  Mario<->block interaction "offset". Big Mario, Big swimming mario, Small mario
03EB86 \
03EB89  |
03EB8A  |X-position of Mario sprite
03EB8D  |
03EB8F  |Screen of player
03EB91  | 
03EB93  |
03EB95  |
03EB96  |
03EB98  |
03EB99  |
03EB9A  |
03EB9B /
03EB9C put values in $06 for indirect pointer?
03EBA1 \Y-position of Mario sprite
03EBA4  |
03EBA5  |$7E0002 = (((MarioYpos+TableEB5E)&0xF0)-0x20)
03EBA8  |Is that 0x20 here to compensate for that statusbar area?
03EBAA  |
03EBAB  |
03EBAD /
03EBB0 \Store block Mario is interacting with in $03
03EBB2 /This indirect pointer points to the $0500 area. It contains
03EBB4 the object layout of the current screen.
03EBD9 empty
03EF04  Erase sprite
03EF16  Erase sprite
03F2F3  Erase sprite
03F925 "More difficult quest" flag. Sets 076A too and shows star next to world
03F9E6 immediate data table
03F9EC why the fuck
03F9EF don't they use
03F9F2 immediate data?
03F9F5 trying to make it easier for us ROM hackers
03F9F8 to document SMAS?
03FD39 X = sprite index.
03FDD5 Store current sprite index into $00
03FFDE Seems like empty space
048000 \
048001  |
048003  |(BG1 and half of BG2 tilemap)
048005  |Clear VRAM 0000-17FF with 24,00,24,00,etc
048008  |
04800A  |
04800D  |Also clear VRAM B0F0-BFFF with 24,00,24,00,etc
04800E  |(layer 3 tilemap)
048011  |
048014  |
048017  |
048019  |
04801B  |
04801D  |
048020  |
048022  |
048024  |
048027  |
048029  |
04802C  |
04802F  |
048032  |
048034  |
048037  |
048039  |
04803B  |
04803E  |
048040  |
048043  |
048046  |
048049  |
04804C  |
04804F  |
048051  |
048053  |
048055  |
048058  |
04805A  |
04805D  |
04805F  |
048062  |
048065  |
048068  |
04806A  |
04806D  |
04806F  |
048071  |
048074  |
048076  |
048079  |
04807C  |
04807F  |
048082  |
048085  |
048087  |
048089  |
04808B  |
04808E  |
048090  |
048093  |
048095  |
048098  |
04809B  |
04809E  |
0480A0  |
0480A3  |
0480A5  |
0480A7  |
0480AA  |
0480AC  |
0480AD /
0480AE \
0480B0  |Clear entire layer 3 tilemap with 28 00 28 00 etc
0480B2  |Tilemap is located at $B000-$B3FF
0480B5  |
0480B7  |Format: Tile, properties, tile, etc
0480BA  |
0480BD  |Clears tilemap by fixed DMA.
0480C0  |
0480C3  |Only runs during game loading
0480C6  |
0480C9  |
0480CC  |
0480CF  |
0480D1  |
0480D4  |
0480D7  |
0480DA  |
0480DD  |
0480DF  |
0480E1  |
0480E3  |
0480E6  |
0480E8  |
0480EB  |
0480EE /
048261 Disable HDMA channels
048264 main screen window mask designation: null
048267 sub screen window mask designation: null
04826A window mask settings for bg1/2: null
04826D ^for bg3/4: null
048270 ^for OBJ and color window: null
048273 Color addition select: null
048276 \CGADSUB: Enable color math on backdrop
048278 /
04827B \
04827D  |If there's a HDMA gradient, execute the gradient code
04827F /
048280 \
048281  |DB = PB
048282 /
048283 HDMA gradient type goes into $00. See $7E00F1 for types
048292 \
048295  |
048298  |
04829B  |Copy indirect HDMA pointers to RAM until you're done
04829E  |
0482A1  |
0482A4  |
0482A5  |
0482A6  |
0482A8 /
0482CD 16-bit XY.
0482CF \Base reg: $2132 (direct color data)
0482D2  |1 reg write once, indirect pointers
0482D5  |We are setting up 3 HDMA channels it seems
0482D8 /
0482DB \
0482DE  |
0482E1  |
0482E4  |DMA source: $00:1520
0482E7  |            $00:1560
0482EA  |            $00:15A0
0482ED  |
0482EF  |
0482F2  |
0482F5 /
0482F8 \
0482FA  |
0482FD  |
0482FF  |Indirect HDMA bank bytes: $00
048302  |
048304 /
048307 \Timer to move the gradient up and down(water)
048309 /Set to 1 so it doesn't keep moving up-down.
048312 \Base reg: $2128. Indirect pointers.
048315 /2 regs write once (Window 2 L+R position)
048318 \
04831B  |
04831E  |DMA source: $04:83A5
048320  |
048323  |
048325 /
048328 \Window mask designation for main screen
04832A /Everything except BG4
04832D Window mask designation for sub screen: none
048330 \Window Mask Settings for BG1/2/3/4
048333 /
048336 \Enable window 2 for BG1/BG3/OBJ
048338 /
04833B \Prevent color math outside window
04833D /
048340 \Enable color math on OBJ & Backdrop & BG1/2
048342 /
048345 \Enable HDMA channels 7/6/5/4
048347 /
04834A \Background color: black
04834D /
048353 8-bit XY
048355 pull program bank
048356 return
048357 \Enable HDMA channels 7/6/5
048359 /
04835C 8-bit XY
04835E pull program bank
04835F return
048368 The very small pauses between going up and down 1 time
0483A5 Unknown
0483AC Red indirect pointers. Scanline - ram address (word) - scanline - etc
04840E green indirect pointers
048470 blue indirect pointers
0484D2 red intensity stuff. Actual data of $2132
048512 green intensity stuff
048552 blue intensity stuff
048592 ???
048596 \ Increase lives by 1 & make sure
048599  |it doesn't get past 128.
04859C  |
04859E  |
0485A0  |
0485A2  |
0485A5 /
048600 \
048603  |"pause" flag after rescuing princess
048605 / skip all of these if negative, if 00 check for start button etc
048607 \
04860A  |
04860D  |Check for start button press
04860F  |If pressed, enable "pause" flag after rescuing princess
048611 /
048614 \Pause sound
048616 /
048619 \
04861C  | Decrease portrait windowing hdma size until negative values
04861F  |
048622 /
048624 \
048626 /Rescued peach victory operation mode $0D
04862A Show pause window.
04862E Enable the more difficult quest flag
048632 \
048634 /Enable window 1 on BG1 and 2
048637 \
048639 /Enable window 1 on BG3
04863C go to operation $0E
048640 \
048643 /If there's something playing in SFX channel 0, skip.
048645 \ Operation mode $0C
048647 /
04864A \
04864C /Set pause flag after rescuing princess to negative. (unpause flag?)
04864F return
04865D \
04865F /Coin sound
04869F \
0486A1 /Correct sound
0486D9 Unreachable?
0488BF Flag for vertically extendable objects
0488C1 Accumulator 16-bit - Index 16-bit
0488F4 The change in position of the flow.
0488FE The frequency of the waving.
048915 The waving speed.
048949 HDMA underwater wavy table
048C9E $00,$00,$80,$07. Those byte combinations are unknown
048CEA small castle
;big castle
048E15 \
048E16  |Setup program bank
048E17 /
048E18 \Pass level header
048E19 /
048E1A \
048E1C  |
048E1E  |Copy low, high and bank bytes
048E20  |of the level objects pointer.
048E22  |
048E24 /
048E26 \Load level objects
048E28  |16-bit A
048E2A  |Filter
048E2D  |to index
048E2E / 8-bit A.
048E30 \
048E33  |Load indirect pointers for object handling
048E35  |
048E38  |
048E3A / 8-bit XY
048E3C Sprite index in X
048E43 $00 - 
;$01 - 
;$02 - 
;$03 - 
;$04 - 
;$05 - 
;$06 - 
;$07 - 
;$08 - 
;$09 - 
;$0A - 
;$0B - 
;$0C - 
;$0D - 
;$0E - 
;$0F - 
;$10 - related to castles at level end/begin?
;$11 - 
;$12 - 
;$13 - 
;$14 - 
;$15 - 
;$16 - 
;$17 - 
;$18 - Stone Stairs object
;$19 - 
;$1A - 
;$1B - 
;$1C - 
;$1D - 
;$1E - 
;$1F - 
;$20 - 
;$21 - 
;$22 - 
;$23 - 
;$24 - 
;$25 - 
;$26 - 
;$27 - 
;$28 - 
;$29 - 
;$2A - 
;$2B - 
;$2C - 
;$2D - 
;$2E - 
;$2F - 
048ED6 small castle/top of big castle map16 tilemap
048F06 bottom of big castle tilemap.
048FB1 \
048FB3 /Sprite to generate: Star Flag
049009 Y-length of the 'cemented stairs' segments.
049012 Y-PLACEMENT of the cemented stair blocks relative from the top
049172 Level X-2 'go to the surface' pipe tilemap
049521 Load background, hdma, aesthethics, etc
04953A \
04953C  | Return if castle
04953E /
04954C \
04954F / Return if not starry night background flag.
049564 indirect hdma table. points to ram 7F2000 and beyond in continuous mode
049594 16-bit A. Start of a DMA code.
049596 \
049599  | Indirect HDMA, 1 reg write twice to BG2 horizontal scroll
04959C  |
04959F  |
0495A2  | $049564: Pointer to indirect HDMA pointer table
0495A4  |
0495A7  |
0495A9  |
0495AC /
0495CE \If starry night BG flag is set
0495D1 /
0495D3 \
0495D5 /Set IRQ V-timer to AF
0495D8 \
0495DA /Enable IRQ
049679 \
0499ED Background colors, indexed by 0744 or BA
0499FD Mario palette
049A8C \
049A8F /Branch if background color != 00
049A91 Get level current background palette and music
049A9A \ Bonus game flag
049A9D  |
049AA0 / branch if not bonus game
049AA2 \
049AA5  | Branch if background color is $04
049AA8 /
049AAA \
049AAD  | Branch if something with lives
049AB0 /
049BC1 something related to how many background tiles you load as you scroll
049BC4 \
049BC6  |
049BC9  | Branch if not Black background with castle music
049BCC /
049BCE When Black background with castle music, do this
04AEC3 THIS TABLE AND THE NEXT ONE LOOKS LIKE PALETTE DATA
04BE89 Empty
04C00B \
04C00C  |Setup program bank
04C00D /
04C00E \Jump to level loading routine
04C012 /Store the output (level number) here
04C015 AND the output with $60 (01100000 c)
04C017 *2 (11000000 c)
04C018 *2 with carry (10000000 C)
04C019 *2 with carry (00000001 C)
04C01A *2 with carry (00000011 c)
04C01B Store in map type. This means that bits 6 and 5 are the map type!
04C01D \Restore original program bank
04C01E /
04C01F \
04C020  |Setup program bank again.
04C021 /
04C022 \Load world.
04C025  |If it is smaller than world 08
04C027 /go setup normal level.
04C029 Store zero to current level
04C02C Store zero to written number of current level
04C02F \
04C031 /Store zero to current world
04C034 \Load indexes to the level number table
04C037  |clear carry flag
04C038  |add current level to it
04C03B  |use it as index
04C03C \|Load the level number
04C03F  |return it
04C040 /
04C041 \
04C042  |Setup program bank.
04C043 /
04C044 Store zero to current bg palette and music
04C046 \Load level number
04C049  |
04C04B  |Make bit 5 and 6 of the level number
04C04C  |into bit 0 and 1.
04C04D  |Values range from 0-3
04C04E  |Store into map type
04C04F /(00 underwater, 01 ground, 02 underground, 03 castle)
04C051 Transfer A to Y to use it as an index.
04C052 \Load level number again
04C055  |AND with $1F to get the level number WITHOUT map type
04C057 /Store into a RAM address to hold it.
04C05A \ 
04C05D  |Load the map type offsets
04C05E  |Add the offsets with level number
04C061 /| Use it as an index again...
04C062 \|
04C065  |Load pointers to enemy data
04C067  |in $FD-$FF
04C06A  |
04C06C  |$FF is a constant: #$04
04C06E /
04C070 \Load map type again
04C072  |
04C075  |Load something again
04C076  |add the level number to it
04C079  |Use it as an index
04C07A /Store it in the layer 2 background.
04C07C \If it is a castle, change BG palette and music to
04C07E /Black and Castle (Also changes ground tileset) ($03)
04C080 \If it is an underground (bonus room),change BG palette and music to
04C082 /Black and underground ($02)
04C084 \If it is any minor background, change BG palette and music to
04C086 /Light Blue and ground ($01)
04C088 \If it is any underwater stage, change BG palette and music to
04C08A /Light Blue and Underwater ($00)
04C08C \
04C08E  |Set BG palette and music
04C090 /
04C092 \
04C095  |
04C097  |Setup the pointer of the level header
04C09A  |and the level object data.
04C09C  |24-bits pointer at $FA
04C09E / Bank is constant: $04
04C0A0 \
04C0A2  |Load level haeder
04C0A4 / Push it into A
04C0A5 \Get the background bits.
04C0A7  |If it is 04 or smaller
04C0A9 / Branch
04C0AB \Filter bit 2
04C0AD /Store into "BG is lower than 3" flag
04C0B0 \
04C0B2 /If BG is lower than 3, use nothing for layer 1 background
04C0B5 \Pull level header's first byte
04C0B6 /...then push it again.
04C0B7 \Filter Mario's starting Y position
04C0B9  |
04C0BA  |>> 3
04C0BB  |so the value is between 0-7 instead of whatever.
04C0BC /Store into Mario's starting position.
04C0BF Pull level header again.
04C0C0 Filter the time bits.
04C0C2 \Clear carry flag
04C0C3  |<<3 so the value is between 0-3.
04C0C4  |
04C0C5  |Store into starting timer
04C0C6 /
04C0C9 Increase Y.
04C0CA Load level header byte 2.
04C0CC Push it into A.
04C0CD \Filter floor set
04C0CF /Store it into Floor Set RAM address
04C0D2 Pull A
04C0D3 Push A
04C0D4 \Filter ground set and palette bits
04C0D6  |
04C0D7  |>>4 so that the value ranges from 00-03
04C0D8  |
04C0D9  |
04C0DA /
04C0DC (If the result is not 01 (Orange and mushroom)
04C0DE \and unnecessary LDA.
04C0E0 /Store bits into ground set and palette RAM address.
04C0E3 \Pull level header byte 2 from the stack.
04C0E4  |
04C0E6  |Filter ground set
04C0E7  |make the last 2 bits the first 2 bits.
04C0E8  |
04C0E9  |
04C0EA  |If ground set is clouds, branch.
04C0EC /
04C0EE Store bits into "Cloud terrain type override flag"
04C0F1 \set ground set to none, if ground set is clouds
04C0F3 /otherwise store as normal.
04C0F6 Handle vine growing in the start of level?
04C0F9 \
04C0FB  |
04C0FC  |Increase the pointer by 2 so we don't
04C0FE  |need to bother with Y indexing later.
04C100  |
04C102  |
04C104 /
04C106 Store zero to "Counter for the screen's X-pos in 16x16"
04C109 Pull program bank
04C10A And return
04C10B if cloud terrain type override flag is set
04C10E branch.
04C110 \
04C112  |If layer 2 background is not "Mushrooms"
04C114 / Return.
04C116 \Grow a vine in the start of level flag?
04C118 /
04C11C  "Levels per world". Actually indexes to the next tables
04C124  "World 1 Levels" They get stored in $7E:0750
04C129  "World 2 Levels"
04C12E  "World 3 Levels"
04C132  "World 4 Levels"
04C137  "World 5 Levels"
04C13B  "World 6 Levels"
04C13F  "World 7 Levels"
04C144  "World 8 Levels"
04C148  "Map type offsets"
04C14C  The castle levels sprites offset low
04C152  The grassland levels sprites offset low
04C168  The underground levels sprites offset low
04C16B  The underwater levels sprites offset low
04C16E  Enemy address high bytes
04C190  indexes to the next 4 types tables
04C194  The Underwater levels objects offset low
04C197  The grassland levels objects offset low
04C1AD  The underground levels objects offset low
04C1B0  The castle levels objects offset low
04C1B6  Objects address high bytes
04C1D8  1-4 & 6-4, Level #60
04C1FF  4-4, Level #61
04C218  2-4, Level #62
04C247  3-4, Level #63
04C272  7-4, Level #64
04C287  8-4, Level #65
04C2C1  3-3, Level #20
04C2E6  8-3, Level #21
04C303  4-1, Level #22
04C311  6-2, Level #23
04C338  3-1, Level #24
04C369  1-1, Level #25
04C387  1-3 & 5-3, Level #26
04C3A4  2-3 & 7-3, Level #27
04C3B9  2-1, Level #28
04C3E4  5-1, Level #2A
04C408  Sky Bonus Area (Day), Level #2B
04C411  4-3, Level #2C
04C436  6-3, Level #2D
04C459  6-1, Level #2E
04C462  4-2 Warp Zone, Level #2F
04C463  8-1, Level #30
04C49D  5-2, Level #31
04C4C8  8-2, Level #32
04C4F6  7-1, Level #33
04C512  Sky Bonus Area (Night), Level #34
04C51B  3-2, Level #35
04C540  1-2, Level #C0
04C56D  4-2, Level #C1
04C59B  Underground Bonus Area, Level #C2
04C5C8  Underwater Bonus Area, Level #00
04C5D9  2-2 & 7-2, Level #01
04C603  8-4 Underwater, Level #02
04C617  1-4 & 6-4, Level #60
04C6D2  4-4, Level #61
04C7FA  2-4 & 5-4, Level #62
04C8D8  3-4, Level #63
04C9D4  7-4, Level #64
04CB01  8-4, Level #65
04CC0B  3-3, Level #20
04CC74  8-3, Level #21
04CCC3  4-1, Level #22
04CD1B  6-2, Level #23
04CDB0  3-1, Level #24
04CE2F  1-1, Level #25
04CE9A  1-3 & 5-3, Level #26
04CEF1  2-3 & 7-3, Level #27
04CF7A  2-1, Level #28
04CFE7  Pipe entrance, Level #29
04CFF1  5-1, Level #2A
04D035  Sky Bonus Area (Day), Level #2B
04D04A  4-3, Level #2C
04D0BB  6-3, Level #2D
04D128  6-1, Level #2E
04D1A3  4-2 Warpzone, Level #2F
04D1D5  8-1, Level #30
04D26D  5-2, Level #31
04D2EB  8-2, Level #32
04D36B  7-1, Level #33
04D3CA  Sky Bonus Area (Night), Level  #34
04D3F5  3-2, Level #35
04D42D  1-2, Level #C0
04D4D2  4-2, Level #C1
04D576  Underground Bonus Area, Level #C2
04D608  Underwater Bonus Area, Level #00
04D671  2-2 & 7-2, Level #01
04D70D  8-4 Underwater, Level #02
04D776  empty
04D800 \If skip player animations flag is set, return
04D803 /
04D810 \
04D812  |
04D814  |
04D816  |Play the "Mario is turning sound"
04D819  |Every 7 frames
04D81B  |
04D81D /
04D860 16-bit A
04D862 Load amount of loops for palette upload
04D864 Load 'current character'
04D867 If it is Mario, branch.
04D869 Load Luigi and princess kiss sequence palette
04D86D Upload them
04D86F Load Mario and princess kiss sequence palette
04D873 Upload them. (Sequence is after bowser btw)
04D876 \
04D877  |If not done, loop
04D878 / 
04D87A  8-bit A
04D882  Return
04D883  Mario palette of princess kiss sequence
04D8A3  Luigi palette of princess kiss sequence
04D8C3 \  Upload the stripe image message of princess peach to the player
04D8C4  | Exact same copy of 00C0C3. Please refer to bank 00.
04D8C5  |
04D8C6  |
04D8C7  |
04D8C9  |
04D8CC  |
04D8CF  |
04D8D2  |
04D8D4  |
04D8D7  |
04D8D9  |
04D8DC  |
04D8DE  |
04D8E1  |
04D8E2  |
04D8E6  |
04D8E8  |
04D8EB  |
04D8ED  |
04D8EF  |
04D8F2  |
04D8F4  |
04D8F5  |
04D8F8  |
04D8F9  |
04D8FA  |
04D8FC  |
04D8FF  |
04D901  |
04D902  |
04D903  |
04D905  |
04D906  |
04D907  |
04D90A  |
04D90D  |
04D90E  |
04D911  |
04D914  |
04D917  |
04D918  |
04D91A  |
04D91B  |
04D91C  |
04D91E  |
04D921  |
04D923  |
04D924  |
04D925 /
04D926 Indices for next table. 
04D92E  "Thank you Mario! The kingdom is saved!
04D9D2  "Thank you Mario for restoring peace to our
04DA84  "Thank you Luigi! The kingdom is saved!
04DB28  "Thank you Luigi for restoring peace to our
04DC3F Mario rescued peach movements duration.
04DC4F The movements
04DE64 \Load current world into stack
04DE67 /
04DE68 \Load loaded level into stack
04DE6B /(always 0 because it's impossible to specify the level number
04DE6C \
04DE6F /Branch if more difficult flag is set
04DE71 set loaded level to 0
04DE74 Set world to 1
04DE77 \
04DE78 /Recover loaded level from stack
04DE7B \
04DE7C /Recover world from stack
04DE87 Clear current demo action being executed
04E1AB Load char palette
04E1AE Store in scratch RAM
04E1B0 Load data
04E1B3 ORA with char palette. 01 = luigi
04E1B5 ORA #$20
04E2FA These tables are for the Princess kiss Mario-
04E33B These huge tables took ages to sort out...
04F32C \SMW cape dive sound
04F32E /
04F34E \
04F350 /SMW cape dive sound
04F36A \
04F36C /SMW cape dive sound
04F3F9 \
04F3FB /Reset highscore sound
04F640 \SMW Yoshi spit out enemy sound
04F642 /
04F841 \Swimming sound
04F843 /
04F8B4 \Swimming sound
04F8B6 /
04F8D1 \
04F8D3 /SMB2 pick up vegetable sound
04FBA4 \
04FBA6 /SMW hit during cape flight sound
04FD74 \
04FD76  |16-bit A
04FD77  |Direct page = $7E:1700
04FD7A /
04FD85 "P" With no properties
04FD8A "U" With no properties
04FD8F "S" With no properties
04FD94 "H" With no properties
04FD99 " " With no properties
04FD9E "S" With no properties
04FDA3 "T" With no properties
04FDA8 "A" With no properties
04FDAD "R" With no properties
04FDB2 "T" With no properties
04FDB9 "End of tilemap marker" byte (?)
04FDBE \"Push start" SFX at princess rescued sequence
04FDC0 /
04FDC3 Return
04FDC4 Store zero to BG1 X-scrolling
04FDC7 Store zero to BG1 Y-scrolling
04FDCA Store zero to BG1 X-scrolling
04FDCD Store zero to BG1 X-scrolling
04FDD0 Store zero to BG1 Y-scrolling
04FDD3 Store zero to BG1 Y-scrolling
04FDD6 Store zero to BG2 X-scrolling
04FDD9 Store zero to BG2 X-scrolling
04FDDC Store zero to BG2 Y-scrolling
04FDDF Store zero to BG2 Y-scrolling
04FDE2 Store zero to BG3 X-scrolling
04FDE5 Store zero to BG3 X-scrolling
04FDE8 Store zero to BG3 Y-scrolling
04FDEB Store zero to BG3 Y-scrolling
04FDEE Return
04FDEF Empty Data, I am sure.
058003 \
058004  |
058006  |
058007  |
058008  |
05800A  |Clear Background map16 tilemap
05800D  |
058010  |
058013  |
058016  |
058019  |
05801C  |
05801F  |
058022  |
058025  |
058028  |
05802B  |
05802E  |
058031  |
058034  |
058037  |
058038  |
058039  |
05803C  |
05803E /
05803F \
058040  |Data bank = current bank
058041  |
058042  |Index to the current BG map16 end offset
058045  |
058048  |Store current background to $DB. $0E65 is clone
05804B  |of $DB (or the opposite......)
05804D  |
05804F  |
058051  |Layer 2 background
058054  |to 16-bit index
058055  |
058056  |< relative index to table
058059  |Get index to a table. Index is indexed by
05805B  |the 16-bit index from before. $02 = index
05805D  |X = index
05805F  |
058062  |
058064  |increase pointer to read next word next time.
058066  |
058068  |
05806B  |note to self: continue documenting this.
058071 \ Load data
058073  |Extract HDMA gradient type
058076 /Store to HDMA gradient type
058078 \Load data
05807A  |
05807D /
058099 \
05809C  |
05809F  | Increase index to the final background map16 byte written to RAM $7ED000.
0580A2  |
0580A3  | And make sure the final bytes are FFFF to mark the end of the map16 tilemap.
0580A4  |
0580A7 /
0580C9 A = $EF smaller than #$10
0580CB \
0580CD  |background to index. Up to $21 is valid.
0580CE /
0580CF \Setup indirect pointer based on background.
0580D2 /
0580D4 \Bank byte: $05
0580D7 /
0580DE Jump to background generation/background loading routines
0580E1 $00 -
058125 INSTRUCTION POINTER #0: this points to opcode | Related to generating the goomba pillar background
05872F \
058732  |
058736  |
058739  |
05873D  |
058740  |
058744  |
058747  |
05874B  |
05874E  |
058752  |
058755 /
058769 \
05876C  |
058770  |
058773  |
058777  |
05877A  |
05877E  |
058781 /
058F25 $00 - Increase index to background map16 tilemap's latest written tile by 1
;$01 - Handle HDMA gradient. Underwater levels use below pointer.
;$02 - Enable underwater HDMA gradient
;$03 - 
;$04 - 
;$05 - Related to background map16 tilemap generation
;$06 - Fill background with repetitive rock pattern of cave background
;$07 - Fill top 3 rows with blank tiles for underwater levels
;$08 - Generate the rocks of the waterfall background
;$09 - Enable Layer 3 image
;$0A - Generate the waterfall of the waterfall background
;$0B - Load tilemap-specific graphics?
;$0C - Generate Goomba pillar background's sand
05903D \
059040  |
059043  |
059046  | Fill the top 2 rows with blank tiles
059047  |
059048  |
05904B /
05904D \
059050  |
059053  |
059054  | Fill the 3rd row with some transition tile into the water.
059055  |
059058 /
05905B BG map16 tiles to fill the entire cave BG with (the repetitive rocks)
05909B \
05909D  |If map type is underground, branch
05909F /
0590A1 \Executes when castle level
0590A3 /Fill the background's top area with black map16 tiles.
0590A5 Load background black map16 tile.
0590A7 \
0590AA  |
0590AD  |Fill the background's top 2 rows with black tiles loaded in accumulator
0590AE  |
0590B1  |
0590B3  |
0590B5 /
0590B6 \ Increase index to the latest background map16 byte written to RAM $7ED000.
0590B9 /
0590BA \ Enable HDMA depending on $F1: HDMA gradient type
0590BC  |
0590BE  |
0590C0  |
0590C2  |
0590C4  |
0590C6  |
0590C8  |
0590CB  |<-- HDMA enable routine
0590CF  |
0590D1 /
0590D2 \
0590D4  |
0590D6  |Enable underwater HDMA gradient (without the up/down movement, just the color definition)
0590DA  |
0590DC /
059122 index to layer 2 background pointers
059166 \ Load background number
059168  |to index
059169  |
05916A  |Load index to layer 2 background pointer
05916D  |
05916E  |
05916F  |Store pointer to $00-$02. $02 is hardcoded to bank 5
059172  |
059174  |
059177 /
059179 Index to RAM?
05917C Loop count
05917F \Start loop
059181  |
059182  |
059186  |If the background map16 tilemap is $FFFF
059189 /Stop uploading tiles.
05918B \
05918C  |
05918E  |
059191  |
059192  |Upload background data by copying -MAP16- data
059193  |to the -VRAM tilemap- located in the -RAM-
059194  |
059195  |
059197  |
05919B  |
05919C  |
05919D  |
05919F  |
0591A3  |
0591A4  |
0591A5  |
0591A7  |
0591AB  |
0591AC  |
0591AD  |
0591AF  |
0591B3  |
0591B4  |
0591B5  |
0591B6  |
0591B9 /
0591C5 \read full map16 (?) ($0FFF bytes). If not done yet, loop
0591C8 /
0591CE pointers to various background map16 data
0591E4 background map16 tiles
05A614 Castle background map16 tiles
05CCED \Set clipping?
05CCEF /
05D19B \Freeze bowser's animation
05D19D /
05D1A0 \Bowser breathe fire sound
05D1A2 /
05D4E1 \
05D4E3 /Bowser lands in lava sound impact
05D4E6 \
05D4E8 /Bowser lands in lava sound
05D619 \
05D61C  | Check if you left a fire particle mid-air
05D61E / If so, return
05D620 \ Check if you landed in lava just now
05D621 / If so, return
05D623 \
05D626  |
05D627  |if $18, branch
05D628  |
05D62A /
05D62D \ Particle tile number in $ED
05D630 /
05D632 \ Store 16-bit sprite x position into $00
05D635  |
05D637  |
05D639  |
05D63B \|
05D63D  |
05D63F  |Add 8 pixels to it, but subtract the left edge x-coordinate of the screen. store into $00-01 
05D640  |
05D643  |
05D644  |
05D646  |
05D648 /
05D659  Executes after a particle has been placed.
05D65F \
05D662  |
05D664  | If the generated particle in question is the mid-air fire particle
05D666 \| Set Y position of mid-air particle
05D669 /
05D66C  Return
05D69D \
05D6A0  |
05D6A1  |If less than #$28, branch
05D6A2  |
05D6A3  |
05D6A5 /
05D6A7 \If $28 or higher, just set it to $30
05D6A9  |
05D6AC /Then return
05DD09  Preserve stuff
05DD0A  get misc object OAM data offset
05DD0D \ If screen locked, branch
05DD10 /
05DD12 \
05DD14  |
05DD16  |
05DD18 /
05DE14 Clear windowing HDMA table
05DE31 Clear windowing HDMA table
05DE3D \Set paused flag
05DE3F /
05DE4C \
05DE4D  |
05DE4E  |
05DE4F  |
05DE50  |
05DE51  |Pause window states
05DE54  |
05DE55  |
05DE56  |
05DE59  |
05DE5A  |
05DE5B  |
05DE5C /
05DE5D $00 = Expand
;$01 = Maintain pause window, wait for input etc
;$02 = Select option?
;$03 = Collapse
05DED7 \Coin sound
05DED9 /
05DEEE \Coin sound
05DEF0 /
05DF05 \Coin sound
05DF07 /
05DF55 \
05DF57 /Save and continue/quit sound
05DF77 \
05DF79 /Pause sound
05DF88 Clear paused flag
05DFAC First 2 bytes are the flashing arrow animation
05E0B3 \Windowing HDMA routine for pause which actually expands stuff
05E0B6 /Timer for expanding and collapsing
05E0BC Decrease timer. when it hits 0, the expanding ends
05E0BF \Maximum left border set
05E0C2 /
05E0C5 \Maximum right border set
05E0C8 /
05E0CB \
05E0CE  |Maximum upper border set
05E0D1  |
05E0D4 /
05E0D7 \
05E0DA  |Maximum lower border set
05E0DD  |
05E0E0 /
05E0E3 \
05E0E6  |
05E0E9  |
05E0ED  |
05E0F1  |Clear windowing RAM?
05E0F5  |NOPing it out doesn't seem to have any side effects
05E0F9  |
05E0FA  |
05E0FB /
05E0FD \ Maximum right border
05E100  |swap low and high bytes
05E101 /|OR with maximum left border -> to Windowing HDMA value
05E104  |Load maximum upper border as an index
05E107 / Store windowing HDMA value
05E10B \
05E10C  |If we didn't reach maximum lower border yet
05E10D  |Loop
05E110 /
05E116 Increase pause window state?
05E126 \Maximum left border
05E129 /
05E12C \
05E12F /Maximum right border
05E132 \
05E135  |
05E138  |Maximum left border
05E13B /
05E13E \
05E141  |
05E144  |Maximum right border
05E147 /
05E14A Decrease timer for collapsing
05E14D \
05E150  |
05E153  |
05E157  |Clear windowing RAM?
05E15B  |
05E15F  |
05E163  |
05E164  |
05E165 /
05E167 \ Maximum right border
05E16A  |Swap low and high bytes
05E16B / ORA with maximum left border -> to windowing HDMA value
05E16E \Load maximum upper border as an index
05E171  |
05E175  |Store windowing HDMA value to the HDMA RAM
05E176 /
05E177 \If not done yet, loop
05E17A /
05E180 Pause window state to zero
05E183 \
05E185 /Set brightness to max
05E188 Clear paused flag
05E18B \
05E18E  |reverse window mask settings
05E190 /
05E1BF \
05E1C2  |If option is not Save and Quit
05E1C4  |Branch
05E1C6 / Go save and quit
05E1CE \
05E1CF  |
05E1D1  |
05E1D2  |
05E1D3  |
05E1D5  |Clear $7FF000-$7F1FFF
05E1D8  |
05E1DB  |
05E1DE  |
05E1E1  |
05E1E4  |
05E1E7  |
05E1E8  |
05E1E9  |
05E1EB /
05E1EC A = 8-bit. XY = 16-bit
05E1EE \Window 1 left position & window 1 right position
05E1F1 /2 regs write once. Indirect HDMA
05E1F4 \
05E1F7  |Source: $05:E22A
05E1FA  |
05E1FC /
05E1FF \
05E201 /Indirect HDMA address bank byte: $7F:xxxx
05E204 \Window mask settings for BG1, 2, 3, 4.
05E206  |No window for BG1, 2, 3, 4.
05E209 /
05E20C \
05E20F  |Enable window 1 for OBJ. Window 1 inversion for OBJ
05E211 /
05E214 \
05E217  |Enable window masking for OBJ on the mainscreen
05E219  |
05E21C / None on the subscreen
05E21F AXY = 8-bit
05E221 \
05E224  |Enable HDMA
05E226 /
05E231 \
05E232  |
05E234  |
05E235  |
05E236  |
05E238  |
05E23B  |
05E23E  |
05E241  |
05E244  |
05E247  |
05E24A  |
05E24D  |
05E250  |
05E253  |
05E256  |
05E259  |
05E25C  |
05E25F  |
05E262  |Clear windowing HDMA table
05E265  |
05E268  |
05E26B  |
05E26E  |
05E271  |
05E274  |
05E277  |
05E27A  |
05E27D  |
05E280  |
05E283  |
05E286  |
05E289  |
05E28C  |
05E28F  |
05E292  |
05E295  |
05E298  |
05E29B  |
05E29E  |
05E29F  |
05E2A0  |
05E2A3  |
05E2A4  |
05E2A6  |
05E2A8  |
05E2A9 /
05E2DF palette animation (axe, coins, [?], underground lanterns)
05E5CF \Lightning sound
05E5D1 /
05E639 Flag to upload animated FG
05E675 Set flag to upload animated FG
05E6B6 \
05E6B8  | Branch if not bonus room
05E6BA /
05E6BC Set bonus room flag
05E6BF \
05E6C2  | Get Luigi or Mario's bonus room tileset number
05E6C5 /
05E6C7 GFX upload routine
05E6CA \
05E6CC  |
05E6CD  |
05E6CE  |
05E6D1  | A routine for each tilemap
05E6D3  |
05E6D6  |
05E6D8 /
05E6DB $00 - Unused?
;$01 - Mario bonus background
;$02 - Hills background & SUPER MARIO BROS banner
;$03 - Underground background
;$04 - Castle FG & BG tileset
;$05 - Tall slim hills background
;$06 - Castle FG & BG tileset
;$07 - Hills background
;$08 - Underwater BG & FG tileset
;$09 - Hills background & SUPER MARIO BROS banner
;$0A - Game over screen & Mario bonus room background
;$0B - Starry night background
;$0C - Bowser's Castle (outside) background
;$0D - Mushrooms background
;$0E - Waterfall background
;$0F - Underwater ruins background
;$10 - Goomba pillars BG & snow FG
;$11 - Underground foreground
;$12 - Snow foreground
;$13 - Bowser's Castle BG, part 1
;$14 - Bowser's Castle BG, part 2
;$15 - Game Over and Time Up text
;$16 - Starry night background
;$17 - Grass foreground
;$18 - Luigi bonus background
;$19 -
;$1A -
;$1B -
;$1C -
;$1D -
;$1E -
;$1F -
05E71B Set GFX to upload to none
05E71E Disable flag to upload animated graphics
05E721 \
05E723 /Disable graphics animation and stuff
05E727 \
05E729  |If tall slim hills background with snow
05E72B / get snow foreground
05E72D \ Same as above
05E72F /
05E731 \ Same as above
05E733 /
05E735 \Grass foreground
05E737 /GFX upload routine
05E73A finish upload
05E73C \Underground foreground
05E73E /GFX upload routine
05E741 finish upload
05E743 \Starry night background
05E745 /GFX upload routine
05E748 \Snow foreground
05E74A /GFX upload routine
05E74D finish upload
05E74F \Bowser's castle background (1)
05E751 /GFX upload routine
05E754 \Bowser's castle background (2)
05E756 /GFX upload routine
05E759 finish upload
05E75B \Game over and time up text
05E75D /GFX upload routine
05E760 finish upload
05E762 GFX bank bytes. every other byte is not used, so here's a more comprehensive list:
05E794 GFX address
05E7C6 GFX VRAM address
05E7F8 GFX size
05E82A \ Routine enters with $7E0099 loaded in accumulator
05E82B / but can also be fixed values. A * 2 to index
05E82C \
05E82F /Load DMA source bank byte
05E832 16-bit A
05E834 \DMA source address
05E837 /
05E83A \
05E83D /DMA VRAM address
05E840 \
05E843 /DMA size
05E846 8-bit A
05E848 DMA this setup
05E84C \
05E84E /address increment mode
05E853 \
05E856 /DMA VRAM address
05E859 \
05E85C /2 regs write once for $2118
05E85F \
05E862 /Set DMA source address
05E865 \
05E868 /DMA source bank
05E86B \
05E86E /DMA size
05E871 \
05E873 /Enable DMA on channel 0
05E880 Get current sprite index
05E882 \
05E884  |Return if not a regular shelled walking sprite
05E886 /
05E888 \
05E88A /If not kicked, return
05E88C \
05E88E /If not stunned or upside-down, return
05E95E Get current sprite index
05E960 \
05E962  | If not princess peach, branch
05E964 /
05E966 \
05E969  | If world 8, return
05E96B /
05EB5D \ 
05EB60 / Set more difficult quest flag in SRAM
05EB64 \
05EB67 / Set current world in SRAM
05EB75 Enable hidden 1-up flag
05EE66 Empty, unused space
068000  Graphics.
078000 Graphics.
07FC00  Sample data of menu music and 'hall' music?
07FCA0  Some other SPC-700 data
07FCBC  Part 1 of SPC-700 engine
088000 Graphics.
098000 Graphics.
0A8000 Graphics.
0B8000 Pointers to sample data of piano and
0B8074 Sample data of piano and menu music
0C8000 SMB3 SPC-700 data?
0CD000  Graphics.
0D8684 Some sort of executeptr routine
0D8698 Same case as above
0D88FF Increase lives by one
0DA165 0 S:01FF P:EnvMXdizc HC:3366 VC:000 FC:00 I:00
0DA168 0 S:01FF P:EnvMXdizc HC:3382 VC:000 FC:00 I:00
0DA16A 0 S:01FF P:EnvMXdizc HC:3398 VC:000 FC:00 I:00
0DB6F1 Increase lives by one
0DB961 0 S:01FF P:EnvMXdizc HC:7566 VC:000 FC:00 I:00
0DB964 0 S:01FF P:EnvMXdizc HC:7582 VC:000 FC:00 I:00
0DB966 0 S:01FF P:EnvMXdizc HC:7598 VC:000 FC:00 I:00
0DB968 0 S:01FF P:EnvMXdizc HC:7614 VC:000 FC:00 I:00
0DB96B 0 S:01FF P:EnvMXdizc HC:7630 VC:000 FC:00 I:00
0DBB19 Increase lives by one
0EC61D ...I doubt that this really stores to the ROM.
0EC620 Nothing jumps here either. What's going on? o_O
0EC624 Note to self: look into this table sometime.
0EF4C8 empty
0F80F8 \Load a ptr which points to a routine using a ptr.
0F80FB  |
0F80FD  |
0F8100  |
0F8102  |
0F8103  |
0F8105  |
0F8107 /And jump to it.
0F810A  $00 these pointers point to the next pointer table
0F9158 \If current world is not world 2
0F915B  |
0F915D /branch
0F915F \
0F9161  |If current world is world 2, and map type is underground
0F9163 /branch
0FDF81 Increase lives by one
0FFD01  Graphics.
118009  No HDMA enable.
11800C  Force blank
11800E  Jump to $118012.
118010  Full brightness.
118012  $FE = $2100 mirror.
118014  \ $11 = Image upload
118016   | Multiply by 2...
118017   | ... add with $11...
118018   | (Result = Multiply by 3)
11801A  / Into X.
11801B  \ Get low byte of image.
11801E  / <-- $F0 (Low byte of image pointer)
118020  \ Get middle byte of image.
118023  / <-- $F1 (Middle byte of image pointer)
118025  \ Get high byte of image.
118028  / <-- $F2 (High byte of image pointer)
118036  Clear interrupt disable flag.
118037  Return.
118038  ROM is pirated.
11803C  \ Two useless bytes...
11803D  /
11803E  \ Anti-piracy check.
118040   |
118044   |
118048   | Prevents SRAM from being expanded.
11804A   |
11804C   |
118050   |
118054  /
118056  Set interrupt disable
118057  NMI disabled, IRQ disabled, Auto-Joypad Read disabled.
11805A  No HDMA
11805D  No DMA.
118060  \ Clear SPC ports.
118063   |
118066   |
118069  /
11806C  \ Force blank.
11806E  /
118071  \ PBR into DBR.
118072  /
118073  Clear carry.
118074  Preserve DP register.
118075  \ New DP = $2100
118077   |
118078   |
11807A  /
11807B  \ Character data = $C000-$FFFF for sprites.
11807D  /
11807F  \ BG Mode = 01
118081  / <-- $2105
118083  $0775 = $2105 mirror.
118088  \ Tilemap Layer 1 = $0000-$1FFF.
11808A   |
11808C  /
11808F  \ Tilemap Layer 2 = $2000-$3FFF.
118091  /
118093  \ Tilemap Layer 3 = $9000-$9FFF.
118095  /
118097  No tilemap Layer 4.
118099  \ Character data = $4000-$8FFF for Layers 1 and 2.
11809B  /
11809D  \ Character data = $A000-$BFFF for Layer 3, no character data Layer 4.
11809F  /
1180A1  \ Layers 1, 2 and object layer on main screen designation.
1180A3   |
1180A5  /
1180A8  None on subscreen designation.
1180B4  Color addition select = #$00.
1180B6  CGADSUB = #$00 ($2131).
1180B8  \ No intensity for fixed colour data ($2132)
1180BA  /
1180C7  Color addition select mirror = #$00.
1180CA  CGADSUB mirror = #$00.
1180CD  HDMA Enable mirror = #$00.
1180D6  \ No intensity for red colour.
1180D8  / <-- $023D (One of three mirrors for $2132)
1180DB  \ No intensity for green colour.
1180DD  / <-- $023E (One of three mirrors for $2132)
1180E0  \ No intensity for blue colour.
1180E2  / <-- $023F (One of three mirrors for $2132)
1180E5  Get old DP register back.
1180E6  \ No upload through VRAM tables.
1180E8   |
1180EB   |
1180EF  /
1180F3  V-Count mirror = #$00.
118122  \ $7FFB00...
118126  / into World number.
118129  \ 
11812A   | *3
11812B   |
11812F   | Add $7FFB01 to it...
118130   | (preserved level num?)
118134  / Into accumulative level number.
118137  $0533 - 1...
118138  Into $04E8 (level number after death?)
11813B  \ Get preserved live count?
11813F  / Into live counter.
11816B  \ Amount of lives...
11816D  / after Game Over.
118172  \ Get world number into index...
118175   | Get accumulative level number of x-1, where x = world number.
118179   | Store into accumulative level number.
11817C  / And here.
1181A8  \ Check if force blank...
1181AA   | <--
1181AC  / If on, branch.
1181BA  \ If horizontal level...
1181BC  / ...branch, do not run the following two lines.
1181F7  \ Load tiles 200-27F (FG/BG slots).
1181FB   | Load tiles C0-1FF (FG/BG slots).
1181FF   | Get sprite data per room into buffer at $1B00.
118203   | Clear Layer 3 tilemap.
118207   |
11820B   |
11820F   |
118213  /
118217  \ If $0772 is any non-zero value...
11821A   |
11821C   | Make Layer 3 have full priority.
11821E  /
118220  \ BG Mode 1.
118222  / No Layer 3 priority.
118231  Clear all OAM.       
1182A6  Don't go to a special screen.                 
1182AF  \ If IRQ V-counter is 00...
1182B2  / Branch.
1182B4  \ Load starry BG.
1182B6  /
1182B8  \ If level 5-2...
1182BB   | Use a different starry BG (different palette)
1182BD   |
1182BF  / <--
1182C1  HDMA BG handler.
1182FF  Clear all OAM.
118329  HDMA channels off.
11832C  No NMI/IRQ.
11840D  Clear all OAM.
1184A6  Clear all OAM.
118574  Clear all OAM.
1185EE  \ Potion room music.
1185F0  /
118680  Clear all OAM.
1186C8  Clear all OAM.
118704  Handle 'simple' objects (such as vegetables). Obj -> M16.
11873D  \ Colour layer affects backdrop.
11873F  / (CGADSUB)
118742  \ If IRQ V-counter is 00, branch.
118745  /
118747  \ Load starry BG image.
118749  /
11874B  \ Check if in 5-2.
11874E   |
118750   |
118752  / If so, load starry BG with a different palette.
118754  HDMA Handler.
118881  Clear all OAM.
118903  Handle object -> M16. (Does not apply to objects that only contain 1 M16 tile, like vegetables.)
11896B  Clear all OAM.
1189B0  \ Character select music.
1189B2  /
1189CD  \ Check if pressing Right or Select.
1189CF   |
1189D1  / If neither, branch.
1189D3  Remove the highlight from previous player.
1189D6  Move to next character. (Move to the right.)
1189D8  \ 'Coin get' sound (when you select between players).
1189DA  /
1189DD  \ Check if pressing Left.
1189DF   |
1189E1  / If not, branch.
1189E3  Remove the highlight from previous player.
1189E6  Move to previous character. (Move to the left.)
1189E8  \ 'Coin get' sound (when you select between players).
1189EA  /
1189ED  \ Only 4 options.
1189EF   |
1189F1  /
118A84  \ Load byte into VRAM table at $0302 #$17 times.
118A86  /
118A89  \ Get to free area in VRAM table.
118A8C   | Get player into index.
118A8E   |
118A92   | X = position for the table at which the tilemap for each player starts at.
118A93   | Load tilemap byte into table at $0302,y.
118A97   |
118A9A   | Get to next byte in both tables.
118A9B   |
118A9C   | Loop until $0712 is sub-zero.
118A9F  /
118AA1  \ End table.
118AA3  /
118AA6  \ Amount of bytes the table covers up...
118AA7  / Into $0300. (Header byte)
118AAA  Return.
118AAB  \ Load byte into VRAM table at $0302 #$17 times.
118AAD  /
118AB0  \ Get to free area in VRAM table.
118AB3   | Get player into index.
118AB5   |
118AB9   | X = position for the table at which the tilemap for each player starts at.
118ABA   | Load tilemap byte into table at $0302,y.
118ABE   |
118AC1   | Get to next byte in both tables.
118AC2   |
118AC3   | Loop until $0712 is sub-zero.
118AC6  /
118AC8  \ End table.
118ACA  /
118ACD  \ Amount of bytes the table covers up...
118ACE  / Into $0300. (Header byte)
118AD1  Return.
118BB6  \ Game over music.
118BB8  /
118CBE  \ Warp Jar music.
118CC0  /
118CC3  Clear all OAM.
118CE5  \ Store original world number into $0405.
118CE8  /
118CEB  \ Get new world number to warp to.       
118CEE  /
118CF1  Into Y.
118CF2  Player number into X.
118CF4  \ Get appropiate level number. (x-1)
118CF7   |
118CFA  /
118CFD  World number to warp to into Y.
118CFE  \ Subtract 3 from the value. (There are no 'World X' graphics for Worlds 1-3)
118CFF   |
118D01   | Multiply by 2 since we're going to read from a 16-bit table.
118D02  / And back into Y again.
118D03  A = 16-bit.
118D05  \ $11BD-$11C2 = Tilemap of number in 'World X'.
118D08   | TTTTTTTT YXPCCCTT format.
118D0B   |
118D0E   |
118D11   |   
118D14  /
118D17  A = 8-bit.
118D64  \ Bonus game music.
118D66  /
118DA2  \ Indexed by character.
118DA4   | Check if 'Amount of levels completed', indexed by character...
118DA7   | Is 99.
118DA9  / If so, branch, don't increment further.
118DAB | Otherwise, increment amount of levels cleared.
118DAE  \ Level to trigger ending sequence = 7-2.
118DB1   |
118DB3  / If not 7-2, branch.
118DC5  Clear all OAM.
118E50  \ Bonus game music.
118E52  /
118EB3  Clear all OAM.
118ED9  Clear all OAM.
118FA2  \ Bonus get music.
118FA4  /
118FE5  \ Death music.
118FE7  /
11901E  \ Death music.
119020  /
11908F  Load layer and sprite graphics for credits.
11925B  \ Preserve direct page.
11925C   | Direct page = #$2100.
11925E   |
11925F   |
119261  /
119262  \ $0200-$0201 = Layer 1 X mirror.
119265   |
119267   |
11926A  /
11926C  \ $0206-$0207 + $04C6 = Layer 1 Y mirror.
11926F   |
119270   |
119273   |
119275   |
119278  /
11927A  \ $0202-$0203 = Layer 2 X mirror.
11927D   |
11927F   |
119282  /
119284  \ $0208-$0209 = Layer 2 Y mirror.
119287   |
119289   |
11928C  /
11928E  \ $0204-$0205 = Layer 3 X mirror.
119291   |
119293   |
119296  /
119298  \ $020A-$020B = Layer 3 Y mirror.
11929B   |
11929D   |
1192A0  /
1192A2  Index = 16-bit.
1192B8  \ $023D-$023F = Colour layer mirror.
1192BB   |
1192BD   |
1192C0   |
1192C2   |
1192C5  /
1192C7  \ $0243-$0244 = Main and Sub Screen Designation.
1192CA  /
1192D1  \ $0775 = BG mode mirror.
1192D4  /
1192D7  Index = 8-bit.
1192E2  \ Make starry BG scroll slower than the rest of the background.
1192E5   | (Four times as slow as Layer 1)
1192E6   |
1192E9   | Accumulator = 16-bit.
1192EB   |
1192EC   |
1192ED   | Accumulator = 8-bit.
1192EF   |
1192F1   |
1192F2  /
11930B  Pull normal direct page back.
11930C  \ $FE = Brightness + Force blank mirror.
11930E  /
119311  \ $023A = HDMA enable mirror.
119314  /
11939C  Preserve DP.
11939D  \ Direct page = #$0A00.
11939F   |
1193A0   |
1193A2  /
1193A3  \ Y starts out as #$1C, X as #$70.
1193A5   |
1193A6   |
1193A7   |
1193A8  /
1193A9  \ Get general sprite tile sizes from $0A20-$0A9F into $0A00-$0A1F.
1193AB   |
1193AC   |
1193AD   |
1193AF   |
1193B0   |
1193B1   |
1193B3   |
1193B4   |
1193B5   |
1193B7   |
1193BA   |
1193BC   |
1193BD   |
1193BE   |
1193C0   |
1193C1   |
1193C2   |
1193C4   |
1193C5   |
1193C6   |
1193C8   |
1193CB   |
1193CD   |
1193CE   |
1193CF   |
1193D1   |
1193D2   |
1193D3   |
1193D5   |
1193D6   |
1193D7   |
1193D9   |
1193DC   |
1193DE   |
1193DF   |
1193E0   |
1193E2   |
1193E3   |
1193E4   |
1193E6   |
1193E7   |
1193E8   |
1193EA  /
1193ED  \ Decrement Y by 4 and loop until transfer done.
1193EE   |
1193EF   |
1193F0   |
1193F1  /
1193F3  Get DP register back.
1193F4  Return.
1196BF  \ Empty.
119C17  00 - RAM table.
; 01 - Layer 1 data for the 'fairies getting out of jar' room.
; 02 - Layer 1 data ('Contributor' box and fairy crowd) during the "dragging off Wart" scene.
; 03 - Layer 2 data (the windows) during the "dragging off Wart" scene.
11BA9C  \ Mario palette.
11C1D0  00 - RAM upload table, used for 8x8 tile upload on layer 1
; 03 - Character select screen
; 04 - Shy Guy border between character select screen and level load
; 05 - Game over screen without border
; 07 - 'Continue, Save & Continue, Save & Quit'
; 0A - 'No Bonus'
; 0B - 'Push Button'
; 0D - Probably 'Pause'. Only used in NES SMB2, not SMAS. More proof that Nintendo ported the games to SNES directly and edited them?
; 0F - Blank line.
; 11 - Nothing.
; 18 - Stars with palette 2 (used everywhere except for 5-2)
; 19 - Stars with palette 1 (used only in 5-2)
; 1A - '3 Coins Service'
11CAFD  TODO!
11CC45  Format : xxxxxxxx
11CC8C  Format : xxxxxixx. i = Invincible to bombs and shells.
11CCD3  Format : xxxxxxxx
11CD1A  Format : xxxxxxxx
11D0AD  \ Low byte of locations...
11D17F  \ High byte of locations...
11F4AD  Empty level, clear level. NOT empty data.
11F4AE  \ Empty data.
11F4BB  \ High byte of pointer to high byte of room pointers of sprite data, indexed by level number.
11F4D0  \
11F4E5  \
11F4FA  \
11F50F  \ High byte of pointers, indexed per room, level 1-1.
11F519  \ Low byte of pointers, indexed per room, level 1-1.
11F523  \ High byte of pointers, indexed per room, level 1-2.
11F52D  \ Low byte of pointers, indexed per room, level 1-2.
11F537  \ High byte of pointers, indexed per room, level 1-3.
11F541  \ Low byte of pointers, indexed per room, level 1-3.
11F54B  \ High byte of pointers, indexed per room, level 2-1.
11F555  \ Low byte of pointers, indexed per room, level 2-1.
11F55F  \ High byte of pointers, indexed per room, level 2-2.
11F569  \ Low byte of pointers, indexed per room, level 2-2.
11F573  \ High byte of pointers, indexed per room, level 2-3.
11F57D  \ Low byte of pointers, indexed per room, level 2-3.
11F587  \ High byte of pointers, indexed per room, level 3-1.
11F591  \ Low byte of pointers, indexed per room, level 3-1.
11F59B  \ High byte of pointers, indexed per room, level 3-2.
11F5A5  \ Low byte of pointers, indexed per room, level 3-2.
11F5AF  \ High byte of pointers, indexed per room, level 3-3.
11F5B9  \ Low byte of pointers, indexed per room, level 3-3.
11F5C3  \ High byte of pointers, indexed per room, level 4-1.
11F5CD  \ Low byte of pointers, indexed per room, level 4-1.
11F5D7  \ High byte of pointers, indexed per room, level 4-2.
11F5E1  \ Low byte of pointers, indexed per room, level 4-2.
11F5EB  \ High byte of pointers, indexed per room, level 4-3.
11F5F5  \ Low byte of pointers, indexed per room, level 4-3.
11F5FF  \ High byte of pointers, indexed per room, level 5-1.
11F609  \ Low byte of pointers, indexed per room, level 5-1.
11F613  \ High byte of pointers, indexed per room, level 5-2.
11F61D  \ Low byte of pointers, indexed per room, level 5-2.
11F627  \ High byte of pointers, indexed per room, level 5-3.
11F631  \ Low byte of pointers, indexed per room, level 5-3.
11F63B  \ High byte of pointers, indexed per room, level 6-1.
11F645  \ Low byte of pointers, indexed per room, level 6-1.
11F64F  \ High byte of pointers, indexed per room, level 6-2.
11F659  \ Low byte of pointers, indexed per room, level 6-2.
11F663  \ High byte of pointers, indexed per room, level 6-3.
11F66D  \ Low byte of pointers, indexed per room, level 6-3.
11F677  \ High byte of pointers, indexed per room, level 7-1.
11F681  \ Low byte of pointers, indexed per room, level 7-1.
11F68B  \ High byte of pointers, indexed per room, level 7-2.
11F695  \ Low byte of pointers, indexed per room, level 7-2.
11F69F  \ High byte of pointers, indexed per room, level 7-3. (Unused.)
11F6A9  \ Low byte of pointers, indexed per room, level 7-3. (Unused.)
11F6B3  \ Sprite data. First room, level 1-1. (Vertical room where you fall from one door.)
11F6BC  \ Sprite data.
11F6D1  \ Sprite data.
11F70E  Sprite data. Top room inside cave, level 1-1. Total amount of sprites: 1.
11F714  Sprite data. Bottom room inside cave, level 1-1. Total amount of sprites: 1.
11F719  \ Sprite data. Birdo room, level 1-1.
11F725  \ Sprite data.
11F745  \ Sprite data. Cave room, level 1-2.
11F754  \ Sprite data. Birdo room, level 1-2.
11F75E  Sprite data. Jar room with key, level 1-2. Total amount of sprites: 2.
11F764  \ Sprite data. Jar room with 1-Up, level 1-2.
11F771  Unused.
11F774  \ Sprite data.
11F7A9  Sprite data. Room with key, level 1-3. Total amount of sprites: 3.
11F7B1  \ Sprite data.
11F7CB  \ Sprite data.
11F7EE  Sprite data. Mouser/boss room, level 1-3. Total amount of sprites: 2.
11F7F5  \ Sprite data.
11F814  \ Sprite data.
11F825  \ Sprite data. Birdo room, level 2-1.
11F82F  \ Sprite data. Jar room (Snifit), level 2-1.
11F83C  \ Sprite data. First room, level 2-2.
11F847  \ Sprite data.
11F876  \ Sprite data. Cave room with extras, level 2-2.
11F885  \ Sprite data.
11F898  \ Sprite data. Jar room, level 2-2.
11F8A5  \ Sprite data. Birdo room, level 2-2.
11F8AF  Sprite data. Trapped in the sand (first room), level 2-3. Total amount of sprites: 1.
11F8B3  \ Sprite data.
11F8CE  Cave room with extras, level 2-3. No sprites used.
11F8D1  \ Sprite data.
11F8F3  \ Sprite data. Jar room, level 2-3.
11F900  \ Sprite data.
11F920  Sprite data. Triclyde boss room, level 2-3. Total amount of sprites: 2.
11F927  \ Sprite data. Key room, level 2-3.
11F930  First room, level 3-1. No sprites used.
11F933  \ Sprite data.
11F94E  Secret warp room, level 3-1. No sprites used.
11F952  \ Sprite data.
11F963  \ Sprite data. Birdo room, level 3-1.
11F96E  \ Sprite data.
11F991  \ Sprite data.
11F9AA  \ Sprite data. Birdo room, level 3-2.
11F9B5  Sprite data. Unused room (belonging to level 3-2). Total amount of sprites: 1.
11F9BA  Sprite data. First room, level 3-3. Total amount of sprites: 1.
11F9BF  \ Sprite data. Outside the fort, level 3-3.
11F9CE  \ Sprite data.
11F9E1  \ Sprite data.
11FA14  \ Sprite data.
11FA30  \ Sprite data. Vertical room #3 with Shy Guy generators, level 3-3.
11FA3D  \ Sprite data. Key room, level 3-3.
11FA49  \ Sprite data.
11FA5D  \ Sprite data. Mouser boss room, level 3-3.
11FA67  \ Sprite data.
11FA96  \ Sprite data.
11FAB7  \ Sprite data.
11FAE5  Sprite data. First room, 4-2. Total amount of sprites: 1.
11FAEA  \ Sprite data.
11FB31  \ Sprite data.
11FB58  \ Sprite data. Spikes, level 4-2.
11FB63  \ Sprite data. Birdo room, level 4-2.
11FB72  Sprite data. First room, level 4-3. Total amount of sprites: 1.
11FB76  \ Sprite data. Outside room, level 4-3.
11FB85  \ Sprite data.
11FBAC  \ Sprite data.
11FBC5  \ High up the castle outside, level 4-3.
11FBD0  \ Sprite data.
11FBE3  \ Sprite data.
11FBF6  \ Sprite data. Fryguy boss room, level 4-3.
11FC03  \ Sprite data. Unused (4-3).
11FC0E  \ Sprite data. Unused (4-3).
11FC19  \ Sprite data. Outside room, level 5-1.
11FC23  \ Sprite data.
11FC4C  \ Sprite data. Birdo room, level 5-1.
11FC55  Sprite data. First room, level 5-2. Total amount of sprites: 1.
11FC5A  \ Sprite data.
11FC91  \ Sprite data.
11FCAA  \ Sprite data. Falling from the sky, level 5-2.
11FCB6  \ Sprite data. Jar room, level 5-2.
11FCBF  \ Sprite data. Birdo room, level 5-2.
11FCCB  Sprite data. First room, level 5-2. Total amount of sprites: 1.
11FCD0  \ Sprite data.
11FCEF  \ Sprite data.
11FD01  \ Sprite data.
11FD1F  \ Sprite data.
11FD40  Sprite data. Clawgrip boss room, level 5-3. Total amount of sprites: 1.
11FD45  \ Sprite data.
11FD70  \ Sprite data. Inside the jar building, level 6-1. (The one with those sneaky Cobrats.)
11FD7F  \ Sprite data. Birdo room, level 6-1.
11FD89  \ Sprite data. Jar room with key, level 6-1.
11FD96  \ Sprite data. Jar room with turtle shell, level 6-1.
11FDA5  \ Sprite data. Jar room with 1-Up, level 6-1.
11FDAE  Sprite data. Jar room with potion, level 6-1. Total amount of sprites: 1.
11FDB2  Sprite data. First room, level 6-2. Total amount of sprites: 1.
11FDB7  \ Sprite data.
11FDEC  \ Sprite data. Birdo room, level 6-2.
11FDF6  Sprite data. Trapped in the sand, level 6-3. Total amount of sprites: 1.
11FDFA  \ Sprite data. Outside, level 6-3.
11FE08  \ Sprite data.
11FE23  \ Sprite data.
11FE50  In the clouds, level 6-3. No sprites used.
11FE55  \ Sprite data. Birdo room, level 6-3.
11FE5E  Sprite data. Triclyde boss room, level 6-3. Total amount of sprites: 1.
11FE63  Sprite data. First room, level 7-1. Total amount of sprites: 1.
11FE67  \ Sprite data.
11FE93  \ Sprite data.
11FEA8  \ Sprite data.
11FEBD  \ Sprite data. Birdo room, level 7-1.
11FEC6  Sprite data. Room with extras, level 7-1. Total amount of sprites: 2.
11FECC  \ Sprite data. Outside, level 7-2.
11FED8  \ Sprite data.
11FEF4  \ Sprite data.
11FF15  \ Sprite data.
11FF2E  \ Sprite data.
11FF53  Sprite data. Wart room, level 7-2. Total amount of sprites: 2.
11FF5B  \ Sprite data.
11FF86  \ Sprite data.
11FFA5  \ Sprite data.
11FFCB  \ Sprite data. Semi-secret outside room.
11FFD6  Unused.
11FFD7  Unused.
11FFD8  Unused.
11FFD9  Unused.
11FFDA  Unused.
11FFE0  \
128008  \ If player not in normal state...
12800A   | ...nor climbing (not forced)...
12800C  / ..don't branch.
128022  \ Player changing size.
128025   | Y = 0 = shrinking, Y = 1 = growing.
128028  / Store sound effect appropiate to the change.
12802B  \ Amount of time to flash = #$1E.
12802D  /
12802F  \ Getting into changing size animation.
128031  /
128033  Execute player state.
128039  \ Execute pointer depending on player status.
12803B  /
12803F  00 - Walk normal.
; 01 - Climbing, normal.
; 02 - Picking something up.
; 03 - Climbing, entering new room.
; 04 - Moving inside a jar.
; 05 - Moving out of a jar.
; 06 - Player walking into Hawkmouth.
; 07 - Dying.
; 08 - Hurt / growing.
128091  \ Flashing timer = #$30.
128093  /
12809B  \ Invincibility timer = #$3F.
12809D  /
1280A0  \ Star music.
1280A2  /
1280FD  \ Return to player select screen.
1280FF   | If lives are 0...
128102   | ...
128104   | ... then return to game over screen.
128105  / <--
128108  Return.
12813B  \ Check only if Up and Down are pressed.
12813D   | LSR twice for a result from 00-03
12813F   |
128140   |
128141   | That into Y for index being used later.
128142   | If going upwards, go to an extra subroutine.
128144   | (Don't branch.)
128146   | Flip direction every 8 frames.
128149   | Get appropiate Y speed in for climbing.     
12814C  /
12814E  \ Now do the same horizontally...
128150   | (left-right)
128152   | Into Y index to get the value for the X speeds.
128153   | <- here
128156  /
128183  \ Run code every 8 frames.
128185   |
128187  /
128189  \ Flip direction.
12818B   |
12818D  /
12818F  \ Climbing sound effect.
128191  /
128194  Return.
128195  Prepare Map16 tile being touched by player.
128199  \ Check if the tile that is being touched is a 'climbing tile'...
12819B   | vines, ladders...
12819D   |
1281A0   | If so, return.
1281A2   | Otherwise, loop.
1281A3   | When through index, and no match has been found...
1281A5   | Clear carry.
1281A6  / Return.
1281AB  Move down.
1281AD  \ Skip code if not completely inside the jar.
1281AF   |
1281B1  /
1281B3  \ Pull return address.
1281B4  /
1281B9  \ Generate player on top of screen.
1281BB  /
1281C3  \ Act like a warp jar.
1281C5  /
1281C8  Return.
1281D9  Move up.
1281DB  \ Generate sound effect on the first frame the player is inside the jar.
1281DD   |
1281DF   |
1281E1  /
1281E3  \ Going out of jar sound effect.
1281E5  /
1281E8  \ If still in jar...
1281EA   |
1281EC   | Return.
1281EE  / Otherwise, go into normal walking mode.
1281F0  Return.
1281F1  \ Y speed.
1281F3   | Result: 80-FF = 01.
1281F4   | Result: 00-7F = 00.
1281F5   |
1281F7  / Into Y.
12822C  \ Return into normal walking mode if $82 == #$00.
12822E  /
12823C  \ Enter Hawkmouth, X-speed.
12823E  /
128240  \ Face right.
128242  /
12824A  <-- $50 - #$00 = normal player state.
12824C  Return.
128673  \ Prepare tile being touched by player.
128675   | Check if touching any of the climbing tiles.
128678  / If so, branch.
12867A  \ If not cherry tile...
12867C   |
12867E  / branch.
128680  Increment cherry counter.           
128683  \ If collected 5 times exactly...
128686   |
128688   | don't branch...
12868A  / And reset cherry counter.
12868D  Generate star man.
128690  \ Collect cherry sound.
128692  /
12869F  \ Clear tile.
1286A1  /
1286A6  \ If not pressing Up/Down...
1286A8   |
1286AA  / Branch.
1286AC  \ If player holding item...
1286AE  / branch.
1286B0  \ If not lining up completely with the vine...
1286B2   | (horizontally)
1286B3   |
1286B5   |
1286B7   |
1286B9  / return.    
1286BB  \ Player = climbing.
1286BD  /
1286C6  \ Climbing pose.
1286C8  /
1286CF  \ Check if there's a free sprite slot.
1286D1   | If so ($51,x = #$00), branch.
1286D3   | (Break out of loop.)
1286D5   | Otherwise loop until...
1286D6   | maximum is reached.
1286D8   | If maximum, not reached, loop, otherwise...
1286DA  / ...end it.
1286FE  Sprite that is spawned will run main routine.
128700  \ If tile is not a sand tile...
128702   |
128704  / branch.
128706  \ How long it takes for the sand digging animation to be done (the actual sprite tile)
128708  /
12870A  \ Actually dig up the darn sand. Sprite number from table will be #$39 (mushroom block)
12870C  /
12870E  \ Get sprite to spawn from table.
128711  /
12872F  \ If 1-Up has already been collected...
128732   |
128734   | Pick up small vegetable instead.
128736  /
128757  \ Tile to spawn when object is picked up = #$40.
128759  / (Empty tile.)
12877B  \ If holding item...
12877D  / branch.
128783  Get Map16 tile index.
128785  \ If not in potion room...       
128788   |
12878A  / branch.
12878C  \ If on warp jar, run 'entering jar' code.
12878E  /
128790  Otherwise, branch.   
128792  \ Y = #$01. (So you're not warping to another world, see $04EF.)
128793   | If tile 6E, Y stays #$01...
128795   |
128797   | If tile 6A, Y becomes #$02   
128799   | If neither, just return.
12879B  / Y = #$02.
12879C  \ If not...
12879E   | lining up exactly...
12879F   | with the middle of the jar...
1287A1   |
1287A3   |   
1287A5  / Return.           
1287A7  \ Sound effect = going down jar.
1287A9  /
1287AC  \ X speed = #$00    
1287AE  /
1287B0  \ Animation = #$04 (going down jar)    
1287B2  /
1287B4  Store result from Y into $04EF.    
128C6E  \ Prepare pointer for the Layer 1 tilemap, page 0.
128C71   |
128C73   |
128C76  /
128E35  \ Player Y position = #$D0.
128E37  /
128E49  \ If tile is...
128E4B   | a blank tile...
128E4D  / Skip, don't JSR.
128F11  \ How long the potion room lasts.
128F13  /
128F84  \ Load border of the 'Super Mario Bros 2.' intro screen.
128F86   |
128F88  /
128F8C  \ Load 'Super Mario Bros. 2' and '�1988-1992 Nintendo.'
128F8E   |
128F90  /
128F98  \ Story music.
128F9A  /
1290E2  \ If timer is not positive (00-7F)...
1290E4  / Load next line.
1290E6  \ Amount of frames to wait for next line = #$40
1290E8  /
1290FF  \ Bank num = $15.
129101   |
129103   | Get address of tables...
129107   | ...which contain the 'Story' data...
129109   | into [$03]
12910D  /
12918D  Clear all OAM.
1291DD  Empty data.
1291E4  Force blank.
1291E8  \ Full brightness.
1291EA  /
129243  \ Amount of frames the 'pulling fairies out of jar' cutscene is going to take.
129245  /
129247  \ Player direction to face.
129249  /
129282  Clear all OAM.
12929A  Clear all OAM.
1292B6  \ Credits song.
1292B8  /
129546  Clear all OAM.
12983E  \ Empty data.
129A3F  \ Don't remain in air.
129A41  /
129A43  Die.
129A80  \ Rise for a bit while dying.
129A82  /
129A84  \ Remain in air for a couple of frames.
129A86  /
129A90  Die.
129AE7  \ Empty.
129B6B  \ If the current room is the first room...
129B6E   | of the first level...
129B71  / ...don't branch, otherwise do branch.
129B73  \ Falling sound.
129B75  /
129D50  \ Load sprite status.
129D52  / Execute pointer.
129D56  00 - Non-existant sprite, init. (Return.)
; 01 - Main routine.
; 02 - Sprite falling off screen.
; 03 - Flat
; 04 - Explode
; 05 - Disappear in a puff of smoke
; 06 - Dissolving sand
; 07 - Stop interacting
; 08 - Disappear in two puffs of smoke
; 09 - Disappear abruptly
129EE4  Sprite status = init routine.
129EE6  Jump to routine based on sprite number.
129EEC  00 - Heart                          
; 01 - Shy Guy, red
; 02 - Tweeter
; 03 - Shy Guy, blue
; 04 - Porcupo
; 05 - Snifit, red
; 06 - Snifit, grey
; 07 - Snifit, blue
; 08 - Ostro with red Shyguy
; 09 - Bob-Omb
; 0A - Albatoss with Bob-Omb
; 0B - Albatoss, coming from left
; 0C - Albatoss, coming from right
; 0D - Ninji, running
; 0E - Ninji, jumping
; 0F - Beezo, gold
; 10 - Beezo, red.
; 11 - Wart Bubble.
; 12 - Pidgit, carpet.
; 13 - Trouter.
; 14 - Hoopster.
; 15 - Shyguy generator.
; 16 - Bob-omb Generator
; 17 - Phanto
; 18 - Cobrat, jar
; 19 - Cobrat, sand
; 1A - Pokey
; 1B - Bullet
; 1C - Birdo
; 1D - Mouser
; 1E - Egg
; 1F - Triclyde
; 20 - Fireball
; 21 - Clawglip
; 22 - Rock
; 23 - Panser, red
; 24 - Panser, blue
; 25 - Panser, green
; 26 - Autobomb with Shyguy
; 27 - Autobomb fire
; 28 - Whale spout
; 29 - Flurry
; 2A - Fryguy
; 2B - Small Fryguy.
; 2C - Wart.
; 2D - Hawkmouth boss.
; 2E - Sparky, right, slow.
; 2F - Sparky, right, fast.
; 30 - Sparky, left, slow.
; 31 - Sparky, left, fast.
; 32 - Small vegetable.
; 33 - Fresh vegetable.
; 34 - Vegetable thrower vegetable.
; 35 - Shell
; 36 - Coin
; 37 - Bomb
; 38 - Rocket
; 39 - Mushroom block
; 3A - POW block
; 3B - Rolling log
; 3C - Door to dark room
; 3D - Key
; 3E - Potion
; 3F - Mushroom
; 40 - 1-Up
; 41 - Pidgit's carpet
; 42 - Hawkmouth, face to the right
; 43 - Hawkmouth, face to the left
; 44 - Crystal ball
; 45 - Star
; 46 - Stopwatch
12A012  \ X speed = #$0C.
12A014  /
12A016  \Phanto takeoff timer
12A018  /
12A045  \ Boss is cleared.
12A047  /
12A0B5  \ Check if negative Y speed (rise up).
12A0B7  / If so, decrease rising speed.
12A0B9  \ Check if falling at maximum speed.
12A0BB  / If so, return, and don't fall any faster.
12A0BD  \ Gravity.
12A0BF  /
12A0C1  Return.
12A189  \ If not a POW sprite, then...
12A18B   | have regular properties...
12A18D  /
12A18F  YXPPCCCT of flat POW sprite. Highest priority bit set, palette 9, GFX page 0.
12A2B3  Tilemap of "BOMB"
12A2B7  XDisp of "BOMB"
12A2BB  YDisp of "BOMB"
12A2D8  \ A != 00 so the following routine has effect.
12A2DA  / Background colour effect.
12A2E6  \ Get sprite's original X pos...
12A2E9   | and add the XDisp to it...
12A2EA   | per tile.
12A2EE  /
12A2F1  \ Same goes for Y pos...
12A2F4   | but then with YDisp instead.
12A2F5   |
12A2F9  /
12A2FC  \ Transfer tilemap. 
12A300  /
12A303  \ Palette animation and more fancy YXPPCCCT properties data...
12A305   | right here.
12A307   |
12A309  /
12A315  \ Size of all tiles = 16x16
12A317  /
12A6B2  \ If timer is up...
12A6B4  / branch.
12A6B6  \ Y speed of sand = #$F8.
12A6B8  /
12A6BD  Tile number of sand tile for the first 16 frames.
12A6BF  \ Check if halfway...
12A6C1   | (16 frames done)
12A6C3  / If not, branch, and keep this tile.
12A6D6  Tile number of sand tile for the last 16 frames.
12A93D  00 - Heart.
; 01 - Red Shyguy.
; 02 - Tweeter.
; 03 - Blue Shyguy.
; 04 - Porcupo.
; 05 - Red Snifit.
; 06 - Grey snifit.
; 07 - Blue snifit.
; 08 - Ostro with Red Shyguy.
; 09 - Bob-Omb
; 0A - Albatoss with Bob-Omb
; 0B - Albatoss, coming from left.
; 0C - Albatoss, coming from right.
; 0D - Ninji, walking.
; 0E - Ninji, jumping.
; 0F - Beezo, gold
; 10 - Beezo, red
; 11 - Wart's bubble
; 12 - Pidgit, carpet.
; 13 - Trouter
; 14 - Hoopster
; 15 - Shyguy generator
; 16 - Bob-omb generator
; 17 - Phanto 
; 18 - Cobrat, jar
; 19 - Cobrat, sand
; 1A - Pokey
; 1B - Bullet
; 1C - Birdo
; 1D - Mouser
; 1E - Egg
; 1F - Triclyde
; 20 - Fireball
; 21 - Clawglip
; 22 - Rock
; 23 - Panser, red
; 24 - Panser, blue
; 25 - Panser, green
; 26 - Autobomb with Shyguy
; 27 - Autobomb fire
; 28 - Whale spout
; 29 - Flurry
; 2A - Fryguy
; 2B - Small Fryguy,
; 2C - Wart.
; 2D - Hawkmouth boss.
; 2E - Sparky, right, slow.
; 2F - Sparky, right, fast.
; 30 - Sparky, left, slow.
; 31 - Sparky, left, fast.
; 32 - Small vegetable.
; 33 - Fresh vegetable.
; 34 - Vegetable thrower vegetable.
; 35 - Shell
; 36 - Coin
; 37 - Bomb
; 38 - Rocket
; 39 - Mushroom block
; 3A - POW block
; 3B - Rolling log
; 3C - Door to dark room
; 3D - Key
; 3E - Potion
; 3F - Mushroom
; 40 - 1-Up
; 41 - Pidgit's carpet
; 42 - Hawkmouth, face to the right
; 43 - Hawkmouth, face to the left
; 44 - Crystal ball
; 45 - Star
; 46 - Stopwatch
12AC11  \ Star Y speed = #$FC.
12AC13  / (Rise up slightly.)
12AC15  \ X speed is #$F8 or #$08.
12AC17   | Switches every 128 frames.
12AC19   |
12AC1C   |
12AC1E   | <--
12AC20  /
12AC3D  \ X position of new sprite = 6 pixels to the left from the generator.
12AC40   |
12AC41   |
12AC43  /
12AC46  \ Y position of new sprite = 4 pixels upwards from the generator.
12AC49   |
12AC4B  /
12AC60  \ Check if Bob-Omb generator.
12AC62   |
12AC64  / If not, return.
12AC66  \ Spawn Bob-Omb.
12AC68  /
12AC88  \ No X-speed.
12AC8A  /
12AC94  \ If time to wait before Hawkmouth opens his mouth is 0...
12AC97  / Branch.
12AC99  \ Decrease that timer. If not hitting 0, branch.
12AC9C  /
12AC9E  \ Opening mouth sound effect.
12ACA0  /
12AD14  \ Enter Hawkmouth.
12AD16  /
12AD18  \ Amount of frames to keep walking.
12AD1A  /
12AD1C  \ Y speed of player when entering Hawkmouth.
12AD1E  / Rise up slightly.
12AD20  \ Fade music.
12AD22  /
12AD28  \ Entering Hawkmouth sound effect.
12AD2A  /
12AECA  \ X speed = #$FC...
12AECC   | For $20 consecutive frames.
12AECE   |
12AED0   |
12AED2   | The other $20 consecutive frames, X speed = #$04.
12AED4  /
12AED6  \ Y speed = #$F8.
12AED8  /
12AEFF  \ Upper tile number of heart.
12AF01  /
12AF04  \ Lower tile number of heart.
12AF06  /
12AF09  \ X-Flip tile every $20 frames.
12AF0B   |
12AF0D   |
12AF0F   |
12AF10   | Palette 9, tile page 0. Priority 2.
12AF12   |
12AF15  /
12AF21  \ Tiles are 8x8.
12AF23   |
12AF26  /
12B041  \ If sprite is 1-Up...
12B043   | ...
12B045  / ...branch.
12B047  Return.
12B048  1-Up collected flag, next time 1-Up object is picked up, a vegetable is spawned.
12B04B  \ Increment lives by 1 unless lives >= 99.
12B04E   |
12B04F   |
12B051   |
12B053   |
12B055  /
12B058  \ 1-Up get sound effect.
12B05A  /
12B05D  Return.
12B064 \If crystal ball is completely picked up
12B066 /
12B07D  \ If not Crystal Ball, branch.
12B07F   |
12B081  /
12B083  \ If Crystal ball already collected, return.
12B086  /
12B088  \ Bonus get music.
12B08A  / (When Crystal ball is collected.)
12B08D  \ Amount of time to wait before Hawkmouth opens his mouth.
12B08F  /
12B092  \ Amount of time to wait before changing music back to normal one.
12B094  /
12B097  Set 'Crystal ball has been collected' flag.
12B09A  Return.
12B09B  \ If 1-Up, branch.
12B09D  /
12B09F  \ If Stopwatch, branch.
12B0A1  /
12B0A3  \ If not Mushroom, branch.
12B0A5  /
12B0AE  Increase maximum amount of hearts.
12B0B1  Fill all hearts. (NOPing this out only increases the maximum, but won't actually make the hearts red.)
12B0B5  \ Bonus game music.
12B0B7  / (Mushroom collected.)
12B0C4  \ Y speed of 1-Up mushroom when collected.
12B0C6  /
12B0CD  \ Set sprite freeze timer to #$FF. (For stopwatch.)
12B0CF  /
12B0D2  Return.
12B279  \ Init X speed = #$F0 (left).
12B27B  / More convenient than BRA. (Because the zero bit is clear, anyway.)
12B280  \ Init X speed = #$10 (right).
12B282  /
12B2CC  \ Spawn Bob-Omb.
12B2CE  /
12B331  \ Start loop, maximum index.
12B333  / 
12B335  Start loop with a lower index.
12B337  \ Check if there's a free sprite slot somewhere.
12B33A   | $51,y - 00 = free slot.
12B33C   | If not, get to next index.
12B33D   | Loop
12B33F  / If all slots full, return.
12B366  Use $00 as index for new sprite.
12B373  \
12B376   | Phanto shake animation timer (upon takeoff)
12B378  /
12B37B  Draw GFX?
12B37E  Y = #$01.
12B380  \ Check if player is holding something.
12B382  / If not, branch.
12B384  Get index of carried sprite.
12B387  \ Check if carried sprite = #$3D. (Key)
12B389   | (Get Phanto's index back again)
12B38B   |
12B38D   | If not, branch.
12B38F   | (Why not simply use BNE?)
12B391  /
12B393  \
12B396   |Decrease takeoff timer until it hits 0
12B398   |
12B39A  /
12B3B6 Phanto maximum Y speed
12B3BC Phanto acceleration rate
12B67F  \ Set X speed.       
12B682  /
12B684  \ No Y speed.
12B686  /
12B688  \ Spawn Bullet.
12B68A  /
12B717  \ Wrapper.
12B71A  /
12B727  \ Check if sprite = POW
12B729   | (#$3A)
12B72B  / If that is the case, branch. Otherwise it's a mushroom block.
12B774  \ Check if sprite = POW
12B776   | If that is the case, kill sprites and make a sound effect.
12B778  / Otherwise it's a mushroom block.
12B77A  \ Shake screen and kill all enemies on-screen for #$20 frames.
12B77C  /
12B77F  \ POW SFX.
12B781  /
12B784  \ Disappear in two puffs of smoke.
12B786  /
12B789  \ If Y speed of mushroom block is too great (=> #$16)...
12B78B   |
12B78D  / branch. Don't lock block in place yet.
12B78F  \ Check if X speed of mushroom blocks is too great (=> #$30 on either sides...
12B791   |
12B793   |
12B795   |
12B796   |
12B798   | If that is not the case, branch.
12B79A   | If it is, set the speed value to a value lower than #$30.
12B79C   | So #$2F or #$D1, depending on the direction.
12B79E   |
12B7A0   |
12B7A2  /
12B7A4  Return.
12B7A8  New Y speed (bouncing off ground).
12B7B0  \ Change into the tile $79,x is holding.
12B7B2  / (Should be #$64.)
12B7B6  Terminate mushroom block sprite.
12B7B9  Return.
12B7D9  Decrease amount of time you stay in the dark potion room.
12BB20  \ Player is not holding anything.
12BB22  /
12BB41  \ Generate another sprite when picked up.
12BB44   | (If not the correct value, don't generate that sprite)
12BB46  / Pidgit's carpet.
12BB49  \ Fall down.
12BB4B  /
12C260  \ Empty.
12C5D8  \ Check if free sprite slot is available.
12C5DB  / If not, return.
12C5DD  New sprite index.
12C5DF  Old sprite index.
12C5E1  \ Zero X speed.
12C5E3   | Zero Y speed.
12C5E5  / (Why not simply use STZ $3D,x STZ $47,x?)
12C5E7  \ Generate carpet sprite.
12C5E9  /
12C5EB  \ Generate carpet 8 pixels to the left from Pidgit.
12C5EE   |
12C5EF   |
12C5F1   |
12C5F3   |
12C5F6   |
12C5F8  /
12C5FA  \ ...and 14 pixels below Pidgit.
12C5FD   |
12C5FE   |
12C600   |
12C602   |
12C605   |
12C607  /
12C60C  \ Amount of time carpet will remain.
12C60E  /
12C610  X = old sprite index.
12C612  Return.
12CCD1  \ Check if Cobrat needs to remain in sand.
12CCD4  / If not, branch.
12CCD6  X speed = #$00.
12CCDB  \ Check if player is near enough to Cobrat.  
12CCDD   |
12CCDF   |
12CCE1  / If not, do regular routine. (Remain in sand)      
12CCE3  Don't retreat into sand anymore.
12CCE6  \ Jump up.
12CCE8  /
12CCEA  Branch. 
12CCEC  Increase every frame.  
12CCEF  \ Y speed = #$FC for $20 frames.
12CCF1   |
12CCF4   |
12CCF6   |
12CCF8   | The other $20 frames, Y speed = #$04.
12CCFA  /
12CD06  \ If Y speed is negative, branch.
12CD08  /
12CD19  Gravity.
12D904 \If crystal ball has not been collected
12D907 /
12D909 \If collected
12D90B /
12DD75  \ Empty.
12E0E2  \ If in contact with star...
12E0E4  / Make player invincible.
12E0E6  \ Flashing timer = #$3F.
12E0E8  /
12E0EB  \ Star music.
12E0ED  /
12E0F0  \ Remove sprite.
12E0F2  /
12E0F5  Return.
12E17C  \ Don't pick enemy up if not pressing X nor Y.
12E17E  /     
12E192  Handle player animation and sound effect.
12E196  \ Handle JSR if Pidgit.
12E198   |
12E19A  /
12E19C  Generate carpet.
12E31D  \ Rise in air.
12E31F  /
12E321  \ Remain mid-air for some time.
12E323  /
12E32D  Kill player.
12E457  \ Empty.
12E465  30-3F - Horizontal bricks.
; 40-4F - Horizontal X-blocks.
; 50-5F - Horizontal multiple vegetables.
; 60-6F - Horizontal bridge.
; 70-7F - Horizontal spikes.
; 80-8F - Vertical bricks.
; 90-9F - Vertical bricks.
; A0-AF - Vertical ladders.
; B0-BF - Horizontal whales.
; C0-CF - Horizontal green platforms.
; D0-DF - Horizontal logs.
; E0-EF - Horizontal clouds.
; F0-FF - Horizontal waterfalls.
12E4CE  \ Get object type number (0 = bricks, 1 = X-blocks, etc. C = waterfalls) * 4 into $0F.
12E4D1   |
12E4D2   |
12E4D3  /
12E7F1  \ If amount of Map16 blocks to transfer is negative, terminate.
12E7F4  /
12E7F6  Return.
12F230  Tiles with which the level is blanked out. $40 = low byte, $00 = high byte. Blank tile.
12F238  Which area of the Layer 1 tables is affected. $7E2000-$7E8FFF = low bytes, $7E9000-$7EFFFF = high bytes.
12F240  \ Use brightness as an index.
12F243   | But only values #$0F, #$0D, #$0B and #$09 are used as brightness. (And there are XORd with #$0F)
12F245  / Resulting value (#$00, #$02, #$04 or #$06) goes in X.
12F246  A = 16-bit.
12F248  \ Amount of bytes to clear = #$3800.
12F24B   |
12F24D   | Map16 Tile to use = $40 (low byte) and $00 (high byte).  
12F251   |
12F253   | Which area in the Layer 1 Map16 table to affect.  
12F257   | Bank num = $7E.
12F259  / DMA all data via the math registers at $211B/C.
12F25D  A = 8-bit.
12F25F  Return.
12F260  A = 8-bit. Unused?
12F262  Return. Unused?
12F29A  \ A = 16-bit.
12F29C   | Amount of bytes to clear = #$A000.
12F29F   |
12F2A1   | Value to transfer is #$FFFF.
12F2A4   | Why not simply LDA #$FFFF?
12F2A5   |
12F2A8   |
12F2AA   | Starting address of table = $7F2000 (Layer 2 Map16 table)
12F2AD   |
12F2AF  / DMA all data via the math registers at $211B/C.
12F2B3  A = 8-bit.
12F2B5  Return.
12F2BA  \ Load index to palettes...
12F2BD   | per world.
12F2C1   | [$07] = pal pointer.
12F2C3   |
12F2C7   |
12F2C9   |
12F2CB  /
12F2D3  \ Load index to palettes...
12F2D6   | per world.
12F2DA   | [$07] = pal pointer.
12F2DC   |
12F2E0   |
12F2E2   |
12F2E4  /
12F2EF  Prepare ($D9) pointer to load the Layer 1 room data.
12F2F3  Start off at the very start of the table.
12F2F5  \ Load first byte.
12F2F7   | Preserve A first.
12F2F8   | Prepare palette pointer.
12F2FB  / 
12F4D7  \ Don't run following routine routine if screen is too dark.
12F4D9   | Brightness < #$09.
12F4DB  /
12F4DD  Clear Layer 1 RAM table.
12F565  \ Bit 7 of byte 1...
12F567   | ... of level header of object data...
12F569   | Goes into carry.
12F56A   | All bits are clear.
12F56C   | Carry into bit 0.
12F56D  / Store into horizontal level flag. So that depends on bit 7 of the first header byte.
12F5CE  \ Get 16-bit address of Layer 1 room data in 16-bit pointer ($D9)
12F5D1   |
12F5D4   |
12F5D5   |
12F5D8   |
12F5D9   |   
12F5DC   |
12F5DE   |   
12F5E1  /
12F5E3  Return.
12F60F  \ Check if position byte inside the object tables is $FF...
12F611   |
12F613  / If so, terminate.
12F615  \ Get X position of object.
12F617  /
12F619  \ Get relative Y position....
12F61B   |
12F61D   | ... if $F0 (special object), don't branch.
12F61F  /
12F621   Load X position of object...
12F68C  \ Jump to code, dependant on...
12F68D   | ... X position of special object.
12F68E  /
12F9BF  \ Get world number * 3 into X index.
12F9C2   |
12F9C4   |
12F9C7   |
12F9C8   |
12F9C9   |
12F9CC   |
12F9CD   | [$02] = Pointer to the miniature level during the 'World x-x' screen.
12F9D1   |
12F9D3   |   
12F9D7   |
12F9D9   |   
12F9DD  /
12F9DF  \ Increase VRAM destination by 1 if written to $2119.
12F9E1  /
12F9E4  Accumulator and Index = 16-bit
12F9E6  \ Image on Layer 1 tilemap.
12F9E9  /
12F9EB  Start with first byte of image table.
12F9EE  Amount of bytes to write per line = #$28.
12F9F1  \ $00 into VRAM destination address.
12F9F3  /
12F9F6  \ Transfer image over to VRAM.
12F9F8   |
12F9FB   |
12F9FC   |
12F9FD   |
12F9FE   |
12F9FF  / If line not completed, loop.
12FA01  \ Go to next line.
12FA03   |
12FA06   |
12FA08   | If result does not go beyond the miniature level's position in the tile map...
12FA0B  / Loop and transfer next line.
12FA0D  Accumulator and Index = 8-bit.
12FA0F  Return.
12FAD4  \ Get index to object data...
12FAD7   | Per room, per level.
12FADB   |
12FADC   |
12FADF   |
12FAE0   | Forms pointer ($D9).  
12FAE3   |
12FAE5   |  
12FAE8  /
12FCEB  2-1, 5-2, 5-2, 5-2, 6-3, 6-3.
12FCF1  First room, third room, fourth room, fifth room, fourth room, fifth room.
12FD0A  \ Check if bit 2 from first byte is set...
12FD0C   |
12FD0E   |
12FD10   | If so, put up IRQ and the starry BG.
12FD12  /
12FD15  \ Get bit 4...
12FD17   | Divide by 16...
12FD19   |
12FD1A   |
12FD1B   |
12FD1C   |
12FD1D  / And store result into Layer 3 transparency flag.
12FD20  \ Enable Layer 3 background if applicable.
12FD22   |
12FD23   |
12FD24   |
12FD25   |
12FD27  /
12FD41  \ If not in 4-2...
12FD44   |
12FD46   | Branch.
12FD48   | If in first room of 4-2...
12FD4B   | Branch.
12FD4D   | If in fifth room of 4-2...
12FD4F   | Branch.
12FD51  / Otherwise, branch further.
12FD53  \ Check if in 4-3...
12FD55   | If not, branch.
12FD57   | Check if in first room..
12FD5A   | If so, branch.
12FD5C   | If in second-sixth room...
12FD5E  / Branch further.
12FD66  \ Check if in 3-1.
12FD69   |
12FD6B   | If not, branch.
12FD6D   | Check if in second room.
12FD70   |
12FD72  / If not, branch.
12FD96  Clear Layer 2 Map16 tables.
12FFF2  \ Empty data.
138062  Accumulator = 16-bit.           
138064  \ Load sprite GFX tiles 00-7F. (00-1F will get overwritten)
138067   | ($19E000)
138069   |
13806B  /
13806D  \ Amount of bytes to transfer = #$1000. 
138070  /
138072  \ First GFX slot. 
138075  / Transfer to VRAM.
138078  \ Load sprite GFX tiles 80-13F.
13807B   | ($16C000)
13807D   |
13807F  /
138081  \ Amount of bytes to transfer = #$1800. 
138084  /
138086  \ Second and first half of third GFX slots. 
138089  / Transfer to VRAM.
13808C  \ Get world number into Y, *2 into X index.
13808F   |
138092   |
138093   |
138094  /
138095  Hold X to get later. 
138096  \ Load sprite GFX tiles 140-17F from pointer.
13809A   |
13809C   |
13809D   |     
1380A1   |
1380A2  /
1380A4  \ Amount of bytes to transfer = #$0800.
1380A7  /
1380A9  \ Second half of third GFX slot. 
1380AC  / Transfer to VRAM.
1380AF  \ Get world number * 2 back.
1380B0  /
1380B1  \ Load sprite GFX tiles 180-1BF from pointer.
1380B5   |
1380B7   |
1380B8   |     
1380BC   |
1380BD  /
1380BF  \ Amount of bytes to transfer = #$0800. 
1380C2  /
1380C4  \ First half of fourth GFX slot. 
1380C7  / Transfer to VRAM.
1380CA  \ Load sprite GFX tiles 1C0-1FF.
1380CD   | ($179000)
1380CF   |
1380D1  /
1380D3  \ Amount of bytes to transfer = #$0800. 
1380D6  /
1380D8  \ Second half of fourth GFX slot. 
1380DB  / Transfer to VRAM.
1380DE  \ Get world number * 2 back.
1380DF  /
1380E0  \ Load layer GFX tiles 00-7F from pointer.      
1380E4   |
1380E6   |
1380E7   |     
1380EB   |
1380EC  /
1380EE  \ Amount of bytes to transfer = #$1000.
1380F1  /
1380F3  \ First GFX slot.
1380F6  / Transfer to VRAM.
1380F9  \ Load layer GFX tiles 80-BF.
1380FC   | ($18C000)
1380FE   |
138100  /
138102  \ Amount of bytes to transfer = #$0800. 
138105  /
138107  \ First half of second GFX slot.
13810A  / Transfer to VRAM.
13810D  Get world num * 2. 
13810E  \ Load layer GFX tiles C0-FF from pointer.
138112   |
138114   |
138115   |     
138119   |
13811A  /
13811C  \ Amount of bytes to transfer = #$0800. 
13811F  /
138121  \ Second half of second GFX slot.
138124  / Transfer to VRAM.
138127  Accumulator = 8-bit.
138129  Return.
1385E3  \ Get level + room number into index.
1385E6   |
1385E8   |
1385EA   | Accumulator & Index = 16-bit.
1385EC   |
1385EF   |
1385F2   |
1385F3   | 
1385F7   |
1385FA   |
1385FB   |
1385FD  /
1385FE  \ Tiles of the FG/BG slots 140-17F, high byte.
138602   |
138605   |
138606  /
138609  \ Tiles of the FG/BG slots 180-1BF, high byte.
13860D   |
138610   |
138611  /
138614  \ Tiles of the FG/BG slots 1C0-1FF, high byte.  
138618   |
13861B   |
13861C  /
13861F  \ Tiles of the FG/BG slots 140-17F, bank byte.     
138623  /
138626  \ Tiles of the FG/BG slots 180-1BF, bank byte.  
13862A  /
13862D  \ Tiles of the FG/BG slots 1C0-1FF, bank byte.  
138631  /
138634  Index = 8-bit.
138636  \ If not in World 7, branch.
138639   |
13863B  /
13863D  \ $1DB000 = Tiles of the FG/BG slots 100-13F
138640   | Metal ground graphics.
138642   |
138644  /
138646  \ $1BC000 = Tiles of the FG/BG slots 100-13F.
138649   |
13864B   |
13864D  /
13864F  \ Amount of bytes to transfer = #$0800.
138652  /
138654  \ First half of third GFX slot.
138657  / Transfer to VRAM.
13865A  \ Load tiles 140-17F of the FG/BG slots from pointer.
13865D   |
13865F   |
138662  /
138664  \ Amount of bytes to transfer = #$0800.
138667  /
138669  \ Second half of third GFX slot.
13866C  / Transfer to VRAM.
13866F  \ Load tiles 180-1BF of the FG/BG slots from pointer.
138672   |
138674   |
138677  /
138679  \ Amount of bytes to transfer = #$0800.
13867C  /
13867E  \ First half of fourth GFX slot
138681  / Transfer to VRAM
138684  \ Load tiles 1C0-1FF of the FG/BG slots from pointer.
138687   |
138689   |
13868C  /
13868E  \ Amount of bytes to transfer = #$0800.
138691  /
138693  \ Second half of fourth GFX slot.
138696  / Transfer to VRAM.
138699  \ Load different graphics for tiles C0-FF of the FG/BG slots if the following levels:
13869C   | Level 1-3...
13869E   |
1386A0   | Level 3-3...
1386A2   |
1386A4   | or level 4-3.
1386A6   |
1386A8   | If NOT level 5-3, even different tiles are used for tiles C0-FF of the FG/BG slots.
1386AA   |
1386AC   | If it's level 5-3 and the sixth room is entered...
1386AF   | ...use the tiles from 1-3, 3-3 and 4-3.
1386B1   |
1386B3   | Graphics from $18C800 are used.
1386B6   | $0800 bytes.
1386B8   |
1386BA  /
1386BC  \ 1-3, 3-3, 4-3 or 5-3 room 6.
1386BF   | They use graphics from $1D9000.
1386C1   |
1386C3   |
1386C5   | $0800 bytes also.
1386C8   |
1386CA   | VRAM destination is where tiles C0-FF go.
1386CD   | Transfer to VRAM.
1386D0  / Branch.
1386D2  \ If NOT 7-2...
1386D5   | ...then don't load any new tiles at all.
1386D7   |
1386D9   | 7-2 uses graphics from $1DA000.
1386DC   |
1386DE   |
1386E0   |
1386E2   | $0800 bytes as usual.
1386E5   |
1386E7   | VRAM destination is where tiles C0-FF go.
1386EA  / Transfer to VRAM.
1386F2  \ Level 2-1...
1386F5   | (If not, branch.)
1386F7   |
1386F9   | The second room.
1386FC   |
1386FE   |
138700   | Or the third room.
138702  / If either, branch.
138704  \ Level 2-3...
138707   | (If not, branch and return.)
138709   |
13870B   |
13870E   | The fourth room...
138710   |
138712   | Or the sixth room...
138715   | (Extra LDX $0534 is redundant, by the way.)
138717   |
138719   | Or the eighth room.
13871B   | If none of these, return.
13871D   | Upload stone graphics to 100-13F.
138720   | Source: $1DA800.
138722   |
138724   |
138726   | Size: $0800 (x40 tiles)
138729   |
13872B   | Destination: FG/BG tile slots 100-13F.
13872E  / Transfer to VRAM.
138736  A = 8-bit.
138738  Return.
138739  Icy ground graphics.
13873D  Accumulator = 16-bit.
13873F  \ Check if in level 5-3.
138742   |
138744  / If not, branch.
138746  Layer tiles 200-23F = $1D9800.
13874D  \ Load GFX pointer for layer tiles 200-23F.
138751   | Into [$0D]
138753   |
138755  /
138757  \ Amount of bytes to transfer = #$0800.
13875A  /
13875C  \ First half of fifth GFX slot.
13875F  / Transfer to VRAM.
138762  \ Layer tiles 240-27F pointer into [$0D]
138765   | ($1D9000)
138767   |
138769  /
13876B  \ Amount of bytes to transfer = #$0800.
13876E  /
138770  \ Second half of fifth GFX slot.
138773  / Transfer to VRAM.
138776  Accumulator = 8-bit.
138778  Return.
1388F5  Accumulator = 16-bit.
1388F7  \ Layer tiles 00-3F.
1388FA   | ($1A8000)
1388FC   |
1388FE  /
138900  \ Amount of bytes to transfer = #$0800.
138903  /
138905  \ First half of first GFX slot.
138908  / Transfer to VRAM.
13890B  \ Layer tiles 40-FF.
13890E   | ($19C800)
138910   |
138912  /
138914  \ Amount of bytes to transfer = #$1800.
138917  /
138919  \ Second half of first and full second GFX slot.
13891C  / Transfer to VRAM.
13891F  \ Amount of bytes to transfer = #$4000.
138922  /
138924  \ Sprite tiles 00-1FF.
138927   | ($1B8000)
138929   |
13892B  /
13892D  \ All four GFX slots.
138930  / Transfer to VRAM.
138933  Accumulator = 8-bit.
138935  Return.
138AC4  \ Increment after write to $2119.
138AC6   | Increment source&destination addresses by 1.
138AC9   | 16-bit value in A determines destination in VRAM.
138ACC   | 1 byte per reg (2 regs, low byte in $reg, high byte in $reg+1).
138ACE   | Clear carry.
138ACF   | -------------^
138AD2   | [$0D] holds the source address.
138AD4   |
138AD7   |
138AD9   |
138ADC   | $0B (16-bit) holds the size.
138ADE   |
138AE1   | Data transfer here.
138AE3   |
138AE6  / Return.
1392B3  \ Empty.
139DE7  \ Empty.
13A615  Empty tile. (Tile FF)
13A6E5  Tileset 0.
; Tileset 1.
; Tileset 2.
; Tileset 3.
; Tileset 4.
; Tileset 5.
; Tileset 6.
; Tileset 7.
; Tileset 8.
; Tileset 9.
; Tileset A.
; Tileset B.
; Tileset C.
; Tileset D.
13DB67  \ Empty.
13DCF6  Accumulator and Index = 16-bit.
13DCF8  \ Get world number * 2 into index.
13DCFB   |
13DCFE   |
13DCFF  /
13DD00  \ Get BG colour for the 'World x-x' screen.  
13DD04  /
13DD07  \ Get index for different palette set.     
13DD0B  /
13DD0C  \ Y = #$0000.
13DD0F   | Load colours into palette 1.
13DD13   |
13DD16   | Load colours into palette 2. 
13DD1A   |
13DD1D   | Load colours into palette 7. 
13DD21  /
13DD24  \ Get to next colours.
13DD25   |
13DD26   |
13DD27   |
13DD28   | Check if full palette has been uploaded.
13DD2B  / If not, loop.
13DD2D  \ Palette 3 colours D-F = white.
13DD30   |
13DD33   |
13DD36  /
13DD39  \ Palette 5 colour 9-B = pink-ish colours.
13DD3C   |
13DD3F   |
13DD42   |
13DD45   |
13DD48  /
13DD4B  Accumulator and Index = 8-bit.
13E536  \ Empty.
13E7BA  Clear all OAM.
13EF3F  \ Empty.
13F2C7  \ [$00] = Pointer to Map16 tileset.
13F2CA   |
13F2CC   |
13F2CF   |
13F2D1   |
13F2D4  /
13F2D9  Accumulator and Index = 16-bit.
13F2DB  \ Check if Layer 2 Map16 tile = #$FF.
13F2DD   |
13F2E0   |
13F2E3  / If not, branch.
13F2E5  \ Load empty tile.
13F2E9   | ($13A615)
13F2EB   |
13F2EE  /
13F2F0  Y = #$0000.
13F2F5  \ Multiply by 8 (8 bytes for 1 Map16 tile)
13F2F6   |
13F2F7   |
13F2F8  / Into Y.
13F2F9  \ Store top-left tile.
13F2FB   |
13F2FF   | Get to next tile.
13F300   |
13F301   | Store bottom-left tile.
13F303   |
13F307   | Get to next tile.
13F308   |
13F309   | Store top-right tile.
13F30B   |
13F30F   | Get to next tile.
13F310   |
13F311   | Store bottom-right tile.
13F313  /
13F317  Accumulator and Index = 8-bit.
13F3B9  \ Get level + room number into index.
13F3BC   |
13F3C0   |
13F3C1   |
13F3C4  /
13F3C5  \ Load a certain Layer 2 Map16 tileset.     
13F3C9   |
13F3CA  /
13F3CB  \ Tileset pointer, low byte, into $02DF.
13F3CF  /
13F3D2  \
13F3D3   | Tileset pointer, high byte, into $02E0.    
13F3D7  /
13F3DA  \ Bank number = #$13.
13F3DC  / Into $02E1.
13F3DF  Return.
13F430  \ Check if Layer 2 Map16 tile = #$FF.
13F432   |
13F435   |
13F438  / If not, branch.
13F43A  \ Load empty tile data.
13F43E   | ($13A615)
13F440   |
13F443  /
13F445  Y = #$0000.
13F498  \ Empty.
13F7CC  \ Check if Layer 2 Map16 tile = #$FF.
13F7CE   |
13F7D1   |
13F7D4  /
13F7D6  \ Empty tile.    
13F7DA   | ($13A615)
13F7DC   |
13F7DF  /
13F7E1  Y = #$0000.
13F86B  \ Empty.
13F974  Get index (position) to the corresponding Map16 tile.
13F976  \ If Map16 page 0, branch.
13F978  /
13F97A  \ All tiles on page 1 must act like...
13F97C   |
13F97D   | $2C, $40, $AB or $C0...
13F981  / from page 0.
13F983  This is for page 0, just act what it's supposed to act like.
13F985  Pull X index back.
13F997  Map16 tile 'acts like'.
13F9D7  \ Pick something up animation.
13F9D9  /
13F9DE  \ Amount of frames it should take to pick the enemy up.
13F9E0  /
13F9E8  \ Picking something up sound effect.
13F9EA  /
13F9ED  Return.
13FBC2  Preserve sprite index.
13FBC3  \ Don't flash colours if in potion room.
13FBC6   |
13FBC8  /
13FBCA  A = 16-bit
13FBCC  \ If value is zero...
13FBCF  / branch.
13FBD1  \ Flash through 4 different colours...
13FBD3   | <--
13FBD6   |
13FBD7   | Apparently, the 16-bit colour values interfer with eachother (no ASL is included, table is not 8 bytes long but only 5 bytes)
13FBDA   | This may complicate hex editing the colours to your likings.
13FBDD  /
13FBDF  No flashing BG colour.
13FC15  \ Update palettes.
13FC17  /
13FC1A  Pull sprite index.
13FC1B  Return.
13FC59  Update palettes and return appropiately.
13FC89  \ Get level + room number into X index.
13FC8C   | 
13FC8F   |
13FC90   |
13FC93   |
13FC94   | Check HDMA BG table. 
13FC98   | If value = $FF, don't load a HDMA BG.
13FC9A  /
13FC9C  Load HDMA BG.
13FCA0  Return.
13FCA1  \ Empty.
14C000  \ Empty.
14CCBD  \ These values indicate what tiles on page 1 should act like.
14CD45  \ Empty.
14D11C  \ Pal 0 col 0 = black.
14D11E   | (#$0000)
14D121  /
14D124  \ Update palettes.
14D125  / ($02A9 is non-zero.)
14D12D  \ Should Layer 3 be placed above Layer 2 and have transparency?
14D130  / If so, branch.
14D132  \ Layer 1 and object layer on main screen.
14D134   |
14D137   | Layers 2 and 3 on sub screen.
14D139   |
14D13C   |
14D13E   |
14D141   | Enable backdrop.
14D143  /
14D146  \ Why are you repeating yourself?
14D148   |
14D14B   |
14D14D   |
14D150   | Add subscreen to colour window.
14D152   |
14D155   | Enable CGADSUB on backdrop only.
14D157  /
14D15A  Return.
14D17F  \ Layers 1 and 3 and object layer on main screen.
14D181   |
14D184   | Layers 1 and 2 and object layer on sub screen.
14D186   |
14D189   | Add subscreen to colour window.
14D18B   |
14D18E   | Enable CGADSUB on backdrop and Layer 3, half-colour.
14D190  /
14D193  Return.
14DA9F  Clear all OAM.
14DE45  \ Empty.
14E098  \ Temporary data bank register = $11.
14E099   | 16-bit read from a table....
14E09B   | ...which is situated in bank 11.
14E09C  /
14E09D  \ Set the HP count (red hearts) to be equal to the amount of hearts shown (all hearts in total).
14E0A0   |
14E0A3  /
14E0A6  Pull original data bank register back.
14E0A7  Return.
14E0CD  \ Don't hang in mid-air for some time.
14E0CF  / This is for dying when falling off-screen.
14E0D1  Kill player.
14E33A  Level music table.
14E3A2  \ Death animation.
14E3A4  /
14E3A6  Zero HP.
14E3B2  \ Death pose.
14E3B4  /
14E3D8  \ Death music.
14E3DA  /
14E3DE  \ Sprite loading pointers...
14E3E1   | ...are loaded per room...
14E3E5   | ...into $1B00,y. A buffer.
14E3E7   | That is basically what this entire code is about.
14E3EB   |
14E3ED   | First the high byte table.
14E3EF   |
14E3F1   | Then the low byte table.
14E3F5   |
14E3F7   |
14E3FB   |
14E3FD   |
14E3FF   |
14E401   |
14E403   |
14E406   |
14E408   |
14E40A   | Per room too now.
14E40D   | Load from pointers...
14E40F   | and store to create yet another pointer.
14E411   |
14E413   |
14E415   | A = 16-bit.
14E417   | Store sprite data into buffer.
14E419   |
14E41B   |
14E41E   |
14E41F   |
14E420   |
14E422   | A = 8-bit.
14E424  / Return.
14E6AC  Empty.
14ED42  \ Empty.
14F285  World 4-specific flag reset.
14F28B  Get index to Map16 tile.
14F28D  \
14F28F   | Preserve high byte of L1 M16 pointer in $0712.
14F292   | Point L1 Map16 pointer to the "high" byte part of the tiles (page num).
14F293   |
14F295  /
14F297  \ If on page 0...
14F299  / branch.
14F29B  Otherwise, handle page 1 graphics.
14F2A1  \ High byte of L1 M16 tables.
14F2A4  /
14F2A6  \ If not in World 4...
14F2A9   |
14F2AB  / ...branch.
14F2AD  Set World 4 flag (World 4 loads several different tiles, for example rock walls become icy stone walls.)
14F2B0  Branch to the same place.
14F2B2  \ High byte of L1 M16 tables.
14F2B5  /
14F2B7  \ Load tile, get into $0720.
14F2B9   |
14F2BC   | Get upper two bits...
14F2BE   |
14F2BF   |
14F2C0   |
14F2C1   |
14F2C2   | ...and make them determine the index for the M16 tiles.   
14F2C5   | Per $40 tiles, there is one slot.
14F2C7   |
14F2CA   |
14F2CC   |
14F2CE  /
14F2D0  Get index to Map16 tile.
14F2D2  AXY = 16-bit.
14F2D4  \ Load tile number.
14F2D6   | Mod 64.
14F2D9   | Branch.
14F2DB  AXY = 16-bit.
14F2DD  \ Get corresponding Map16 tile number again (low byte)
14F2DF   |
14F2E2   | Multiply by 8.
14F2E3   | And into Y, used as index in Map16 tilemap tables later.
14F2E4   |
14F2E5  /
14F2E6  \
14F2E9   |
14F2EC   | In potion room?
14F2EF   | Branch.
14F2F1   | In regular warp jar?
14F2F4   | If not, branch.
14F2F6   | Check if there are any bombable bricks.
14F2F9   | Those are handled seperately (they get high priority).
14F2FC   |
14F2FF   | If not, follow same way as the normal case does.
14F301  / Otherwise jump.
14F304  \ World 4?
14F307   | If so, branch.
14F30A  /
14F33C  \ World 4?
14F33F   |
14F342   | No: Go to $14F347.
14F344  / Yes: Go to $14F3D9.
14F347  \ Tiles are flipping horizontally.
14F349   | Applies to the potion room effect.
14F34C   |
14F34F   |
14F350   |
14F351   |
14F353   | EOR #$4000 indicates...
14F356   | ...that the X flip bit is changed.
14F359   | Resulting in a horizontal flip effect.
14F35A   |
14F35B   |
14F35D   |
14F360   |
14F363   |
14F364   |
14F365   | 4 8x8 tiles per Map16, so 4 stores.
14F367   |
14F36A   |
14F36D  / Branch.
14F40D  \ Applies to bombable bricks in warp jars only.
14F40F   |
14F412   | Give maximum priority to all 4 8x8 tiles.
14F415   |
14F416   | The purpose?
14F417   | Unsure - perhaps for the 1-Up mushroom in 1-2.
14F419   | So that the 1-Up would not appear in front of the bricks...
14F41C   | ...but rather behind them.
14F41F   |
14F420   |
14F421   |
14F423   |
14F426   |
14F429   |
14F42A   |
14F42B   |
14F42D   |
14F430  / Next is where all routines come together again.
14F433  AXY = 8-bit.
14F467  Take first slot.
14F469  \ Pointer to tilemap data for Layer 1 Map16...
14F46D   | ...page 1...
14F46F   |
14F470   |
14F474   |
14F476   |
14F478  /
14F47E  \ Empty data.
14F50C  \ Check if level 5-2...
14F50F   | If not, return.
14F511  /
14F513  \ Check if fifth room...
14F516   |
14F518  / If not, return.
14F52C  \ Redundant code because there is really only one option.
14F52F   | Makes use of the Layer 3 enable flag but it must be 00 anyway.
14F530   | Maybe there used to be more options.
14F531  / Jump to CODE_14F538.     
14F53D  \ Horizontal level?
14F53F  / Branch if so.
14F541  \ Check if this is level 7-1...
14F544   | If not...
14F546  / branch. (A becomes #$20.)
14F548  \ If it is not the first room of said level...
14F54B  / branch also. (A becomes #$20.)
14F54D  If it is said room and level, A is #$21.
14F54F  Store that into the Layer 3 image loader.
14F551  A = #$20, different index to Layer 3 image loader.
14F553  Store into said RAM address.
14F555  \ Whichever Layer 3 background to load now is seemingly random.
14F557   | Basically it depends on whatever the frame counter ($10) has as value.
14F559   | Every fourth value is an option, so that means it can only be...
14F55A   | backgrounds #0, #2, #3 or #1,
14F55B  / This explains the variety in cloud backgrounds as you enter a level.
14F562  Get pointer to Layer 3 Map16 table in RAM.
14F565  \ Load the index to the Layer 3 cloud image table..
14F568   | Table here determines which cloud image to use.
14F56C   | Multiply by 2 and transferred to X...
14F56D   | ... to form an index to the pointer.
14F56E   | Appropiate addresses of each cloud image...
14F572   | ...are found in this pointer...
14F574   | ...and stored to [$08].
14F575   |
14F579   |
14F57B   | All images can be found in bank 15 only.
14F57D  /
14F57F  \ Index to pointer = #$00.
14F581   | Load first byte and store to $E7.
14F583   | Denotes the YX position at which the Layer 3 background commences.
14F585   |
14F586   | Get second byte. The upper 4 bits denote the vertical length of the background.
14F588   | The height is the specified value + 1.
14F58A   | Basically, if it would be #$9x, like the first cloud background is...
14F58B   | ...that's a height of xA, or 10, 16x16 blocks.
14F58C   |
14F58D   |
14F58E   | This value is stored in both $0E as well as $0D.
14F590  / ($0D will function as a backup of $0E.)
14F592  \ Likewise, the lower four bits...
14F594   | indicate the horizontal length of the image.
14F596  / And that goes into $0F.
14F598  Load Layer 3 background.
14F5A5  \ Check if this is level 6-3...
14F5A8   | If not, branch.
14F5AA  / Ignore code entirely.
14F5AC  \ Check if it is the fifth room of said level...
14F5AF   |
14F5B1  / If so, branch.
14F5CF  \ Start off with #$02 as index to the Layer 3 image pointer.
14F5D1  / (Actual tilemap data starts from the third byte and on.)
14F5D4  \ YX position transferred over to $02E2.
14F5D6   | And $0C.
14F5D9  /
14F5DB  \ Get index to tilemap data.
14F5DE   | Load tile.
14F5E0   | Get index to Map16 table in RAM.
14F5E3   | Store tile into RAM.
14F5E5  / Increase Layer 3 image pointer index.
14F5F1  \ Decrease $0E (which holds the vertical length of the image).
14F5F3   | If $0E is no longer positive, the next vertical row must commence.
14F5F5  / Otherwise, branch and upload next tile.
14F5F7  \ Move one row up.
14F5F9   | If the last row is done too, terminate.
14F5FB  /
14F607  \ $0E becomes whatever the height was before...
14F609   | $0D serves as backup of $0E here.
14F60B  / Go to the new row.
14F60D  End upload.
14F63B  \ [$01] = Layer 3 Map16 table.       
14F63E   |
14F640   |   
14F643   |
14F645   |
14F647  /
14F64A  \ A = 16-bit.
14F64C   | #$0960 bytes of length.
14F64F   | The following routine will clear the entire Layer 3 table.
14F651   | Filling with tile $FF.
14F654   | As seen here (A = #$FFFF)
14F655   | #$0000 would've done the trick as well.
14F658   |
14F65A   | Location = $7FC000.
14F65D   |
14F65F   | Get to the DMA routine, which is one of the few routines used that does not lie in banks 11-15.
14F663  / A = 8-bit.
14F665  Terminate.
14F696  \ Upload Layer 3 cloud tiles.
14F699  / Upload Layer 3 stars.
14F69C  \ Layer 3 Map16 table pointer = [$C4].
14F69E   | $7FC3C0.
14F6A0   |
14F6A2   |
14F6A4   |
14F6A6  /
14F777  \ Check if level 2-1...
14F77A   | If so, branch.
14F77C   |
14F77E   | If not 2-1 nor 5-2, return.
14F780  /
14F782  \ Get index to Layer 3 image...
14F785   | Basically, which image to use.
14F789   | That index is used in the next pointer.
14F78A  /
14F78B  \ [$08] = Layer 3 table.
14F78F   | These only consists of Layer 3 stars.
14F791   | Much like the horizontal level clouds, the positions of these stars...
14F792   | ... are seemingly random.
14F796   | They change every time you enter a level which features these stars.
14F798   |
14F79A  /
14F79C | X and Y are #$00.
14F79E |
14F79F  \ If first byte = #$FF...
14F7A1   | Return.
14F7A3  /
14F7A5  \ Get into Y (Y = coordinates in which the Layer 3 tile will be placed into the screen)
14F7A6   | Preserve Y.
14F7A7   |
14F7A8   |
14F7A9   | Load second byte. (Actual tile)
14F7AB   | Get correct position of the tile into Y.
14F7AC   | Store into Layer 3 Map16 table, at corresponding place.
14F7AE   | Get to the next byte again.
14F7AF  / Loop.
14F827  \ Empty data.
14F900  \ Force blank.
14F902  /
14F904  \ Full brightness.
14F906  /
14F908  \ Load a different stripe image...
14F90A   | ...depending on $11's content.
14F90B   |
14F90C   |
14F90E   |
14F90F   | Address goes into pointer [$F0].   
14F913   |
14F915   |       
14F919   |
14F91B   |       
14F91F   |
14F921   |
14F924   | Loop forever until NMI is done with uploading the stripe.
14F927  /
14F92D  Return.
14F953  \ Force blank.
14F955   |
14F957   |
14F95A  / No HDMA channels open.
14F95D  A = 16-bit.
14F95F  \ #$BF in $00, #$00 in $01.
14F962   | These values will be transferred to VRAM later.
14F964   | Increase VRAM addr only on $2118 write.
14F967   | VRAM addr = $0000.
14F96A   | Write to $2118, fixed address. 1 byte per time.
14F96D   | (This means it only goes to tilemap, not character data.)
14F970   | Bank byte of source = $00.
14F973   | 16-bit address of source = $0000.
14F976   | So it points to $000000, or simply scratch RAM $00.
14F979   | $2000 bytes to transfer.
14F97C   | (Copy the #$BF value over $2000 bytes.)
14F97F   | Open DMA channel 1 for transfer.
14F981  /
14F984  \ Increase VRAM addr only on $2119 write.
14F986   |
14F989   | VRAM addr = $0000.
14F98C   | $2000 bytes to transfer.
14F98F   | Write to $2119, fixed address. 1 byte per time.
14F992   | (This means it only goes to character data, not tilemap.)
14F995   | Now points to $01 (the one with value #$00)
14F998   |
14F99B   | Open DMA channel 1 for transfer, clear character data.
14F99E  / Branch to next portion of code.
14F9A0  A = 8-bit.
14F9A2  \ Force blank.
14F9A4   |
14F9A6   |
14F9A9  / No HDMA channels open.
14F9AC  A = 16-bit.
14F9AE  DMA channel 1.
14F9EE  A = 8-bit.
14F9F0  Clear OAM routine starts here. OAM clear routine is somewhat unrolled, and per groups of $20 bytes, so LDX #$60.
14F9F2  This value is used to "write" the tile below the screen (#$F0 is off-screen, even if overscan would be on).
14F9F4  \ Partially unrolled stores starting here.
14F9F7   |
14F9FA   |
14F9FD   |
14FA00   |
14FA03   |
14FA06   |
14FA09   |
14FA0C   |
14FA0F   |
14FA12   |
14FA15   |
14FA18   |
14FA1B   |
14FA1E   |
14FA21   |
14FA24   |
14FA27   |
14FA2A   |
14FA2D   |
14FA30   |
14FA33   |
14FA36   |
14FA39   |
14FA3C   |
14FA3F   |
14FA42   |
14FA45   |
14FA48   |
14FA4B   |
14FA4E   |
14FA51   |
14FA54   | Subtract $20 off the index (because groups go per $20 bytes as can be seen in above routine)...
14FA55   |
14FA56   |
14FA58   |
14FA59  / ...branch if loop still not done.
14FA5B  \ Same goes here, except the loop goes the other way around for some reason.
14FA5D   | #$00 to indicate the tile does not have a high X bit set nor is 16x16.
14FA5F   | Stores going here.
14FA62   |
14FA65   |
14FA68   |
14FA6B   |
14FA6E   |
14FA71   |
14FA74   |
14FA77   |
14FA7A   |
14FA7D   |
14FA80   |
14FA83   |
14FA86   |
14FA89   |
14FA8C   |
14FA8F   | Add $10 up to the index (because groups go per $10 bytes as can be seen above)...
14FA90   |
14FA91   |
14FA93   |
14FA94   | $80 bytes is the max, then stop looping.
14FA96  /
14FA98  Return.
14FAE8  \ Preserve data bank.
14FAE9   | Data bank becomes what the program bank was.
14FAEA  /
14FAEB  \ Clear HDMA channel regs.
14FAEE  / The mirror too.
14FB00  \ HDMA scanlines + RAM pointer table.
14FB03   |
14FB06   |
14FB09   |
14FB0C   |
14FB0F  /
14FB23  \  Red colour.
14FB26   |
14FB29   | Green colour.
14FB2C   |
14FB2F   | Blue colour.
14FB32  / All in their respective buffers.
14FB3B  XY = 16-bit.
14FB3D  \ Reg to transfer to is $2132, indirect HDMA.
14FB40   |
14FB43   | (All three channels.)
14FB46   |
14FB49   | Pointer location #1: $001D20.
14FB4C   |
14FB4F   | Pointer location #2: $001D60.
14FB52   |
14FB55   | Pointer location #3: $001DA0.
14FB58   |
14FB5B   | $00 indicates the bank byte. Anything below $40, or $7E, would be suitable however.
14FB5D   |
14FB60   |
14FB63   |
14FB66   | Indirect bank byte is also $00 (for other RAM tables, $1C00, $1C60 and $1CC0)
14FB68   |
14FB6B   | These extra $00s are a waste of space, especially considering...
14FB6D   | ...Nintendo should've used STZ anyway. Using a value like $01...
14FB70   | ...wouldn't make sense here anyway, even though it's possible.
14FB72   |
14FB75   | Channels 4, 5 and 6 are used.
14FB77  /
14FB7A  XY = 8-bit.
14FB7C  Pull data bank back.
14FB7D  Return.
14FB7E  \ Scanline counts and RAM pointer table.
14FBE0  \ Scanline counts and RAM pointer table.
14FC42  \ Scanline counts and RAM pointer table.
14FCA4  \ Red colours of deep blue to lighter blue HDMA BG.
14FCE4  \ Green colours of deep blue to lighter blue HDMA BG.
14FD24  \ Blue colours of deep blue to lighter blue HDMA BG.
14FD64  \ Empty data.
15804B  \ Layer 3 Y pos = #$0010.
15804D  /
1583F2  \ Get room + level number into index.
1583F5   |
1583F9   |
1583FA   |
1583FD   |
1583FE   | Load which set of Layer 3 Map16 tiles to use (the cloud tiles or the light beams of the shining door) 
158402   | Multiply by 2.
158403   |
158404   | Get low byte of Map16 table.   
158408   |
15840B   |
15840C   | Get high byte of Map16 table.   
158410   |
158413   | Bank number = $15.
158415  /
158418  Return.
158482  \ Empty.
1587AB  \ Map16 table into [$00]
1587AE   |
1587B0   |
1587B3   |
1587B5   |
1587B8  /
1587BD  Accumulator and Index = 16-bit.
1587BF  \ Check if tile in Layer 3 Map16 table is #$FF...
1587C1   |
1587C4   |
1587C7  / If not, branch.
1587C9  \ Load value for empty tile.
1587CD   | ($159351 is empty tile)
1587CF   |
1587D2  /
1587D4  Y = #$0000.
1587D9  \ Multiply Map16 num by 8.
1587DA   |
1587DB   |
1587DC  / Into Y index.
1587E9  Accumulator = 16-bit.
1587F1  Accumulator = 8-bit.
158803  Accumulator and Index = 8-bit.
15880C  \ End upload.
15880E  /
158812  \ Amount of tiles transferred...
158813  / Into $7F0800.
158820  \ Empty data.
158900  \ This table here...
158928  Cloud 0 (horizontal level cloud part #1)
; Cloud 1 (horizontal level cloud part #2)
; Cloud 2 (horizontal level cloud part #3)
; Cloud 3 (horizontal level cloud part #4)
; Cloud 4 (upper part of vertical level cloud)
; Cloud 5 (cloud specifically for the first room of 7-1, also used as part of regular vertical level cloud)
; Cloud 6 (part #3 of regular vertical level cloud)
; Cloud 7 (part #4 of regular vertical level cloud)
; Cloud 8 (part #5 of regular vertical level cloud)
; Cloud 9 (part #6 of regular vertical level cloud. This one is so far down that only really long vertical levels feature it, such as in 6-3)
15893C  \ First two bytes of each image are header.
1589C0  \ This here is the second part...
158A5C  \ The third part of these horizontal level cloud images.
158AED  \ The fourth part and last of these regular horizontal level cloud images.
158BBF  \ Upper part of the vertical level cloud image.
158CB1  \ Second part of the vertical level cloud image.
158DA3  \ Third part of the vertical level cloud image.
158E95  \ Fourth part of the vertical level cloud image.
158F87  \ Fifth part of the vertical level cloud image.
159079  \ Sixth, last and bottom-most part of the vertical level cloud image.
15916B  \
159233  \ "Cloud" Map16 table (1A-22 are overlap with 00-08 of the following table)
159235  / "Door" Map16 table (used for door light effects)
159237  Tile 00. (Layer 3 Map16 table).
159307  Tile 1A/00
15934F  Pointer to the below table.
159351  Empty tile.
159371  Layer 3 stars placement 0
159373  Layer 3 stars placement 1
159375  Layer 3 stars placement 2
159377  Layer 3 stars placement 3
159379  Layer 3 stars placement 4
15937B  \ The format is simple.
159394  \
1593A9  \
1593C6  \
1593DF  \
1593F4  \ Empty data.
15A3F3  \ Empty data.
15CBD0  \ Empty.
15D342  \ Empty data.
15E000  00 - RAM upload table.
15E003  01 - Border of the 'Super Mario Bros. 2' screen.
15E006  02 - 'Super Mario Bros. 2' and '�1988-1992 Nintendo.'
15E009  03 - Border of the Game Over screen.
15E83F  \ High byte of pointer to the "Story" tilemap.
15E850  \ Low byte of pointer to the "Story" tilemap.
15E861  \
15E889  \
15E8B1  \
15E8D9  \
15E901  \
15E929  \
15E951  \
15E979  \
15E9A1  \
15E9C9  \
15E9F1  \
15EA19  \
15EA41  \
15EA69  \
15EA91  \
15EAB9  \
15EC57  \ Empty data.
15EF00  World 1, grassy image. (Images during 'World x-x' screen.)
15EF03  World 2, desert image.
15EF06  World 3, grassy image.
15EF09  World 4, ice image.
15EF0C  World 5, grassy image.
15EF0F  World 6, desert image.
15EF12  World 7, air image.
15EF15  \ The entire image of the grassland...
15F0A5  \
15F235  \
15F3C5  \
15FF4E  \ Empty data.
208000  Entry point of SMB3's game start routine (includes piracy check)
208003 Entry point of SMB3's NMI
208006 Entry point of SMB3's IRQ
2080A7 \
2080A9 /Title screen music
20826C  World 8 submap 3 spotlight enabler
20826F  Check for world 8
208273  Check for submap #3, indexed by the current player
2082E5 \
2082E8  |
2082EA  | If you're in world 9 (warp zone)
2082EC  | Display the "WELCOME TO WARP ZONE" layer 3
2082EE /
208327 \ data bank: $21
20832A  | Load overworld music
20832D  |
20832F  | If world isn't world 5, branch
208331  |
208334  | Check current player's submap
208336  | If in World 5's cloud map
208338  | Load music cloud map music (#$10)
20833A  |
20833C  | If Music box is playing,
20833F  | play music box music (#$0E).
208341  | 
208343 /  Otherwise play regular overworld music.
2085C4 \
2085C6 /Fade out music
20863D Check for pipe tile
20863F If it's not, check for other tiles
208641 \
208644  |If we're on a pipe tile, and
208646  |If we're in world 5's submap, show "Player Start!"
208648  |
20864B  |
20864D /
20864F Otherwise just skip Player Start
208654 Check for yellow mushroom house tile
208658 Check for red mushroom house tile
20865C Check for spade tile
208702 \
208704 /Fade out music
208729 Store pointer $27:E5E3 to $31 and $023A
20886A \
20886C /Fade out music
208C21 \
208C23 /Starman music
208D7F P-Switch duration
208FA9 \
208FAB /Fade out music
208FDA \
208FDD /Fade out music
209099 \
20909B /Fade out music
20919F \
2091A1 /Fade out music
2091E0 \
2091E2 /Game over music
2092CC  \ Check if in world 8 submap 3 (spotlight submap)
2092CF    If so, on game over screen make sure
2092D1    to black out the overworld background with the Game Over window showing.
2092DD  /
209441 \
209443 /Fade out music
209509 \
20950B /Fade out music
20A387 \
20A389 /Hammer Bros./Battle mode music
20BE8D 0 S:01FF P:EnvMXdIzc HC:16846 VC:000 FC:00 I:00
20BE8E 0 S:01FF P:EnvMXdIzc HC:16862 VC:000 FC:00 I:00
20BE91 0 S:01FF P:EnvMXdIzc HC:16878 VC:000 FC:00 I:00
20BE92 0 S:01FF P:EnvMXdIzc HC:16894 VC:000 FC:00 I:00
20F20B Hardware register mirrors related to screen settings
20F20C \
20F20E  |Set direct page to $2100
20F20F  |
20F211 /
20F212 \ Window Mask Settings for BG1 and BG2
20F215 /
20F217 \ Window Mask Settings for BG3 and BG4
20F21A /
20F21C \ Window Mask Settings for OBJ and Color Window
20F21F /
20F221 \ Color Addition Select
20F224 /
20F226 \ Color math designation
20F229 /
20F22B \ Fixed Color Data
20F22E /
20F230 \ Fixed Color Data
20F233 /
20F235 \ Fixed Color Data
20F238 /
20F23A \ Main Screen Designation
20F23D /
20F23F \ Subscreen Designation
20F242 /
20F244 \ Window Mask Designation for the Main Screen
20F247 /
20F249 \ Window Mask Designation for the Subscreen
20F24C /
20F24E \ Screen Pixelation
20F251 /
20F253 \ BG Mode and Character Size
20F256 /
20F258 \Recover original direct page, then return
20F259 /
20FB3A  ExecutePtrLong | Preserve Y       
20FB3C  Get bank of source
20FB3D  Store in Y
20FB41  Get A  
20FB44  Store in $03
20FB46 \ *3 since the table entries are three bytes
20FB47 /  
20FB49  A -> Y
20FB4A  Get Low and High byte of source
20FB4B    
20FB4D  +1 so we don't read the last byte of the JSL   
20FB4E \ Read low and high byte of spot to jump to
20FB50 /  
20FB52  +1 so we don't read the same data again
20FB53 \ Get high and bank byte
20FB55 /  
20FB59  Restore A   
20FB5B  Jump to pointer
228BF2 Top row's left corner of statusbar's first portion
228BFA Top row of statusbar's first portion
228C00 Top row's right corner of statusbar's first portion, top row of 3 card columns
228C1C Row 2 of statusbar: "WORLD", empty P-meter, coins (initialized to 66 for some reason), 3 card columns
228C60 Row 3 of statusbar: "x" (from Mx or Lx), score initialized to 0000000, time initialized to 000, 3 card columns
228CA4 Bottom row's left corner of statusbar's first portion
228CAC Bottom row of statusbar's first portion
228CB2 Bottom row's right corner of statusbar's first portion, bottom row of 3 card columns
228CDA  End
239110 0 S:01FF P:EnvMXdIzc HC:15022 VC:000 FC:00 I:00
239112 0 S:01FF P:EnvMXdIzc HC:15038 VC:000 FC:00 I:00
239114 0 S:01FF P:EnvMXdIzc HC:15054 VC:000 FC:00 I:00
239118 0 S:01FF P:EnvMXdIzc HC:15070 VC:000 FC:00 I:00
23911C 0 S:01FF P:EnvMXdIzc HC:15086 VC:000 FC:00 I:00
23911E 0 S:01FF P:EnvMXdIzc HC:15102 VC:000 FC:00 I:00
239120 0 S:01FF P:EnvMXdIzc HC:15118 VC:000 FC:00 I:00
239122 0 S:01FF P:EnvMXdIzc HC:15134 VC:000 FC:00 I:00
239126 0 S:01FF P:EnvMXdIzc HC:15150 VC:000 FC:00 I:00
239128 0 S:01FF P:EnvMXdIzc HC:15166 VC:000 FC:00 I:00
23912C 0 S:01FF P:EnvMXdIzc HC:15182 VC:000 FC:00 I:00
23912E 0 S:01FF P:EnvMXdIzc HC:15198 VC:000 FC:00 I:00
239130 0 S:01FF P:EnvMXdIzc HC:15214 VC:000 FC:00 I:00
258864  I think this is unused     
258B1F 0 S:01FF P:EnvMXdizc HC:57974 VC:000 FC:00 I:00
258B22 0 S:01FF P:EnvMXdizc HC:57990 VC:000 FC:00 I:00
258B24 0 S:01FF P:EnvMXdizc HC:58006 VC:000 FC:00 I:00
258B26 0 S:01FF P:EnvMXdizc HC:58022 VC:000 FC:00 I:00
258B28 0 S:01FF P:EnvMXdizc HC:58038 VC:000 FC:00 I:00
258B2A 0 S:01FF P:EnvMXdizc HC:58054 VC:000 FC:00 I:00                 
25B1CE 0 S:01FF P:EnvMXDIzc HC:456990 VC:000 FC:00 I:00
25B1D0 0 S:01FF P:EnvMXDIzc HC:457006 VC:000 FC:00 I:00
25B1D2 0 S:01FF P:EnvMXDIzc HC:457022 VC:000 FC:00 I:00
25B1D4 0 S:01FF P:EnvMXDIzc HC:457038 VC:000 FC:00 I:00
25B1D6 0 S:01FF P:EnvMXDIzc HC:457054 VC:000 FC:00 I:00
25B1D9 0 S:01FF P:EnvMXDIzc HC:457070 VC:000 FC:00 I:00
25B1DA 0 S:01FF P:EnvMXDIzc HC:457086 VC:000 FC:00 I:00
25B1DB 0 S:01FF P:EnvMXDIzc HC:457102 VC:000 FC:00 I:00
25B1DD 0 S:01FF P:EnvMXDIzc HC:457118 VC:000 FC:00 I:00
25B1DE 0 S:01FF P:EnvMXDIzc HC:457134 VC:000 FC:00 I:00
25B1DF 0 S:01FF P:EnvMXDIzc HC:457150 VC:000 FC:00 I:00
25B1E0 0 S:01FF P:EnvMXDIzc HC:457166 VC:000 FC:00 I:00
25B1E1 0 S:01FF P:EnvMXDIzc HC:457182 VC:000 FC:00 I:00
25B1E2 0 S:01FF P:EnvMXDIzc HC:457198 VC:000 FC:00 I:00
25B1E3 0 S:01FF P:EnvMXDIzc HC:457214 VC:000 FC:00 I:00
25B1E5 0 S:01FF P:EnvMXDIzc HC:457230 VC:000 FC:00 I:00
25B1E7 0 S:01FF P:EnvMXDIzc HC:457246 VC:000 FC:00 I:00
25B1EA 0 S:01FF P:EnvMXDIzc HC:457262 VC:000 FC:00 I:00
25B1EC 0 S:01FF P:EnvMXDIzc HC:457278 VC:000 FC:00 I:00
25B1EE 0 S:01FF P:EnvMXDIzc HC:457294 VC:000 FC:00 I:00
25B1F2 0 S:01FF P:EnvMXDIzc HC:457310 VC:000 FC:00 I:00
25B1F4 0 S:01FF P:EnvMXDIzc HC:457326 VC:000 FC:00 I:00
25B1F8 0 S:01FF P:EnvMXDIzc HC:457342 VC:000 FC:00 I:00
25B1FC 0 S:01FF P:EnvMXDIzc HC:457358 VC:000 FC:00 I:00
25B200 0 S:01FF P:EnvMXDIzc HC:457374 VC:000 FC:00 I:00
25B202 0 S:01FF P:EnvMXDIzc HC:457390 VC:000 FC:00 I:00
25B206 0 S:01FF P:EnvMXDIzc HC:457406 VC:000 FC:00 I:00
25B20A 0 S:01FF P:EnvMXDIzc HC:457422 VC:000 FC:00 I:00
25B20C 0 S:01FF P:EnvMXDIzc HC:457438 VC:000 FC:00 I:00
25B20E 0 S:01FF P:EnvMXDIzc HC:457454 VC:000 FC:00 I:00
25B211 0 S:01FF P:EnvMXDIzc HC:457470 VC:000 FC:00 I:00
25B215 0 S:01FF P:EnvMXDIzc HC:457486 VC:000 FC:00 I:00
25B217 0 S:01FF P:EnvMXDIzc HC:457502 VC:000 FC:00 I:00
25B21B 0 S:01FF P:EnvMXDIzc HC:457518 VC:000 FC:00 I:00
25B21F 0 S:01FF P:EnvMXDIzc HC:457534 VC:000 FC:00 I:00
25B223 0 S:01FF P:EnvMXDIzc HC:457550 VC:000 FC:00 I:00
25B225 0 S:01FF P:EnvMXDIzc HC:457566 VC:000 FC:00 I:00
25B229 0 S:01FF P:EnvMXDIzc HC:457582 VC:000 FC:00 I:00
25B22D 0 S:01FF P:EnvMXDIzc HC:457598 VC:000 FC:00 I:00
25B22F 0 S:01FF P:EnvMXDIzc HC:457614 VC:000 FC:00 I:00
25B23B 0 S:01FF P:EnvMXDIzc HC:598374 VC:000 FC:00 I:00
25B23D 0 S:01FF P:EnvMXDIzc HC:598390 VC:000 FC:00 I:00
25B23F 0 S:01FF P:EnvMXDIzc HC:598406 VC:000 FC:00 I:00
25B241 0 S:01FF P:EnvMXDIzc HC:598422 VC:000 FC:00 I:00
25B243 0 S:01FF P:EnvMXDIzc HC:598438 VC:000 FC:00 I:00
25B246 0 S:01FF P:EnvMXDIzc HC:598454 VC:000 FC:00 I:00
25B248 0 S:01FF P:EnvMXDIzc HC:598470 VC:000 FC:00 I:00
25B24A 0 S:01FF P:EnvMXDIzc HC:598486 VC:000 FC:00 I:00
25B24D 0 S:01FF P:EnvMXDIzc HC:598502 VC:000 FC:00 I:00
25B24F 0 S:01FF P:EnvMXDIzc HC:598518 VC:000 FC:00 I:00
25B253 0 S:01FF P:EnvMXDIzc HC:598534 VC:000 FC:00 I:00
25B255 0 S:01FF P:EnvMXDIzc HC:598550 VC:000 FC:00 I:00
25B259 0 S:01FF P:EnvMXDIzc HC:598566 VC:000 FC:00 I:00
25B25D 0 S:01FF P:EnvMXDIzc HC:598582 VC:000 FC:00 I:00
25B261 0 S:01FF P:EnvMXDIzc HC:598598 VC:000 FC:00 I:00
25B263 0 S:01FF P:EnvMXDIzc HC:598614 VC:000 FC:00 I:00
25B267 0 S:01FF P:EnvMXDIzc HC:598630 VC:000 FC:00 I:00
25B26B 0 S:01FF P:EnvMXDIzc HC:598646 VC:000 FC:00 I:00
25B26F 0 S:01FF P:EnvMXDIzc HC:598662 VC:000 FC:00 I:00
25B271 0 S:01FF P:EnvMXDIzc HC:598678 VC:000 FC:00 I:00
25B275 0 S:01FF P:EnvMXDIzc HC:598694 VC:000 FC:00 I:00
25B278 0 S:01FF P:EnvMXDIzc HC:598710 VC:000 FC:00 I:00
25B27A 0 S:01FF P:EnvMXDIzc HC:598726 VC:000 FC:00 I:00
25B27C 0 S:01FF P:EnvMXDIzc HC:598742 VC:000 FC:00 I:00
25B27D 0 S:01FF P:EnvMXDIzc HC:598758 VC:000 FC:00 I:00
25B27F 0 S:01FF P:EnvMXDIzc HC:598774 VC:000 FC:00 I:00
25B281 0 S:01FF P:EnvMXDIzc HC:598790 VC:000 FC:00 I:00
25B286 0 S:01FF P:EnvMXDIzc HC:598374 VC:000 FC:00 I:00
25B288 0 S:01FF P:EnvMXDIzc HC:598390 VC:000 FC:00 I:00
25B28A 0 S:01FF P:EnvMXDIzc HC:598854 VC:000 FC:00 I:00
25B28C 0 S:01FF P:EnvMXDIzc HC:598870 VC:000 FC:00 I:00
25B28E 0 S:01FF P:EnvMXDIzc HC:598886 VC:000 FC:00 I:00
25B291 0 S:01FF P:EnvMXDIzc HC:598902 VC:000 FC:00 I:00
25B293 0 S:01FF P:EnvMXDIzc HC:598918 VC:000 FC:00 I:00
25B295 0 S:01FF P:EnvMXDIzc HC:598934 VC:000 FC:00 I:00
25B298 0 S:01FF P:EnvMXDIzc HC:598950 VC:000 FC:00 I:00
25B29A 0 S:01FF P:EnvMXDIzc HC:598966 VC:000 FC:00 I:00
25B29C 0 S:01FF P:EnvMXDIzc HC:598982 VC:000 FC:00 I:00
25B29E 0 S:01FF P:EnvMXDIzc HC:598998 VC:000 FC:00 I:00
25B2A2 0 S:01FF P:EnvMXDIzc HC:599014 VC:000 FC:00 I:00
25B2A4 0 S:01FF P:EnvMXDIzc HC:599030 VC:000 FC:00 I:00
25B2A8 0 S:01FF P:EnvMXDIzc HC:599046 VC:000 FC:00 I:00
25B2A9 0 S:01FF P:EnvMXDIzc HC:599062 VC:000 FC:00 I:00
25B2AA 0 S:01FF P:EnvMXDIzc HC:599078 VC:000 FC:00 I:00
25B2AC 0 S:01FF P:EnvMXDIzc HC:599094 VC:000 FC:00 I:00
25B2AD 0 S:01FF P:EnvMXDIzc HC:599110 VC:000 FC:00 I:00
25B2AF 0 S:01FF P:EnvMXDIzc HC:599126 VC:000 FC:00 I:00
25B2B1 0 S:01FF P:EnvMXDIzc HC:599142 VC:000 FC:00 I:00
25B2B3 0 S:01FF P:EnvMXDIzc HC:599158 VC:000 FC:00 I:00
25B2B7 0 S:01FF P:EnvMXDIzc HC:599174 VC:000 FC:00 I:00
25B2B9 0 S:01FF P:EnvMXDIzc HC:599190 VC:000 FC:00 I:00
25B2BD 0 S:01FF P:EnvMXDIzc HC:599206 VC:000 FC:00 I:00
25B2BE 0 S:01FF P:EnvMXDIzc HC:599222 VC:000 FC:00 I:00
25B2BF 0 S:01FF P:EnvMXDIzc HC:599238 VC:000 FC:00 I:00
25B2C1 0 S:01FF P:EnvMXDIzc HC:599254 VC:000 FC:00 I:00
25B2C2 0 S:01FF P:EnvMXDIzc HC:599270 VC:000 FC:00 I:00
25B2C4 0 S:01FF P:EnvMXDIzc HC:599286 VC:000 FC:00 I:00
25B2C6 0 S:01FF P:EnvMXDIzc HC:599302 VC:000 FC:00 I:00
25B2C8 0 S:01FF P:EnvMXDIzc HC:599318 VC:000 FC:00 I:00
25B2CA 0 S:01FF P:EnvMXDIzc HC:599334 VC:000 FC:00 I:00
25B2CC 0 S:01FF P:EnvMXDIzc HC:599350 VC:000 FC:00 I:00
25B2CE 0 S:01FF P:EnvMXDIzc HC:599366 VC:000 FC:00 I:00
25B2D0 0 S:01FF P:EnvMXDIzc HC:599382 VC:000 FC:00 I:00
25B2D2 0 S:01FF P:EnvMXDIzc HC:599398 VC:000 FC:00 I:00
25B2D4 0 S:01FF P:EnvMXDIzc HC:599414 VC:000 FC:00 I:00
25B2D7 0 S:01FF P:EnvMXDIzc HC:599430 VC:000 FC:00 I:00
25B2DB 0 S:01FF P:EnvMXDIzc HC:599446 VC:000 FC:00 I:00
25B2DE 0 S:01FF P:EnvMXDIzc HC:599462 VC:000 FC:00 I:00
25B2E0 0 S:01FF P:EnvMXDIzc HC:599478 VC:000 FC:00 I:00
25B2E2 0 S:01FF P:EnvMXDIzc HC:599494 VC:000 FC:00 I:00
25B2E4 0 S:01FF P:EnvMXDIzc HC:599510 VC:000 FC:00 I:00
25B2E6 0 S:01FF P:EnvMXDIzc HC:599526 VC:000 FC:00 I:00
25B2E7 0 S:01FF P:EnvMXDIzc HC:599542 VC:000 FC:00 I:00
25B2E9 0 S:01FF P:EnvMXDIzc HC:599558 VC:000 FC:00 I:00
25B2EB 0 S:01FF P:EnvMXDIzc HC:599574 VC:000 FC:00 I:00
25B2EE 0 S:01FF P:EnvMXDIzc HC:599606 VC:000 FC:00 I:00
25B2F1 0 S:01FF P:EnvMXDIzc HC:599622 VC:000 FC:00 I:00
25B2F2 0 S:01FF P:EnvMXDIzc HC:599638 VC:000 FC:00 I:00
25B2F4 0 S:01FF P:EnvMXDIzc HC:599654 VC:000 FC:00 I:00
25B2F5 0 S:01FF P:EnvMXDIzc HC:599670 VC:000 FC:00 I:00
25B2F8 0 S:01FF P:EnvMXDIzc HC:599686 VC:000 FC:00 I:00
25B2FC 0 S:01FF P:EnvMXDIzc HC:599702 VC:000 FC:00 I:00
25B2FE 0 S:01FF P:EnvMXDIzc HC:599718 VC:000 FC:00 I:00
25B302 0 S:01FF P:EnvMXDIzc HC:599734 VC:000 FC:00 I:00
25B305 0 S:01FF P:EnvMXDIzc HC:599782 VC:000 FC:00 I:00
25B308 0 S:01FF P:EnvMXDIzc HC:599798 VC:000 FC:00 I:00
25B309 0 S:01FF P:EnvMXDIzc HC:599814 VC:000 FC:00 I:00
25B30A 0 S:01FF P:EnvMXDIzc HC:599830 VC:000 FC:00 I:00
25B30C 0 S:01FF P:EnvMXDIzc HC:599846 VC:000 FC:00 I:00
25B30D 0 S:01FF P:EnvMXDIzc HC:599862 VC:000 FC:00 I:00
25B30E 0 S:01FF P:EnvMXDIzc HC:599878 VC:000 FC:00 I:00
25B30F 0 S:01FF P:EnvMXDIzc HC:599894 VC:000 FC:00 I:00
25B310 0 S:01FF P:EnvMXDIzc HC:599910 VC:000 FC:00 I:00
25B311 0 S:01FF P:EnvMXDIzc HC:599926 VC:000 FC:00 I:00
25B312 0 S:01FF P:EnvMXDIzc HC:599942 VC:000 FC:00 I:00
25B314 0 S:01FF P:EnvMXDIzc HC:599958 VC:000 FC:00 I:00
25B316 0 S:01FF P:EnvMXDIzc HC:599974 VC:000 FC:00 I:00
25B319 0 S:01FF P:EnvMXDIzc HC:599990 VC:000 FC:00 I:00
25B31D 0 S:01FF P:EnvMXDIzc HC:600006 VC:000 FC:00 I:00
25B320 0 S:01FF P:EnvMXDIzc HC:600022 VC:000 FC:00 I:00
25B322 0 S:01FF P:EnvMXDIzc HC:600038 VC:000 FC:00 I:00
25B324 0 S:01FF P:EnvMXDIzc HC:600054 VC:000 FC:00 I:00
25B328 0 S:01FF P:EnvMXDIzc HC:600070 VC:000 FC:00 I:00
25B329 0 S:01FF P:EnvMXDIzc HC:600086 VC:000 FC:00 I:00
25B32A 0 S:01FF P:EnvMXDIzc HC:600102 VC:000 FC:00 I:00
25B32C 0 S:01FF P:EnvMXDIzc HC:600118 VC:000 FC:00 I:00
25B32D 0 S:01FF P:EnvMXDIzc HC:600134 VC:000 FC:00 I:00
25B32F 0 S:01FF P:EnvMXDIzc HC:600150 VC:000 FC:00 I:00
25B331 0 S:01FF P:EnvMXDIzc HC:600166 VC:000 FC:00 I:00
25B333 0 S:01FF P:EnvMXDIzc HC:600182 VC:000 FC:00 I:00
25B335 0 S:01FF P:EnvMXDIzc HC:600198 VC:000 FC:00 I:00
25B337 0 S:01FF P:EnvMXDIzc HC:600214 VC:000 FC:00 I:00
25B33A 0 S:01FF P:EnvMXDIzc HC:598374 VC:000 FC:00 I:00
25B33C 0 S:01FF P:EnvMXDIzc HC:600262 VC:000 FC:00 I:00
25B33E 0 S:01FF P:EnvMXDIzc HC:600278 VC:000 FC:00 I:00
25B340 0 S:01FF P:EnvMXDIzc HC:600294 VC:000 FC:00 I:00
25B342 0 S:01FF P:EnvMXDIzc HC:600310 VC:000 FC:00 I:00
25B345 0 S:01FF P:EnvMXDIzc HC:600326 VC:000 FC:00 I:00
25B347 0 S:01FF P:EnvMXDIzc HC:600342 VC:000 FC:00 I:00
25B349 0 S:01FF P:EnvMXDIzc HC:600358 VC:000 FC:00 I:00
25B34B 0 S:01FF P:EnvMXDIzc HC:600374 VC:000 FC:00 I:00
25B34E 0 S:01FF P:EnvMXDIzc HC:600390 VC:000 FC:00 I:00
25B350 0 S:01FF P:EnvMXDIzc HC:600406 VC:000 FC:00 I:00
25B352 0 S:01FF P:EnvMXDIzc HC:600422 VC:000 FC:00 I:00
25B356 0 S:01FF P:EnvMXDIzc HC:600438 VC:000 FC:00 I:00
25B358 0 S:01FF P:EnvMXDIzc HC:600454 VC:000 FC:00 I:00
25B35C 0 S:01FF P:EnvMXDIzc HC:600470 VC:000 FC:00 I:00
25B360 0 S:01FF P:EnvMXDIzc HC:600486 VC:000 FC:00 I:00
25B362 0 S:01FF P:EnvMXDIzc HC:600502 VC:000 FC:00 I:00
25B364 0 S:01FF P:EnvMXDIzc HC:600518 VC:000 FC:00 I:00
25B367 0 S:01FF P:EnvMXDIzc HC:600534 VC:000 FC:00 I:00
25B368 0 S:01FF P:EnvMXDIzc HC:600550 VC:000 FC:00 I:00
25B36A 0 S:01FF P:EnvMXDIzc HC:600566 VC:000 FC:00 I:00
25B36C 0 S:01FF P:EnvMXDIzc HC:600582 VC:000 FC:00 I:00
25B3C2 0 S:01FF P:EnvMXDIzc HC:600598 VC:000 FC:00 I:00
25B3C4 0 S:01FF P:EnvMXDIzc HC:600614 VC:000 FC:00 I:00
25B3C6 0 S:01FF P:EnvMXDIzc HC:600630 VC:000 FC:00 I:00
25B3C8 0 S:01FF P:EnvMXDIzc HC:600646 VC:000 FC:00 I:00
25B3CA 0 S:01FF P:EnvMXDIzc HC:600662 VC:000 FC:00 I:00
25B3CC 0 S:01FF P:EnvMXDIzc HC:600678 VC:000 FC:00 I:00
25B3CE 0 S:01FF P:EnvMXDIzc HC:600694 VC:000 FC:00 I:00
25B3D0 0 S:01FF P:EnvMXDIzc HC:600710 VC:000 FC:00 I:00
25B3D3 0 S:01FF P:EnvMXDIzc HC:600726 VC:000 FC:00 I:00
25B3D7 0 S:01FF P:EnvMXDIzc HC:600742 VC:000 FC:00 I:00
25B3D9 0 S:01FF P:EnvMXDIzc HC:600758 VC:000 FC:00 I:00
25B3DB 0 S:01FF P:EnvMXDIzc HC:600774 VC:000 FC:00 I:00
25B3DD 0 S:01FF P:EnvMXDIzc HC:600790 VC:000 FC:00 I:00
25B3DF 0 S:01FF P:EnvMXDIzc HC:600806 VC:000 FC:00 I:00
25B3E1 0 S:01FF P:EnvMXDIzc HC:600822 VC:000 FC:00 I:00
25B3E3 0 S:01FF P:EnvMXDIzc HC:600838 VC:000 FC:00 I:00
25B3E5 0 S:01FF P:EnvMXDIzc HC:600854 VC:000 FC:00 I:00
25B3E7 0 S:01FF P:EnvMXDIzc HC:600870 VC:000 FC:00 I:00
25B3E9 0 S:01FF P:EnvMXDIzc HC:600886 VC:000 FC:00 I:00
25B3EB 0 S:01FF P:EnvMXDIzc HC:600902 VC:000 FC:00 I:00
25B3EC 0 S:01FF P:EnvMXDIzc HC:600918 VC:000 FC:00 I:00
25B3EE 0 S:01FF P:EnvMXDIzc HC:600934 VC:000 FC:00 I:00
25B3EF 0 S:01FF P:EnvMXDIzc HC:600950 VC:000 FC:00 I:00
25B3F0 0 S:01FF P:EnvMXDIzc HC:600966 VC:000 FC:00 I:00
25B3F2 0 S:01FF P:EnvMXDIzc HC:600982 VC:000 FC:00 I:00
25B3F5 0 S:01FF P:EnvMXDIzc HC:600998 VC:000 FC:00 I:00
25B3F7 0 S:01FF P:EnvMXDIzc HC:601014 VC:000 FC:00 I:00
25B3F8 0 S:01FF P:EnvMXDIzc HC:601030 VC:000 FC:00 I:00
25B3FA 0 S:01FF P:EnvMXDIzc HC:601046 VC:000 FC:00 I:00
25B3FB 0 S:01FF P:EnvMXDIzc HC:601062 VC:000 FC:00 I:00
25B3FD 0 S:01FF P:EnvMXDIzc HC:601078 VC:000 FC:00 I:00
25B400 0 S:01FF P:EnvMXDIzc HC:601094 VC:000 FC:00 I:00
25B401 0 S:01FF P:EnvMXDIzc HC:601110 VC:000 FC:00 I:00
25B402 0 S:01FF P:EnvMXDIzc HC:601126 VC:000 FC:00 I:00
25B403 0 S:01FF P:EnvMXDIzc HC:601142 VC:000 FC:00 I:00
25B404 0 S:01FF P:EnvMXDIzc HC:601158 VC:000 FC:00 I:00
25B405 0 S:01FF P:EnvMXDIzc HC:601174 VC:000 FC:00 I:00
25B406 0 S:01FF P:EnvMXDIzc HC:601190 VC:000 FC:00 I:00
25B407 0 S:01FF P:EnvMXDIzc HC:601206 VC:000 FC:00 I:00
25B409 0 S:01FF P:EnvMXDIzc HC:601222 VC:000 FC:00 I:00
25B40A 0 S:01FF P:EnvMXDIzc HC:601238 VC:000 FC:00 I:00
25B40B 0 S:01FF P:EnvMXDIzc HC:601254 VC:000 FC:00 I:00
25B40F 0 S:01FF P:EnvMXDIzc HC:601270 VC:000 FC:00 I:00
25B411 0 S:01FF P:EnvMXDIzc HC:601286 VC:000 FC:00 I:00
25B413 0 S:01FF P:EnvMXDIzc HC:601302 VC:000 FC:00 I:00
25B416 0 S:01FF P:EnvMXDIzc HC:601318 VC:000 FC:00 I:00
25B418 0 S:01FF P:EnvMXDIzc HC:601334 VC:000 FC:00 I:00
25B419 0 S:01FF P:EnvMXDIzc HC:601350 VC:000 FC:00 I:00
25B41A 0 S:01FF P:EnvMXDIzc HC:601366 VC:000 FC:00 I:00
25B41C 0 S:01FF P:EnvMXDIzc HC:601382 VC:000 FC:00 I:00
25B41E 0 S:01FF P:EnvMXDIzc HC:601398 VC:000 FC:00 I:00
25B420 0 S:01FF P:EnvMXDIzc HC:601414 VC:000 FC:00 I:00
25B421 0 S:01FF P:EnvMXDIzc HC:601430 VC:000 FC:00 I:00
25B423 0 S:01FF P:EnvMXDIzc HC:601446 VC:000 FC:00 I:00
25B426 0 S:01FF P:EnvMXDIzc HC:601462 VC:000 FC:00 I:00
25B42A 0 S:01FF P:EnvMXDIzc HC:601478 VC:000 FC:00 I:00
25B42C 0 S:01FF P:EnvMXDIzc HC:601494 VC:000 FC:00 I:00
25B430 0 S:01FF P:EnvMXDIzc HC:601510 VC:000 FC:00 I:00
25B434 0 S:01FF P:EnvMXDIzc HC:601526 VC:000 FC:00 I:00
25B435 0 S:01FF P:EnvMXDIzc HC:601542 VC:000 FC:00 I:00
25B438 0 S:01FF P:EnvMXDIzc HC:601558 VC:000 FC:00 I:00
25B439 0 S:01FF P:EnvMXDIzc HC:601574 VC:000 FC:00 I:00
25B43C 0 S:01FF P:EnvMXDIzc HC:601590 VC:000 FC:00 I:00
25B43E 0 S:01FF P:EnvMXDIzc HC:601606 VC:000 FC:00 I:00
25B440 0 S:01FF P:EnvMXDIzc HC:601622 VC:000 FC:00 I:00
25B441 0 S:01FF P:EnvMXDIzc HC:601638 VC:000 FC:00 I:00
25B443 0 S:01FF P:EnvMXDIzc HC:601654 VC:000 FC:00 I:00
25B445 0 S:01FF P:EnvMXDIzc HC:601670 VC:000 FC:00 I:00
25B449 0 S:01FF P:EnvMXDIzc HC:601686 VC:000 FC:00 I:00
25B44D 0 S:01FF P:EnvMXDIzc HC:601702 VC:000 FC:00 I:00
25B44F 0 S:01FF P:EnvMXDIzc HC:601718 VC:000 FC:00 I:00
25B451 0 S:01FF P:EnvMXDIzc HC:601734 VC:000 FC:00 I:00
25B453 0 S:01FF P:EnvMXDIzc HC:601750 VC:000 FC:00 I:00
25B455 0 S:01FF P:EnvMXDIzc HC:601766 VC:000 FC:00 I:00
25B459 0 S:01FF P:EnvMXDIzc HC:601782 VC:000 FC:00 I:00
25B45A 0 S:01FF P:EnvMXDIzc HC:601798 VC:000 FC:00 I:00
25B45C 0 S:01FF P:EnvMXDIzc HC:601814 VC:000 FC:00 I:00
25B45E 0 S:01FF P:EnvMXDIzc HC:601830 VC:000 FC:00 I:00
25B466 0 S:01FF P:EnvMXDIzc HC:601910 VC:000 FC:00 I:00
25B468 0 S:01FF P:EnvMXDIzc HC:601926 VC:000 FC:00 I:00
25B46B 0 S:01FF P:EnvMXDIzc HC:601942 VC:000 FC:00 I:00
25B46F 0 S:01FF P:EnvMXDIzc HC:601958 VC:000 FC:00 I:00
25B472 0 S:01FF P:EnvMXDIzc HC:601974 VC:000 FC:00 I:00
25B474 0 S:01FF P:EnvMXDIzc HC:601990 VC:000 FC:00 I:00
25B476 0 S:01FF P:EnvMXDIzc HC:602006 VC:000 FC:00 I:00
25B479 0 S:01FF P:EnvMXDIzc HC:602022 VC:000 FC:00 I:00
25B47A 0 S:01FF P:EnvMXDIzc HC:602038 VC:000 FC:00 I:00
25B47C 0 S:01FF P:EnvMXDIzc HC:602054 VC:000 FC:00 I:00
25B47E 0 S:01FF P:EnvMXDIzc HC:602070 VC:000 FC:00 I:00
25B480 0 S:01FF P:EnvMXDIzc HC:602086 VC:000 FC:00 I:00
25B481 0 S:01FF P:EnvMXDIzc HC:602102 VC:000 FC:00 I:00
25B482 0 S:01FF P:EnvMXDIzc HC:602118 VC:000 FC:00 I:00
25B484 0 S:01FF P:EnvMXDIzc HC:602134 VC:000 FC:00 I:00
25B485 0 S:01FF P:EnvMXDIzc HC:602150 VC:000 FC:00 I:00
25B487 0 S:01FF P:EnvMXDIzc HC:602166 VC:000 FC:00 I:00
25B488 0 S:01FF P:EnvMXDIzc HC:602182 VC:000 FC:00 I:00
25B48A 0 S:01FF P:EnvMXDIzc HC:602198 VC:000 FC:00 I:00
25B48C 0 S:01FF P:EnvMXDIzc HC:602214 VC:000 FC:00 I:00
25B48E 0 S:01FF P:EnvMXDIzc HC:602230 VC:000 FC:00 I:00
25B48F 0 S:01FF P:EnvMXDIzc HC:602246 VC:000 FC:00 I:00
25B491 0 S:01FF P:EnvMXDIzc HC:602262 VC:000 FC:00 I:00
25B492 0 S:01FF P:EnvMXDIzc HC:602278 VC:000 FC:00 I:00
25B496 0 S:01FF P:EnvMXDIzc HC:602294 VC:000 FC:00 I:00
25B497 0 S:01FF P:EnvMXDIzc HC:602310 VC:000 FC:00 I:00
25B498 0 S:01FF P:EnvMXDIzc HC:602326 VC:000 FC:00 I:00
25B49B 0 S:01FF P:EnvMXDIzc HC:602342 VC:000 FC:00 I:00
25B49F 0 S:01FF P:EnvMXDIzc HC:602358 VC:000 FC:00 I:00
25B4A1 0 S:01FF P:EnvMXDIzc HC:602374 VC:000 FC:00 I:00
25B4A3 0 S:01FF P:EnvMXDIzc HC:602390 VC:000 FC:00 I:00
25B4A5 0 S:01FF P:EnvMXDIzc HC:602406 VC:000 FC:00 I:00
25B4A9 0 S:01FF P:EnvMXDIzc HC:602422 VC:000 FC:00 I:00
25B4AB 0 S:01FF P:EnvMXDIzc HC:602438 VC:000 FC:00 I:00
25B4AC 0 S:01FF P:EnvMXDIzc HC:602454 VC:000 FC:00 I:00
25B4AE 0 S:01FF P:EnvMXDIzc HC:602470 VC:000 FC:00 I:00
25B4B0 0 S:01FF P:EnvMXDIzc HC:602486 VC:000 FC:00 I:00
25B4B4 0 S:01FF P:EnvMXDIzc HC:602502 VC:000 FC:00 I:00
25B4B6 0 S:01FF P:EnvMXDIzc HC:602518 VC:000 FC:00 I:00
25B4B7 0 S:01FF P:EnvMXDIzc HC:602534 VC:000 FC:00 I:00
25B4B9 0 S:01FF P:EnvMXDIzc HC:602550 VC:000 FC:00 I:00
25B4BB 0 S:01FF P:EnvMXDIzc HC:602566 VC:000 FC:00 I:00
25B4BE 0 S:01FF P:EnvMXDIzc HC:602582 VC:000 FC:00 I:00
25B4C2 0 S:01FF P:EnvMXDIzc HC:602598 VC:000 FC:00 I:00
25B4C4 0 S:01FF P:EnvMXDIzc HC:602614 VC:000 FC:00 I:00
25B4C8 0 S:01FF P:EnvMXDIzc HC:602630 VC:000 FC:00 I:00
25B4CB 0 S:01FF P:EnvMXDIzc HC:602646 VC:000 FC:00 I:00
25B4CD 0 S:01FF P:EnvMXDIzc HC:602662 VC:000 FC:00 I:00
25B4DA 0 S:01FF P:EnvMXDIzc HC:602774 VC:000 FC:00 I:00
25B4DC 0 S:01FF P:EnvMXDIzc HC:602790 VC:000 FC:00 I:00
25B4DE 0 S:01FF P:EnvMXDIzc HC:602806 VC:000 FC:00 I:00
25B4E0 0 S:01FF P:EnvMXDIzc HC:602822 VC:000 FC:00 I:00
25B4E2 0 S:01FF P:EnvMXDIzc HC:602838 VC:000 FC:00 I:00
25B4E5 0 S:01FF P:EnvMXDIzc HC:602854 VC:000 FC:00 I:00
25B4E6 0 S:01FF P:EnvMXDIzc HC:602870 VC:000 FC:00 I:00
25B4E7 0 S:01FF P:EnvMXDIzc HC:602886 VC:000 FC:00 I:00
25B4E9 0 S:01FF P:EnvMXDIzc HC:602902 VC:000 FC:00 I:00
25B4EB 0 S:01FF P:EnvMXDIzc HC:602918 VC:000 FC:00 I:00
25B4EC 0 S:01FF P:EnvMXDIzc HC:602934 VC:000 FC:00 I:00
25B4ED 0 S:01FF P:EnvMXDIzc HC:602950 VC:000 FC:00 I:00
25B4EE 0 S:01FF P:EnvMXDIzc HC:602966 VC:000 FC:00 I:00
25B4EF 0 S:01FF P:EnvMXDIzc HC:602982 VC:000 FC:00 I:00
25B4F0 0 S:01FF P:EnvMXDIzc HC:602998 VC:000 FC:00 I:00
25B4F2 0 S:01FF P:EnvMXDIzc HC:603014 VC:000 FC:00 I:00
25B4F4 0 S:01FF P:EnvMXDIzc HC:603030 VC:000 FC:00 I:00
25B4F7 0 S:01FF P:EnvMXDIzc HC:603046 VC:000 FC:00 I:00
25B4F9 0 S:01FF P:EnvMXDIzc HC:603062 VC:000 FC:00 I:00
25B4FB 0 S:01FF P:EnvMXDIzc HC:603078 VC:000 FC:00 I:00
25B4FF 0 S:01FF P:EnvMXDIzc HC:603094 VC:000 FC:00 I:00
25B501 0 S:01FF P:EnvMXDIzc HC:603110 VC:000 FC:00 I:00
25B505 0 S:01FF P:EnvMXDIzc HC:603126 VC:000 FC:00 I:00
25B507 0 S:01FF P:EnvMXDIzc HC:603142 VC:000 FC:00 I:00
25B50B 0 S:01FF P:EnvMXDIzc HC:603158 VC:000 FC:00 I:00
25B50F 0 S:01FF P:EnvMXDIzc HC:603174 VC:000 FC:00 I:00
25B511 0 S:01FF P:EnvMXDIzc HC:603190 VC:000 FC:00 I:00
25B513 0 S:01FF P:EnvMXDIzc HC:603206 VC:000 FC:00 I:00
25B517 0 S:01FF P:EnvMXDIzc HC:603222 VC:000 FC:00 I:00
25B519 0 S:01FF P:EnvMXDIzc HC:603238 VC:000 FC:00 I:00
25B51D 0 S:01FF P:EnvMXDIzc HC:603254 VC:000 FC:00 I:00
25B520 0 S:01FF P:EnvMXDIzc HC:603270 VC:000 FC:00 I:00
25B521 0 S:01FF P:EnvMXDIzc HC:603286 VC:000 FC:00 I:00
25B522 0 S:01FF P:EnvMXDIzc HC:603302 VC:000 FC:00 I:00
25B524 0 S:01FF P:EnvMXDIzc HC:603318 VC:000 FC:00 I:00
25B526 0 S:01FF P:EnvMXDIzc HC:603334 VC:000 FC:00 I:00
25B533 0 S:01FF P:EnvMXDIzc HC:603414 VC:000 FC:00 I:00
25B537 0 S:01FF P:EnvMXDIzc HC:603430 VC:000 FC:00 I:00
25B53A 0 S:01FF P:EnvMXDIzc HC:603446 VC:000 FC:00 I:00
25B53C 0 S:01FF P:EnvMXDIzc HC:603462 VC:000 FC:00 I:00
25B53E 0 S:01FF P:EnvMXDIzc HC:603478 VC:000 FC:00 I:00
25B540 0 S:01FF P:EnvMXDIzc HC:603494 VC:000 FC:00 I:00
25B543 0 S:01FF P:EnvMXDIzc HC:603510 VC:000 FC:00 I:00
25B545 0 S:01FF P:EnvMXDIzc HC:603526 VC:000 FC:00 I:00
25B547 0 S:01FF P:EnvMXDIzc HC:603542 VC:000 FC:00 I:00
25B54B 0 S:01FF P:EnvMXDIzc HC:603558 VC:000 FC:00 I:00
25B54E 0 S:01FF P:EnvMXDIzc HC:603574 VC:000 FC:00 I:00
25B552 0 S:01FF P:EnvMXDIzc HC:603590 VC:000 FC:00 I:00
25B554 0 S:01FF P:EnvMXDIzc HC:603606 VC:000 FC:00 I:00
25B558 0 S:01FF P:EnvMXDIzc HC:603622 VC:000 FC:00 I:00
25B55C 0 S:01FF P:EnvMXDIzc HC:603638 VC:000 FC:00 I:00
25B55E 0 S:01FF P:EnvMXDIzc HC:603654 VC:000 FC:00 I:00
25B560 0 S:01FF P:EnvMXDIzc HC:603670 VC:000 FC:00 I:00
25B564 0 S:01FF P:EnvMXDIzc HC:603686 VC:000 FC:00 I:00
25B566 0 S:01FF P:EnvMXDIzc HC:603702 VC:000 FC:00 I:00
25B56A 0 S:01FF P:EnvMXDIzc HC:603718 VC:000 FC:00 I:00
25B56D 0 S:01FF P:EnvMXDIzc HC:603734 VC:000 FC:00 I:00
25B56F 0 S:01FF P:EnvMXDIzc HC:603750 VC:000 FC:00 I:00
25B571 0 S:01FF P:EnvMXDIzc HC:603766 VC:000 FC:00 I:00
25B573 0 S:01FF P:EnvMXDIzc HC:603782 VC:000 FC:00 I:00
25B575 0 S:01FF P:EnvMXDIzc HC:603798 VC:000 FC:00 I:00
25B577 0 S:01FF P:EnvMXDIzc HC:603814 VC:000 FC:00 I:00
25B579 0 S:01FF P:EnvMXDIzc HC:603830 VC:000 FC:00 I:00
25B57B 0 S:01FF P:EnvMXDIzc HC:603846 VC:000 FC:00 I:00
25B57D 0 S:01FF P:EnvMXDIzc HC:603862 VC:000 FC:00 I:00
25B57F 0 S:01FF P:EnvMXDIzc HC:603878 VC:000 FC:00 I:00
25B581 0 S:01FF P:EnvMXDIzc HC:603894 VC:000 FC:00 I:00
25B584 0 S:01FF P:EnvMXDIzc HC:603910 VC:000 FC:00 I:00
25B585 0 S:01FF P:EnvMXDIzc HC:603926 VC:000 FC:00 I:00
25B588 0 S:01FF P:EnvMXDIzc HC:603942 VC:000 FC:00 I:00
25B58A 0 S:01FF P:EnvMXDIzc HC:603958 VC:000 FC:00 I:00
25B58C 0 S:01FF P:EnvMXDIzc HC:603974 VC:000 FC:00 I:00
25B58F 0 S:01FF P:EnvMXDIzc HC:603990 VC:000 FC:00 I:00
25B591 0 S:01FF P:EnvMXDIzc HC:604006 VC:000 FC:00 I:00
25B593 0 S:01FF P:EnvMXDIzc HC:604022 VC:000 FC:00 I:00
25B595 0 S:01FF P:EnvMXDIzc HC:604038 VC:000 FC:00 I:00
25B597 0 S:01FF P:EnvMXDIzc HC:604054 VC:000 FC:00 I:00
25B599 0 S:01FF P:EnvMXDIzc HC:604070 VC:000 FC:00 I:00
25B59C 0 S:01FF P:EnvMXDIzc HC:604086 VC:000 FC:00 I:00
25B59E 0 S:01FF P:EnvMXDIzc HC:604102 VC:000 FC:00 I:00
25B5A0 0 S:01FF P:EnvMXDIzc HC:604118 VC:000 FC:00 I:00
25B5A2 0 S:01FF P:EnvMXDIzc HC:604134 VC:000 FC:00 I:00
25B5A4 0 S:01FF P:EnvMXDIzc HC:604150 VC:000 FC:00 I:00
25B5A6 0 S:01FF P:EnvMXDIzc HC:604166 VC:000 FC:00 I:00
25B5A7 0 S:01FF P:EnvMXDIzc HC:604182 VC:000 FC:00 I:00
25B5A9 0 S:01FF P:EnvMXDIzc HC:604198 VC:000 FC:00 I:00
25B5AD 0 S:01FF P:EnvMXDIzc HC:604214 VC:000 FC:00 I:00
25B5B1 0 S:01FF P:EnvMXDIzc HC:604230 VC:000 FC:00 I:00
25B5B3 0 S:01FF P:EnvMXDIzc HC:604246 VC:000 FC:00 I:00
25B5B5 0 S:01FF P:EnvMXDIzc HC:604262 VC:000 FC:00 I:00
25B5B7 0 S:01FF P:EnvMXDIzc HC:604278 VC:000 FC:00 I:00
25B5B9 0 S:01FF P:EnvMXDIzc HC:604294 VC:000 FC:00 I:00
25B5BB 0 S:01FF P:EnvMXDIzc HC:604310 VC:000 FC:00 I:00
25B5BD 0 S:01FF P:EnvMXDIzc HC:604326 VC:000 FC:00 I:00
25B5BF 0 S:01FF P:EnvMXDIzc HC:604342 VC:000 FC:00 I:00
25B5C0 0 S:01FF P:EnvMXDIzc HC:604358 VC:000 FC:00 I:00
25B5C2 0 S:01FF P:EnvMXDIzc HC:604374 VC:000 FC:00 I:00
25B5C6 0 S:01FF P:EnvMXDIzc HC:604390 VC:000 FC:00 I:00
25B5CD  A:0000 X:0000 Y:0000 D:0000 DB:00 S:01FF P:EnvMXDIzc HC:738470 VC:000 FC:00 I:00
25B5D1 0 S:01FF P:EnvMXDIzc HC:604502 VC:000 FC:00 I:00
25B5D3 0 S:01FF P:EnvMXDIzc HC:604518 VC:000 FC:00 I:00
25B5D6 0 S:01FF P:EnvMXDIzc HC:604534 VC:000 FC:00 I:00
25B5D8 0 S:01FF P:EnvMXDIzc HC:604550 VC:000 FC:00 I:00
25B5DA 0 S:01FF P:EnvMXDIzc HC:604566 VC:000 FC:00 I:00
25B5DC 0 S:01FF P:EnvMXDIzc HC:604582 VC:000 FC:00 I:00
25B5E0 0 S:01FF P:EnvMXDIzc HC:604598 VC:000 FC:00 I:00
25B5E2 0 S:01FF P:EnvMXDIzc HC:604614 VC:000 FC:00 I:00
25B5E4 0 S:01FF P:EnvMXDIzc HC:604630 VC:000 FC:00 I:00
25B5E6 0 S:01FF P:EnvMXDIzc HC:604646 VC:000 FC:00 I:00
25B5E8 0 S:01FF P:EnvMXDIzc HC:604662 VC:000 FC:00 I:00
25B5EC 0 S:01FF P:EnvMXDIzc HC:604678 VC:000 FC:00 I:00
25B5EE 0 S:01FF P:EnvMXDIzc HC:604694 VC:000 FC:00 I:00
25B5EF 0 S:01FF P:EnvMXDIzc HC:604710 VC:000 FC:00 I:00
25B5F1 0 S:01FF P:EnvMXDIzc HC:604726 VC:000 FC:00 I:00
25B5F3 0 S:01FF P:EnvMXDIzc HC:604742 VC:000 FC:00 I:00
25B5F5 0 S:01FF P:EnvMXDIzc HC:604758 VC:000 FC:00 I:00
25B5F9 0 S:01FF P:EnvMXDIzc HC:604774 VC:000 FC:00 I:00
25B5FB 0 S:01FF P:EnvMXDIzc HC:604790 VC:000 FC:00 I:00
25B5FD 0 S:01FF P:EnvMXDIzc HC:604806 VC:000 FC:00 I:00
25B601 0 S:01FF P:EnvMXDIzc HC:604822 VC:000 FC:00 I:00
25B605 0 S:01FF P:EnvMXDIzc HC:604838 VC:000 FC:00 I:00
25B607 0 S:01FF P:EnvMXDIzc HC:604854 VC:000 FC:00 I:00
25B609 0 S:01FF P:EnvMXDIzc HC:604870 VC:000 FC:00 I:00
25B60C 0 S:01FF P:EnvMXDIzc HC:604886 VC:000 FC:00 I:00
25B60D 0 S:01FF P:EnvMXDIzc HC:604902 VC:000 FC:00 I:00
25B60F 0 S:01FF P:EnvMXDIzc HC:604918 VC:000 FC:00 I:00
25B611 0 S:01FF P:EnvMXDIzc HC:604934 VC:000 FC:00 I:00
25B61E    A:0000 X:0000 Y:0000 D:0000 DB:00 S:01FF P:EnvMXDIzc HC:872454 VC:000 FC:00 I:00
25B622 0 S:01FF P:EnvMXDIzc HC:605110 VC:000 FC:00 I:00
25B624 0 S:01FF P:EnvMXDIzc HC:605126 VC:000 FC:00 I:00
25B627 0 S:01FF P:EnvMXDIzc HC:605142 VC:000 FC:00 I:00
25B629 0 S:01FF P:EnvMXDIzc HC:605158 VC:000 FC:00 I:00
25B62B 0 S:01FF P:EnvMXDIzc HC:605174 VC:000 FC:00 I:00
25B62D 0 S:01FF P:EnvMXDIzc HC:605190 VC:000 FC:00 I:00
25B631 0 S:01FF P:EnvMXDIzc HC:605206 VC:000 FC:00 I:00
25B633 0 S:01FF P:EnvMXDIzc HC:605222 VC:000 FC:00 I:00
25B635 0 S:01FF P:EnvMXDIzc HC:605238 VC:000 FC:00 I:00
25B637 0 S:01FF P:EnvMXDIzc HC:605254 VC:000 FC:00 I:00
25B639 0 S:01FF P:EnvMXDIzc HC:605270 VC:000 FC:00 I:00
25B63D 0 S:01FF P:EnvMXDIzc HC:605286 VC:000 FC:00 I:00
25B63F 0 S:01FF P:EnvMXDIzc HC:605302 VC:000 FC:00 I:00
25B640 0 S:01FF P:EnvMXDIzc HC:605318 VC:000 FC:00 I:00
25B642 0 S:01FF P:EnvMXDIzc HC:605334 VC:000 FC:00 I:00
25B644 0 S:01FF P:EnvMXDIzc HC:605350 VC:000 FC:00 I:00
25B647 0 S:01FF P:EnvMXDIzc HC:605366 VC:000 FC:00 I:00
25B64B 0 S:01FF P:EnvMXDIzc HC:605382 VC:000 FC:00 I:00
25B64D 0 S:01FF P:EnvMXDIzc HC:605398 VC:000 FC:00 I:00
25B64F 0 S:01FF P:EnvMXDIzc HC:605414 VC:000 FC:00 I:00
25B653 0 S:01FF P:EnvMXDIzc HC:605430 VC:000 FC:00 I:00
25B657 0 S:01FF P:EnvMXDIzc HC:605446 VC:000 FC:00 I:00
25B659 0 S:01FF P:EnvMXDIzc HC:605462 VC:000 FC:00 I:00
25B65B 0 S:01FF P:EnvMXDIzc HC:605478 VC:000 FC:00 I:00
25B65E 0 S:01FF P:EnvMXDIzc HC:605494 VC:000 FC:00 I:00
25B65F 0 S:01FF P:EnvMXDIzc HC:605510 VC:000 FC:00 I:00
25B661 0 S:01FF P:EnvMXDIzc HC:605526 VC:000 FC:00 I:00
25B663 0 S:01FF P:EnvMXDIzc HC:605542 VC:000 FC:00 I:00
25B664 0 S:01FF P:EnvMXDIzc HC:605558 VC:000 FC:00 I:00
25B693 0 S:01FF P:EnvMXDIzc HC:605846 VC:000 FC:00 I:00
25B695 0 S:01FF P:EnvMXDIzc HC:605862 VC:000 FC:00 I:00
25B697 0 S:01FF P:EnvMXDIzc HC:605878 VC:000 FC:00 I:00
25B699 0 S:01FF P:EnvMXDIzc HC:605894 VC:000 FC:00 I:00
25B69B 0 S:01FF P:EnvMXDIzc HC:605910 VC:000 FC:00 I:00
25B69E 0 S:01FF P:EnvMXDIzc HC:605926 VC:000 FC:00 I:00
25B69F 0 S:01FF P:EnvMXDIzc HC:605942 VC:000 FC:00 I:00
25B6A1 0 S:01FF P:EnvMXDIzc HC:605958 VC:000 FC:00 I:00
25B6A2 0 S:01FF P:EnvMXDIzc HC:605974 VC:000 FC:00 I:00
25B6A6 0 S:01FF P:EnvMXDIzc HC:605990 VC:000 FC:00 I:00
25B6A8 0 S:01FF P:EnvMXDIzc HC:606006 VC:000 FC:00 I:00
25B6AC 0 S:01FF P:EnvMXDIzc HC:606022 VC:000 FC:00 I:00
25B6AD 0 S:01FF P:EnvMXDIzc HC:606038 VC:000 FC:00 I:00
25B6B0 0 S:01FF P:EnvMXDIzc HC:606054 VC:000 FC:00 I:00
25B6B4 0 S:01FF P:EnvMXDIzc HC:606070 VC:000 FC:00 I:00
25B6B6 0 S:01FF P:EnvMXDIzc HC:606086 VC:000 FC:00 I:00
25B6B8 0 S:01FF P:EnvMXDIzc HC:606102 VC:000 FC:00 I:00
25B6BA 0 S:01FF P:EnvMXDIzc HC:606118 VC:000 FC:00 I:00
25B6BE 0 S:01FF P:EnvMXDIzc HC:606134 VC:000 FC:00 I:00
25B6C2 0 S:01FF P:EnvMXDIzc HC:606150 VC:000 FC:00 I:00
25B6C3 0 S:01FF P:EnvMXDIzc HC:606166 VC:000 FC:00 I:00
25B6C6 0 S:01FF P:EnvMXDIzc HC:606182 VC:000 FC:00 I:00
25B6C7 0 S:01FF P:EnvMXDIzc HC:606198 VC:000 FC:00 I:00
25B6CA 0 S:01FF P:EnvMXDIzc HC:606214 VC:000 FC:00 I:00
25B6CC 0 S:01FF P:EnvMXDIzc HC:606230 VC:000 FC:00 I:00
25B6CE 0 S:01FF P:EnvMXDIzc HC:606246 VC:000 FC:00 I:00
25B6CF 0 S:01FF P:EnvMXDIzc HC:606262 VC:000 FC:00 I:00
25B6D3 0 S:01FF P:EnvMXDIzc HC:606278 VC:000 FC:00 I:00
25B6D6 0 S:01FF P:EnvMXDIzc HC:606294 VC:000 FC:00 I:00
25B6D8 0 S:01FF P:EnvMXDIzc HC:606310 VC:000 FC:00 I:00
25B6D9 0 S:01FF P:EnvMXDIzc HC:606326 VC:000 FC:00 I:00
25B6DC 0 S:01FF P:EnvMXDIzc HC:606342 VC:000 FC:00 I:00
25B6DE 0 S:01FF P:EnvMXDIzc HC:606358 VC:000 FC:00 I:00
25B6E0 0 S:01FF P:EnvMXDIzc HC:606374 VC:000 FC:00 I:00
25B6E2 0 S:01FF P:EnvMXDIzc HC:606390 VC:000 FC:00 I:00
25B6E4 0 S:01FF P:EnvMXDIzc HC:606406 VC:000 FC:00 I:00
25B6E8 0 S:01FF P:EnvMXDIzc HC:606422 VC:000 FC:00 I:00
25B6EC 0 S:01FF P:EnvMXDIzc HC:606438 VC:000 FC:00 I:00
25B6EE 0 S:01FF P:EnvMXDIzc HC:606454 VC:000 FC:00 I:00
25B6F0 0 S:01FF P:EnvMXDIzc HC:606470 VC:000 FC:00 I:00
25B6F2 0 S:01FF P:EnvMXDIzc HC:606486 VC:000 FC:00 I:00
25B6F4 0 S:01FF P:EnvMXDIzc HC:606502 VC:000 FC:00 I:00
25B6F7 0 S:01FF P:EnvMXDIzc HC:606518 VC:000 FC:00 I:00
25B6F8 0 S:01FF P:EnvMXDIzc HC:606534 VC:000 FC:00 I:00
25B6FA 0 S:01FF P:EnvMXDIzc HC:606550 VC:000 FC:00 I:00
25B6FB 0 S:01FF P:EnvMXDIzc HC:606566 VC:000 FC:00 I:00
25B6FD 0 S:01FF P:EnvMXDIzc HC:606582 VC:000 FC:00 I:00
25B6FF 0 S:01FF P:EnvMXDIzc HC:606598 VC:000 FC:00 I:00
25B701 0 S:01FF P:EnvMXDIzc HC:606614 VC:000 FC:00 I:00
25B703 0 S:01FF P:EnvMXDIzc HC:606630 VC:000 FC:00 I:00
25B704 0 S:01FF P:EnvMXDIzc HC:606646 VC:000 FC:00 I:00
25B706 0 S:01FF P:EnvMXDIzc HC:606662 VC:000 FC:00 I:00
25B708 0 S:01FF P:EnvMXDIzc HC:606678 VC:000 FC:00 I:00
25B70A 0 S:01FF P:EnvMXDIzc HC:606694 VC:000 FC:00 I:00
25B70C 0 S:01FF P:EnvMXDIzc HC:606710 VC:000 FC:00 I:00
25B70E 0 S:01FF P:EnvMXDIzc HC:606726 VC:000 FC:00 I:00
25B710 0 S:01FF P:EnvMXDIzc HC:606742 VC:000 FC:00 I:00
25B712 0 S:01FF P:EnvMXDIzc HC:606758 VC:000 FC:00 I:00
25B714 0 S:01FF P:EnvMXDIzc HC:606774 VC:000 FC:00 I:00
25B716 0 S:01FF P:EnvMXDIzc HC:606790 VC:000 FC:00 I:00
25B717 0 S:01FF P:EnvMXDIzc HC:606806 VC:000 FC:00 I:00
25B719 0 S:01FF P:EnvMXDIzc HC:606822 VC:000 FC:00 I:00
25B71B 0 S:01FF P:EnvMXDIzc HC:606838 VC:000 FC:00 I:00
25B71D 0 S:01FF P:EnvMXDIzc HC:606854 VC:000 FC:00 I:00
25B71F 0 S:01FF P:EnvMXDIzc HC:606870 VC:000 FC:00 I:00
25B722 0 S:01FF P:EnvMXDIzc HC:606886 VC:000 FC:00 I:00
25B723 0 S:01FF P:EnvMXDIzc HC:606902 VC:000 FC:00 I:00
25B725 0 S:01FF P:EnvMXDIzc HC:606918 VC:000 FC:00 I:00
25B728 0 S:01FF P:EnvMXDIzc HC:606934 VC:000 FC:00 I:00
25B729 0 S:01FF P:EnvMXDIzc HC:606950 VC:000 FC:00 I:00
25B72B 0 S:01FF P:EnvMXDIzc HC:606966 VC:000 FC:00 I:00
25B72D 0 S:01FF P:EnvMXDIzc HC:606982 VC:000 FC:00 I:00
25B72F 0 S:01FF P:EnvMXDIzc HC:606998 VC:000 FC:00 I:00
25D518 0 S:01FF P:EnvMXDIzc HC:126246 VC:000 FC:00 I:00
25D51A 0 S:01FF P:EnvMXDIzc HC:126262 VC:000 FC:00 I:00
25D51C 0 S:01FF P:EnvMXDIzc HC:126278 VC:000 FC:00 I:00
25D520 0 S:01FF P:EnvMXDIzc HC:126294 VC:000 FC:00 I:00
25D524 0 S:01FF P:EnvMXDIzc HC:126310 VC:000 FC:00 I:00
25D526 0 S:01FF P:EnvMXDIzc HC:126326 VC:000 FC:00 I:00
25D528 0 S:01FF P:EnvMXDIzc HC:126342 VC:000 FC:00 I:00
25D52A 0 S:01FF P:EnvMXDIzc HC:126358 VC:000 FC:00 I:00
25D52E 0 S:01FF P:EnvMXDIzc HC:126374 VC:000 FC:00 I:00
25D52F 0 S:01FF P:EnvMXDIzc HC:126390 VC:000 FC:00 I:00
25D531 0 S:01FF P:EnvMXDIzc HC:126406 VC:000 FC:00 I:00
25D533 0 S:01FF P:EnvMXDIzc HC:126422 VC:000 FC:00 I:00
25D537               
25D6A3 0 S:01FF P:EnvMXDIzc HC:64030 VC:000 FC:00 I:00
25D6A6 0 S:01FF P:EnvMXDIzc HC:64046 VC:000 FC:00 I:00
25D6A8 0 S:01FF P:EnvMXDIzc HC:64062 VC:000 FC:00 I:00
25D6A9 0 S:01FF P:EnvMXDIzc HC:64078 VC:000 FC:00 I:00
25D6AC 0 S:01FF P:EnvMXDIzc HC:64094 VC:000 FC:00 I:00
25D6AE 0 S:01FF P:EnvMXDIzc HC:64110 VC:000 FC:00 I:00
25D6B0 0 S:01FF P:EnvMXDIzc HC:64126 VC:000 FC:00 I:00
25D6B4 0 S:01FF P:EnvMXDIzc HC:64142 VC:000 FC:00 I:00
25D6B6 0 S:01FF P:EnvMXDIzc HC:64158 VC:000 FC:00 I:00
25D6B8 0 S:01FF P:EnvMXDIzc HC:64174 VC:000 FC:00 I:00
25D6BC 0 S:01FF P:EnvMXDIzc HC:64190 VC:000 FC:00 I:00
25D6BD 0 S:01FF P:EnvMXDIzc HC:64206 VC:000 FC:00 I:00
25D6BF 0 S:01FF P:EnvMXDIzc HC:64222 VC:000 FC:00 I:00
25D6C8 0 S:01FF P:EnvMXDIzc HC:64302 VC:000 FC:00 I:00
25D6CA 0 S:01FF P:EnvMXDIzc HC:64318 VC:000 FC:00 I:00
25D6CC 0 S:01FF P:EnvMXDIzc HC:64334 VC:000 FC:00 I:00
25D6CE 0 S:01FF P:EnvMXDIzc HC:64350 VC:000 FC:00 I:00
25D6D0 0 S:01FF P:EnvMXDIzc HC:64366 VC:000 FC:00 I:00
25D6D2 0 S:01FF P:EnvMXDIzc HC:64382 VC:000 FC:00 I:00
25D6D4 0 S:01FF P:EnvMXDIzc HC:64398 VC:000 FC:00 I:00
25D6D7 0 S:01FF P:EnvMXDIzc HC:64414 VC:000 FC:00 I:00
25D6D9 0 S:01FF P:EnvMXDIzc HC:64430 VC:000 FC:00 I:00
25D6DB 0 S:01FF P:EnvMXDIzc HC:64446 VC:000 FC:00 I:00
25D6DE 0 S:01FF P:EnvMXDIzc HC:64462 VC:000 FC:00 I:00
25D6E0 0 S:01FF P:EnvMXDIzc HC:64478 VC:000 FC:00 I:00
25D6E2 0 S:01FF P:EnvMXDIzc HC:64494 VC:000 FC:00 I:00
25D6E6 0 S:01FF P:EnvMXDIzc HC:64510 VC:000 FC:00 I:00
25D6E8 0 S:01FF P:EnvMXDIzc HC:64526 VC:000 FC:00 I:00
25D6EC 0 S:01FF P:EnvMXDIzc HC:64542 VC:000 FC:00 I:00
25D6ED 0 S:01FF P:EnvMXDIzc HC:64558 VC:000 FC:00 I:00
25D6EF 0 S:01FF P:EnvMXDIzc HC:64574 VC:000 FC:00 I:00
25D6F1 0 S:01FF P:EnvMXDIzc HC:64590 VC:000 FC:00 I:00
25D6F3 0 S:01FF P:EnvMXDIzc HC:64606 VC:000 FC:00 I:00
25D6F5 0 S:01FF P:EnvMXDIzc HC:64622 VC:000 FC:00 I:00
25D6F7 0 S:01FF P:EnvMXDIzc HC:64638 VC:000 FC:00 I:00
25D6F9 0 S:01FF P:EnvMXDIzc HC:64654 VC:000 FC:00 I:00
25D6FB 0 S:01FF P:EnvMXDIzc HC:64670 VC:000 FC:00 I:00
25D6FE 0 S:01FF P:EnvMXDIzc HC:64686 VC:000 FC:00 I:00
25D700 0 S:01FF P:EnvMXDIzc HC:64702 VC:000 FC:00 I:00
25D701 0 S:01FF P:EnvMXDIzc HC:64718 VC:000 FC:00 I:00
25D703 0 S:01FF P:EnvMXDIzc HC:64734 VC:000 FC:00 I:00
25D705 0 S:01FF P:EnvMXDIzc HC:64750 VC:000 FC:00 I:00
25D706 0 S:01FF P:EnvMXDIzc HC:64766 VC:000 FC:00 I:00
25D708 0 S:01FF P:EnvMXDIzc HC:64782 VC:000 FC:00 I:00
25D70A 0 S:01FF P:EnvMXDIzc HC:64798 VC:000 FC:00 I:00
25D71D 0 S:01FF P:EnvMXDIzc HC:65694 VC:000 FC:00 I:00
25D71F 0 S:01FF P:EnvMXDIzc HC:65710 VC:000 FC:00 I:00
25D721 0 S:01FF P:EnvMXDIzc HC:64958 VC:000 FC:00 I:00
25D723 0 S:01FF P:EnvMXDIzc HC:64974 VC:000 FC:00 I:00
25D725 0 S:01FF P:EnvMXDIzc HC:64990 VC:000 FC:00 I:00
25D727 0 S:01FF P:EnvMXDIzc HC:65006 VC:000 FC:00 I:00
25D729 0 S:01FF P:EnvMXDIzc HC:65022 VC:000 FC:00 I:00
25D72C 0 S:01FF P:EnvMXDIzc HC:65038 VC:000 FC:00 I:00
25D72E 0 S:01FF P:EnvMXDIzc HC:65054 VC:000 FC:00 I:00
25D730 0 S:01FF P:EnvMXDIzc HC:65070 VC:000 FC:00 I:00
25D733 0 S:01FF P:EnvMXDIzc HC:65086 VC:000 FC:00 I:00
25D735 0 S:01FF P:EnvMXDIzc HC:65102 VC:000 FC:00 I:00
25D737 0 S:01FF P:EnvMXDIzc HC:65118 VC:000 FC:00 I:00
25D73B 0 S:01FF P:EnvMXDIzc HC:65134 VC:000 FC:00 I:00
25D73D 0 S:01FF P:EnvMXDIzc HC:65150 VC:000 FC:00 I:00
25D741 0 S:01FF P:EnvMXDIzc HC:65166 VC:000 FC:00 I:00
25D742 0 S:01FF P:EnvMXDIzc HC:65182 VC:000 FC:00 I:00
25D744 0 S:01FF P:EnvMXDIzc HC:65198 VC:000 FC:00 I:00
25D746 0 S:01FF P:EnvMXDIzc HC:65214 VC:000 FC:00 I:00
25D748 0 S:01FF P:EnvMXDIzc HC:65230 VC:000 FC:00 I:00
25D74A 0 S:01FF P:EnvMXDIzc HC:65246 VC:000 FC:00 I:00
25D74C 0 S:01FF P:EnvMXDIzc HC:65262 VC:000 FC:00 I:00
25D74E 0 S:01FF P:EnvMXDIzc HC:65278 VC:000 FC:00 I:00
25D750 0 S:01FF P:EnvMXDIzc HC:65294 VC:000 FC:00 I:00
25D752 0 S:01FF P:EnvMXDIzc HC:65310 VC:000 FC:00 I:00
25D754 0 S:01FF P:EnvMXDIzc HC:65326 VC:000 FC:00 I:00
25D757 0 S:01FF P:EnvMXDIzc HC:65342 VC:000 FC:00 I:00
25D759 0 S:01FF P:EnvMXDIzc HC:65358 VC:000 FC:00 I:00
25D75A 0 S:01FF P:EnvMXDIzc HC:65374 VC:000 FC:00 I:00
25D75C 0 S:01FF P:EnvMXDIzc HC:65390 VC:000 FC:00 I:00
25D75E 0 S:01FF P:EnvMXDIzc HC:65406 VC:000 FC:00 I:00
25D75F 0 S:01FF P:EnvMXDIzc HC:65422 VC:000 FC:00 I:00
25D761 0 S:01FF P:EnvMXDIzc HC:65438 VC:000 FC:00 I:00
25D763 0 S:01FF P:EnvMXDIzc HC:65454 VC:000 FC:00 I:00
25D784 0 S:01FF P:EnvMXDIzc HC:65694 VC:000 FC:00 I:00
25D786 0 S:01FF P:EnvMXDIzc HC:65710 VC:000 FC:00 I:00
25D788 0 S:01FF P:EnvMXDIzc HC:65726 VC:000 FC:00 I:00
25D78A 0 S:01FF P:EnvMXDIzc HC:65742 VC:000 FC:00 I:00
25D78C 0 S:01FF P:EnvMXDIzc HC:65758 VC:000 FC:00 I:00
25D78E 0 S:01FF P:EnvMXDIzc HC:65774 VC:000 FC:00 I:00
25D790 0 S:01FF P:EnvMXDIzc HC:65790 VC:000 FC:00 I:00
25D793 0 S:01FF P:EnvMXDIzc HC:65806 VC:000 FC:00 I:00
25D795 0 S:01FF P:EnvMXDIzc HC:65822 VC:000 FC:00 I:00
25D797 0 S:01FF P:EnvMXDIzc HC:65838 VC:000 FC:00 I:00
25D79A 0 S:01FF P:EnvMXDIzc HC:65854 VC:000 FC:00 I:00
25D79C 0 S:01FF P:EnvMXDIzc HC:65870 VC:000 FC:00 I:00
25D79E 0 S:01FF P:EnvMXDIzc HC:65886 VC:000 FC:00 I:00
25D7A2 0 S:01FF P:EnvMXDIzc HC:65902 VC:000 FC:00 I:00
25D7A4 0 S:01FF P:EnvMXDIzc HC:65918 VC:000 FC:00 I:00
25D7A8 0 S:01FF P:EnvMXDIzc HC:65934 VC:000 FC:00 I:00
25D7A9 0 S:01FF P:EnvMXDIzc HC:65950 VC:000 FC:00 I:00
25D7AB 0 S:01FF P:EnvMXDIzc HC:65966 VC:000 FC:00 I:00
25D7AD 0 S:01FF P:EnvMXDIzc HC:65982 VC:000 FC:00 I:00
25D7AF 0 S:01FF P:EnvMXDIzc HC:65998 VC:000 FC:00 I:00
25D7B1 0 S:01FF P:EnvMXDIzc HC:66014 VC:000 FC:00 I:00
25D7B3 0 S:01FF P:EnvMXDIzc HC:66030 VC:000 FC:00 I:00
25D7B5 0 S:01FF P:EnvMXDIzc HC:66046 VC:000 FC:00 I:00
25D7B7 0 S:01FF P:EnvMXDIzc HC:66062 VC:000 FC:00 I:00
25D7B9 0 S:01FF P:EnvMXDIzc HC:66078 VC:000 FC:00 I:00
25D7BB 0 S:01FF P:EnvMXDIzc HC:66094 VC:000 FC:00 I:00
25D7BD 0 S:01FF P:EnvMXDIzc HC:66110 VC:000 FC:00 I:00
25D7BF 0 S:01FF P:EnvMXDIzc HC:66126 VC:000 FC:00 I:00
25D7C2 0 S:01FF P:EnvMXDIzc HC:66142 VC:000 FC:00 I:00
25D7C4 0 S:01FF P:EnvMXDIzc HC:66158 VC:000 FC:00 I:00
25D7C5 0 S:01FF P:EnvMXDIzc HC:66174 VC:000 FC:00 I:00
25D7C7 0 S:01FF P:EnvMXDIzc HC:66190 VC:000 FC:00 I:00
25D7C9 0 S:01FF P:EnvMXDIzc HC:66206 VC:000 FC:00 I:00
25D7CA 0 S:01FF P:EnvMXDIzc HC:66222 VC:000 FC:00 I:00
25D7CC 0 S:01FF P:EnvMXDIzc HC:66238 VC:000 FC:00 I:00
25D7CE 0 S:01FF P:EnvMXDIzc HC:66254 VC:000 FC:00 I:00
25D7CF 0 S:01FF P:EnvMXDIzc HC:66270 VC:000 FC:00 I:00
25D7D2 0 S:01FF P:EnvMXDIzc HC:66286 VC:000 FC:00 I:00
25D7D4 0 S:01FF P:EnvMXDIzc HC:66302 VC:000 FC:00 I:00
25D7D5 0 S:01FF P:EnvMXDIzc HC:66318 VC:000 FC:00 I:00
25D7D8 0 S:01FF P:EnvMXDIzc HC:66334 VC:000 FC:00 I:00
25D7DA 0 S:01FF P:EnvMXDIzc HC:66350 VC:000 FC:00 I:00
25D7DC 0 S:01FF P:EnvMXDIzc HC:66366 VC:000 FC:00 I:00
25D7DD 0 S:01FF P:EnvMXDIzc HC:66382 VC:000 FC:00 I:00
25D7DE 0 S:01FF P:EnvMXDIzc HC:66398 VC:000 FC:00 I:00
25D7E0 0 S:01FF P:EnvMXDIzc HC:66414 VC:000 FC:00 I:00
25D7E1 0 S:01FF P:EnvMXDIzc HC:66430 VC:000 FC:00 I:00
25D7E3 0 S:01FF P:EnvMXDIzc HC:66446 VC:000 FC:00 I:00
25D7E5 0 S:01FF P:EnvMXDIzc HC:66462 VC:000 FC:00 I:00
25D7E7 0 S:01FF P:EnvMXDIzc HC:66478 VC:000 FC:00 I:00
25D7E9 0 S:01FF P:EnvMXDIzc HC:66494 VC:000 FC:00 I:00
25D7EB 0 S:01FF P:EnvMXDIzc HC:66510 VC:000 FC:00 I:00
25D7EC 0 S:01FF P:EnvMXDIzc HC:66526 VC:000 FC:00 I:00
25D7ED 0 S:01FF P:EnvMXDIzc HC:66542 VC:000 FC:00 I:00
25D7EF 0 S:01FF P:EnvMXDIzc HC:66558 VC:000 FC:00 I:00
25D7F1 0 S:01FF P:EnvMXDIzc HC:66574 VC:000 FC:00 I:00
25D7F3 0 S:01FF P:EnvMXDIzc HC:66590 VC:000 FC:00 I:00
25D7F5 0 S:01FF P:EnvMXDIzc HC:66606 VC:000 FC:00 I:00
25D7F6 0 S:01FF P:EnvMXDIzc HC:66622 VC:000 FC:00 I:00
25D7F8 0 S:01FF P:EnvMXDIzc HC:66638 VC:000 FC:00 I:00
25D7FA 0 S:01FF P:EnvMXDIzc HC:66654 VC:000 FC:00 I:00
25D7FC 0 S:01FF P:EnvMXDIzc HC:66670 VC:000 FC:00 I:00
25D7FE 0 S:01FF P:EnvMXDIzc HC:66686 VC:000 FC:00 I:00
25D800 0 S:01FF P:EnvMXDIzc HC:66702 VC:000 FC:00 I:00
25D801 0 S:01FF P:EnvMXDIzc HC:66718 VC:000 FC:00 I:00
25D802 0 S:01FF P:EnvMXDIzc HC:66734 VC:000 FC:00 I:00
25D804 0 S:01FF P:EnvMXDIzc HC:66750 VC:000 FC:00 I:00
25D805 0 S:01FF P:EnvMXDIzc HC:66766 VC:000 FC:00 I:00
25D808 0 S:01FF P:EnvMXDIzc HC:66782 VC:000 FC:00 I:00
25D809 0 S:01FF P:EnvMXDIzc HC:66798 VC:000 FC:00 I:00
25D80B 0 S:01FF P:EnvMXDIzc HC:66814 VC:000 FC:00 I:00
25D80C 0 S:01FF P:EnvMXDIzc HC:66830 VC:000 FC:00 I:00
25D80F 0 S:01FF P:EnvMXDIzc HC:66846 VC:000 FC:00 I:00
25D811 0 S:01FF P:EnvMXDIzc HC:66862 VC:000 FC:00 I:00
25D812 0 S:01FF P:EnvMXDIzc HC:66878 VC:000 FC:00 I:00
25D815 0 S:01FF P:EnvMXDIzc HC:66894 VC:000 FC:00 I:00
25D817 0 S:01FF P:EnvMXDIzc HC:66910 VC:000 FC:00 I:00
25D819 0 S:01FF P:EnvMXDIzc HC:66926 VC:000 FC:00 I:00
25D81D 0 S:01FF P:EnvMXDIzc HC:66942 VC:000 FC:00 I:00
25D81F 0 S:01FF P:EnvMXDIzc HC:66958 VC:000 FC:00 I:00
25D821 0 S:01FF P:EnvMXDIzc HC:66974 VC:000 FC:00 I:00
25D825 0 S:01FF P:EnvMXDIzc HC:66990 VC:000 FC:00 I:00
25D826 0 S:01FF P:EnvMXDIzc HC:67006 VC:000 FC:00 I:00
25D828 0 S:01FF P:EnvMXDIzc HC:67022 VC:000 FC:00 I:00
25D835 0 S:01FF P:EnvMXDIzc HC:67118 VC:000 FC:00 I:00
25D837 0 S:01FF P:EnvMXDIzc HC:67134 VC:000 FC:00 I:00
25D839 0 S:01FF P:EnvMXDIzc HC:67150 VC:000 FC:00 I:00
25D83B 0 S:01FF P:EnvMXDIzc HC:67166 VC:000 FC:00 I:00
25D83D 0 S:01FF P:EnvMXDIzc HC:67182 VC:000 FC:00 I:00
25D840 0 S:01FF P:EnvMXDIzc HC:67198 VC:000 FC:00 I:00
25D842 0 S:01FF P:EnvMXDIzc HC:67214 VC:000 FC:00 I:00
25D844 0 S:01FF P:EnvMXDIzc HC:67230 VC:000 FC:00 I:00
25D847 0 S:01FF P:EnvMXDIzc HC:67246 VC:000 FC:00 I:00
25D849 0 S:01FF P:EnvMXDIzc HC:67262 VC:000 FC:00 I:00
25D84B 0 S:01FF P:EnvMXDIzc HC:67278 VC:000 FC:00 I:00
25D84F 0 S:01FF P:EnvMXDIzc HC:67294 VC:000 FC:00 I:00
25D851 0 S:01FF P:EnvMXDIzc HC:67310 VC:000 FC:00 I:00
25D855 0 S:01FF P:EnvMXDIzc HC:67326 VC:000 FC:00 I:00
25D856 0 S:01FF P:EnvMXDIzc HC:67342 VC:000 FC:00 I:00
25D858 0 S:01FF P:EnvMXDIzc HC:67358 VC:000 FC:00 I:00
25D85A 0 S:01FF P:EnvMXDIzc HC:67374 VC:000 FC:00 I:00
25D85C 0 S:01FF P:EnvMXDIzc HC:67390 VC:000 FC:00 I:00
25D85E 0 S:01FF P:EnvMXDIzc HC:67406 VC:000 FC:00 I:00
25D860 0 S:01FF P:EnvMXDIzc HC:67422 VC:000 FC:00 I:00
25D862 0 S:01FF P:EnvMXDIzc HC:67438 VC:000 FC:00 I:00
25D864 0 S:01FF P:EnvMXDIzc HC:67454 VC:000 FC:00 I:00
25D867 0 S:01FF P:EnvMXDIzc HC:67470 VC:000 FC:00 I:00
25D869 0 S:01FF P:EnvMXDIzc HC:67486 VC:000 FC:00 I:00
25D86A 0 S:01FF P:EnvMXDIzc HC:67502 VC:000 FC:00 I:00
25D86C 0 S:01FF P:EnvMXDIzc HC:67518 VC:000 FC:00 I:00
25D86E 0 S:01FF P:EnvMXDIzc HC:67534 VC:000 FC:00 I:00
25D86F 0 S:01FF P:EnvMXDIzc HC:67550 VC:000 FC:00 I:00
25D871 0 S:01FF P:EnvMXDIzc HC:67566 VC:000 FC:00 I:00
25D873 0 S:01FF P:EnvMXDIzc HC:67582 VC:000 FC:00 I:00
25D888 0 S:01FF P:EnvMXDIzc HC:67726 VC:000 FC:00 I:00
25D88A 0 S:01FF P:EnvMXDIzc HC:67742 VC:000 FC:00 I:00
25D88C 0 S:01FF P:EnvMXDIzc HC:67758 VC:000 FC:00 I:00
25D88E 0 S:01FF P:EnvMXDIzc HC:67774 VC:000 FC:00 I:00
25D890 0 S:01FF P:EnvMXDIzc HC:67790 VC:000 FC:00 I:00
25D892 0 S:01FF P:EnvMXDIzc HC:67806 VC:000 FC:00 I:00
25D895 0 S:01FF P:EnvMXDIzc HC:67822 VC:000 FC:00 I:00
25D897 0 S:01FF P:EnvMXDIzc HC:67838 VC:000 FC:00 I:00
25D899 0 S:01FF P:EnvMXDIzc HC:67854 VC:000 FC:00 I:00
25D89C 0 S:01FF P:EnvMXDIzc HC:67870 VC:000 FC:00 I:00
25D89E 0 S:01FF P:EnvMXDIzc HC:67886 VC:000 FC:00 I:00
25D8A0 0 S:01FF P:EnvMXDIzc HC:67902 VC:000 FC:00 I:00
25D8A4 0 S:01FF P:EnvMXDIzc HC:67918 VC:000 FC:00 I:00
25D8A6 0 S:01FF P:EnvMXDIzc HC:67934 VC:000 FC:00 I:00
25D8AA 0 S:01FF P:EnvMXDIzc HC:67950 VC:000 FC:00 I:00
25D8AB 0 S:01FF P:EnvMXDIzc HC:67966 VC:000 FC:00 I:00
25D8AD 0 S:01FF P:EnvMXDIzc HC:67982 VC:000 FC:00 I:00
25D8AF 0 S:01FF P:EnvMXDIzc HC:67998 VC:000 FC:00 I:00
25D8B1 0 S:01FF P:EnvMXDIzc HC:68014 VC:000 FC:00 I:00
25D8B3 0 S:01FF P:EnvMXDIzc HC:68030 VC:000 FC:00 I:00
25D8B5 0 S:01FF P:EnvMXDIzc HC:68046 VC:000 FC:00 I:00
25D8B7 0 S:01FF P:EnvMXDIzc HC:68062 VC:000 FC:00 I:00
25D8B9 0 S:01FF P:EnvMXDIzc HC:68078 VC:000 FC:00 I:00
25D8BB 0 S:01FF P:EnvMXDIzc HC:68094 VC:000 FC:00 I:00
25D8BD 0 S:01FF P:EnvMXDIzc HC:68110 VC:000 FC:00 I:00
25D8C0 0 S:01FF P:EnvMXDIzc HC:68126 VC:000 FC:00 I:00
25D8C2 0 S:01FF P:EnvMXDIzc HC:68142 VC:000 FC:00 I:00
25D8C3 0 S:01FF P:EnvMXDIzc HC:68158 VC:000 FC:00 I:00
25D8C5 0 S:01FF P:EnvMXDIzc HC:68174 VC:000 FC:00 I:00
25D8C7 0 S:01FF P:EnvMXDIzc HC:68190 VC:000 FC:00 I:00
25D8C8 0 S:01FF P:EnvMXDIzc HC:68206 VC:000 FC:00 I:00
25D8CA 0 S:01FF P:EnvMXDIzc HC:68222 VC:000 FC:00 I:00
25D8CC 0 S:01FF P:EnvMXDIzc HC:68238 VC:000 FC:00 I:00
25D8F1 0 S:01FF P:EnvMXDIzc HC:68510 VC:000 FC:00 I:00
25D8F3 0 S:01FF P:EnvMXDIzc HC:68526 VC:000 FC:00 I:00
25D8F5 0 S:01FF P:EnvMXDIzc HC:68542 VC:000 FC:00 I:00
25D8F7 0 S:01FF P:EnvMXDIzc HC:68558 VC:000 FC:00 I:00
25D8F9 0 S:01FF P:EnvMXDIzc HC:68574 VC:000 FC:00 I:00
25D8FC 0 S:01FF P:EnvMXDIzc HC:68590 VC:000 FC:00 I:00
25D8FE 0 S:01FF P:EnvMXDIzc HC:68606 VC:000 FC:00 I:00
25D900 0 S:01FF P:EnvMXDIzc HC:68622 VC:000 FC:00 I:00
25D903 0 S:01FF P:EnvMXDIzc HC:68638 VC:000 FC:00 I:00
25D905 0 S:01FF P:EnvMXDIzc HC:68654 VC:000 FC:00 I:00
25D907 0 S:01FF P:EnvMXDIzc HC:68670 VC:000 FC:00 I:00
25D90B 0 S:01FF P:EnvMXDIzc HC:68686 VC:000 FC:00 I:00
25D90D 0 S:01FF P:EnvMXDIzc HC:68702 VC:000 FC:00 I:00
25D911 0 S:01FF P:EnvMXDIzc HC:68718 VC:000 FC:00 I:00
25D912 0 S:01FF P:EnvMXDIzc HC:68734 VC:000 FC:00 I:00
25D914 0 S:01FF P:EnvMXDIzc HC:68750 VC:000 FC:00 I:00
25D916 0 S:01FF P:EnvMXDIzc HC:68766 VC:000 FC:00 I:00
25D918 0 S:01FF P:EnvMXDIzc HC:68782 VC:000 FC:00 I:00
25D91A 0 S:01FF P:EnvMXDIzc HC:68798 VC:000 FC:00 I:00
25D91C 0 S:01FF P:EnvMXDIzc HC:68814 VC:000 FC:00 I:00
25D91E 0 S:01FF P:EnvMXDIzc HC:68830 VC:000 FC:00 I:00
25D920 0 S:01FF P:EnvMXDIzc HC:68846 VC:000 FC:00 I:00
25D922 0 S:01FF P:EnvMXDIzc HC:68862 VC:000 FC:00 I:00
25D924 0 S:01FF P:EnvMXDIzc HC:68878 VC:000 FC:00 I:00
25D926 0 S:01FF P:EnvMXDIzc HC:68894 VC:000 FC:00 I:00
25D928 0 S:01FF P:EnvMXDIzc HC:68910 VC:000 FC:00 I:00
25D92B 0 S:01FF P:EnvMXDIzc HC:68926 VC:000 FC:00 I:00
25D92D 0 S:01FF P:EnvMXDIzc HC:68942 VC:000 FC:00 I:00
25D92E 0 S:01FF P:EnvMXDIzc HC:68958 VC:000 FC:00 I:00
25D930 0 S:01FF P:EnvMXDIzc HC:68974 VC:000 FC:00 I:00
25D932 0 S:01FF P:EnvMXDIzc HC:68990 VC:000 FC:00 I:00
25D933 0 S:01FF P:EnvMXDIzc HC:69006 VC:000 FC:00 I:00
25D935 0 S:01FF P:EnvMXDIzc HC:69022 VC:000 FC:00 I:00
25D937 0 S:01FF P:EnvMXDIzc HC:69038 VC:000 FC:00 I:00
25D938 0 S:01FF P:EnvMXDIzc HC:69054 VC:000 FC:00 I:00
25D93B 0 S:01FF P:EnvMXDIzc HC:69070 VC:000 FC:00 I:00
25D93D 0 S:01FF P:EnvMXDIzc HC:69086 VC:000 FC:00 I:00
25D93E 0 S:01FF P:EnvMXDIzc HC:69102 VC:000 FC:00 I:00
25D941 0 S:01FF P:EnvMXDIzc HC:69118 VC:000 FC:00 I:00
25D943 0 S:01FF P:EnvMXDIzc HC:69134 VC:000 FC:00 I:00
25D945 0 S:01FF P:EnvMXDIzc HC:69150 VC:000 FC:00 I:00
25D946 0 S:01FF P:EnvMXDIzc HC:69166 VC:000 FC:00 I:00
25D947 0 S:01FF P:EnvMXDIzc HC:69182 VC:000 FC:00 I:00
25D949 0 S:01FF P:EnvMXDIzc HC:69198 VC:000 FC:00 I:00
25D94A 0 S:01FF P:EnvMXDIzc HC:69214 VC:000 FC:00 I:00
25D94C 0 S:01FF P:EnvMXDIzc HC:69230 VC:000 FC:00 I:00
25D94E 0 S:01FF P:EnvMXDIzc HC:69246 VC:000 FC:00 I:00
25D950 0 S:01FF P:EnvMXDIzc HC:69262 VC:000 FC:00 I:00
25D952 0 S:01FF P:EnvMXDIzc HC:69278 VC:000 FC:00 I:00
25D954 0 S:01FF P:EnvMXDIzc HC:69294 VC:000 FC:00 I:00
25D955 0 S:01FF P:EnvMXDIzc HC:69310 VC:000 FC:00 I:00
25D956 0 S:01FF P:EnvMXDIzc HC:69326 VC:000 FC:00 I:00
25D958 0 S:01FF P:EnvMXDIzc HC:69342 VC:000 FC:00 I:00
25D95A 0 S:01FF P:EnvMXDIzc HC:69358 VC:000 FC:00 I:00
25D95C 0 S:01FF P:EnvMXDIzc HC:69374 VC:000 FC:00 I:00
25D95D 0 S:01FF P:EnvMXDIzc HC:69390 VC:000 FC:00 I:00
25D95F 0 S:01FF P:EnvMXDIzc HC:69406 VC:000 FC:00 I:00
25D961 0 S:01FF P:EnvMXDIzc HC:69422 VC:000 FC:00 I:00
25D963 0 S:01FF P:EnvMXDIzc HC:69438 VC:000 FC:00 I:00
25D965 0 S:01FF P:EnvMXDIzc HC:69454 VC:000 FC:00 I:00
25D967 0 S:01FF P:EnvMXDIzc HC:69470 VC:000 FC:00 I:00
25D968 0 S:01FF P:EnvMXDIzc HC:69486 VC:000 FC:00 I:00
25D969 0 S:01FF P:EnvMXDIzc HC:69502 VC:000 FC:00 I:00
25D96B 0 S:01FF P:EnvMXDIzc HC:69518 VC:000 FC:00 I:00
25D96C 0 S:01FF P:EnvMXDIzc HC:69534 VC:000 FC:00 I:00
25D96F 0 S:01FF P:EnvMXDIzc HC:69550 VC:000 FC:00 I:00
25D970 0 S:01FF P:EnvMXDIzc HC:69566 VC:000 FC:00 I:00
25D972 0 S:01FF P:EnvMXDIzc HC:69582 VC:000 FC:00 I:00
25D973 0 S:01FF P:EnvMXDIzc HC:69598 VC:000 FC:00 I:00
25D976 0 S:01FF P:EnvMXDIzc HC:69614 VC:000 FC:00 I:00
25D979 0 S:01FF P:EnvMXDIzc HC:69630 VC:000 FC:00 I:00
25D97B 0 S:01FF P:EnvMXDIzc HC:69646 VC:000 FC:00 I:00
25D97D 0 S:01FF P:EnvMXDIzc HC:69662 VC:000 FC:00 I:00
25D97F 0 S:01FF P:EnvMXDIzc HC:69678 VC:000 FC:00 I:00
25D982 0 S:01FF P:EnvMXDIzc HC:69694 VC:000 FC:00 I:00
25D984 0 S:01FF P:EnvMXDIzc HC:69710 VC:000 FC:00 I:00
25D986 0 S:01FF P:EnvMXDIzc HC:69726 VC:000 FC:00 I:00
25D988 0 S:01FF P:EnvMXDIzc HC:69742 VC:000 FC:00 I:00
25D98B 0 S:01FF P:EnvMXDIzc HC:69758 VC:000 FC:00 I:00
25D98E 0 S:01FF P:EnvMXDIzc HC:69774 VC:000 FC:00 I:00
25D990 0 S:01FF P:EnvMXDIzc HC:69790 VC:000 FC:00 I:00
25D992 0 S:01FF P:EnvMXDIzc HC:69806 VC:000 FC:00 I:00
25D994 0 S:01FF P:EnvMXDIzc HC:69822 VC:000 FC:00 I:00
25D996 0 S:01FF P:EnvMXDIzc HC:69838 VC:000 FC:00 I:00
25D998 0 S:01FF P:EnvMXDIzc HC:69854 VC:000 FC:00 I:00
25D999 0 S:01FF P:EnvMXDIzc HC:69870 VC:000 FC:00 I:00
25D99B 0 S:01FF P:EnvMXDIzc HC:69886 VC:000 FC:00 I:00
25D99D 0 S:01FF P:EnvMXDIzc HC:69902 VC:000 FC:00 I:00
25D99E 0 S:01FF P:EnvMXDIzc HC:69918 VC:000 FC:00 I:00
25D9A0 0 S:01FF P:EnvMXDIzc HC:69934 VC:000 FC:00 I:00
25D9A2 0 S:01FF P:EnvMXDIzc HC:69950 VC:000 FC:00 I:00
25D9A4 0 S:01FF P:EnvMXDIzc HC:69966 VC:000 FC:00 I:00
25D9A6 0 S:01FF P:EnvMXDIzc HC:69982 VC:000 FC:00 I:00
25D9A8 0 S:01FF P:EnvMXDIzc HC:69998 VC:000 FC:00 I:00
25D9AA 0 S:01FF P:EnvMXDIzc HC:70014 VC:000 FC:00 I:00
25D9AC 0 S:01FF P:EnvMXDIzc HC:70030 VC:000 FC:00 I:00
25D9AE 0 S:01FF P:EnvMXDIzc HC:70046 VC:000 FC:00 I:00
25D9AF 0 S:01FF P:EnvMXDIzc HC:70062 VC:000 FC:00 I:00
25D9B0 0 S:01FF P:EnvMXDIzc HC:70078 VC:000 FC:00 I:00
25D9B2 0 S:01FF P:EnvMXDIzc HC:70094 VC:000 FC:00 I:00
25D9B4 0 S:01FF P:EnvMXDIzc HC:70110 VC:000 FC:00 I:00
25D9B6 0 S:01FF P:EnvMXDIzc HC:70126 VC:000 FC:00 I:00
25D9B8 0 S:01FF P:EnvMXDIzc HC:70142 VC:000 FC:00 I:00
25D9B9 0 S:01FF P:EnvMXDIzc HC:70158 VC:000 FC:00 I:00
25D9BB 0 S:01FF P:EnvMXDIzc HC:70174 VC:000 FC:00 I:00
25D9BD 0 S:01FF P:EnvMXDIzc HC:70190 VC:000 FC:00 I:00
25D9BF 0 S:01FF P:EnvMXDIzc HC:70206 VC:000 FC:00 I:00
25D9C1 0 S:01FF P:EnvMXDIzc HC:70222 VC:000 FC:00 I:00
25D9C3 0 S:01FF P:EnvMXDIzc HC:70238 VC:000 FC:00 I:00
25D9C5 0 S:01FF P:EnvMXDIzc HC:70254 VC:000 FC:00 I:00
25D9C7 0 S:01FF P:EnvMXDIzc HC:70270 VC:000 FC:00 I:00
25D9C8 0 S:01FF P:EnvMXDIzc HC:70286 VC:000 FC:00 I:00
25D9C9 0 S:01FF P:EnvMXDIzc HC:70302 VC:000 FC:00 I:00
25D9CB 0 S:01FF P:EnvMXDIzc HC:70318 VC:000 FC:00 I:00
25D9CD 0 S:01FF P:EnvMXDIzc HC:70334 VC:000 FC:00 I:00
25D9CE 0 S:01FF P:EnvMXDIzc HC:70350 VC:000 FC:00 I:00
25D9D1 0 S:01FF P:EnvMXDIzc HC:70366 VC:000 FC:00 I:00
25D9D3 0 S:01FF P:EnvMXDIzc HC:70382 VC:000 FC:00 I:00
25D9D5 0 S:01FF P:EnvMXDIzc HC:70398 VC:000 FC:00 I:00
25D9D6 0 S:01FF P:EnvMXDIzc HC:70414 VC:000 FC:00 I:00
25D9D9 0 S:01FF P:EnvMXDIzc HC:70430 VC:000 FC:00 I:00
25D9DC 0 S:01FF P:EnvMXDIzc HC:70446 VC:000 FC:00 I:00
25D9DE 0 S:01FF P:EnvMXDIzc HC:70462 VC:000 FC:00 I:00
25D9E0 0 S:01FF P:EnvMXDIzc HC:70478 VC:000 FC:00 I:00
25D9E2 0 S:01FF P:EnvMXDIzc HC:70494 VC:000 FC:00 I:00
25D9E5 0 S:01FF P:EnvMXDIzc HC:70510 VC:000 FC:00 I:00
25D9E7 0 S:01FF P:EnvMXDIzc HC:70526 VC:000 FC:00 I:00
25D9E9 0 S:01FF P:EnvMXDIzc HC:70542 VC:000 FC:00 I:00
25D9EB 0 S:01FF P:EnvMXDIzc HC:70558 VC:000 FC:00 I:00
25D9ED 0 S:01FF P:EnvMXDIzc HC:70574 VC:000 FC:00 I:00
25D9F0 0 S:01FF P:EnvMXDIzc HC:70590 VC:000 FC:00 I:00
25D9F2 0 S:01FF P:EnvMXDIzc HC:70606 VC:000 FC:00 I:00
25D9F4 0 S:01FF P:EnvMXDIzc HC:70622 VC:000 FC:00 I:00
25D9F6 0 S:01FF P:EnvMXDIzc HC:70638 VC:000 FC:00 I:00
25D9F8 0 S:01FF P:EnvMXDIzc HC:70654 VC:000 FC:00 I:00
25D9FA 0 S:01FF P:EnvMXDIzc HC:70670 VC:000 FC:00 I:00
25D9FB 0 S:01FF P:EnvMXDIzc HC:70686 VC:000 FC:00 I:00
25D9FD 0 S:01FF P:EnvMXDIzc HC:70702 VC:000 FC:00 I:00
25D9FF 0 S:01FF P:EnvMXDIzc HC:70718 VC:000 FC:00 I:00
25DA02 0 S:01FF P:EnvMXDIzc HC:70734 VC:000 FC:00 I:00
25DA04 0 S:01FF P:EnvMXDIzc HC:70750 VC:000 FC:00 I:00
25DA06 0 S:01FF P:EnvMXDIzc HC:70766 VC:000 FC:00 I:00
25DA08 0 S:01FF P:EnvMXDIzc HC:70782 VC:000 FC:00 I:00
25DA0A 0 S:01FF P:EnvMXDIzc HC:70798 VC:000 FC:00 I:00
25DA0D 0 S:01FF P:EnvMXDIzc HC:70814 VC:000 FC:00 I:00
25DA0E 0 S:01FF P:EnvMXDIzc HC:70830 VC:000 FC:00 I:00
25DA0F 0 S:01FF P:EnvMXDIzc HC:70846 VC:000 FC:00 I:00
25DA10 0 S:01FF P:EnvMXDIzc HC:70862 VC:000 FC:00 I:00
25DA12 0 S:01FF P:EnvMXDIzc HC:70878 VC:000 FC:00 I:00
25DA14 0 S:01FF P:EnvMXDIzc HC:70894 VC:000 FC:00 I:00
25DA16 0 S:01FF P:EnvMXDIzc HC:70910 VC:000 FC:00 I:00
25DA18 0 S:01FF P:EnvMXDIzc HC:70926 VC:000 FC:00 I:00
25DA1A 0 S:01FF P:EnvMXDIzc HC:70942 VC:000 FC:00 I:00
25DA1B 0 S:01FF P:EnvMXDIzc HC:70958 VC:000 FC:00 I:00
25DA1D 0 S:01FF P:EnvMXDIzc HC:70974 VC:000 FC:00 I:00
25DA1F 0 S:01FF P:EnvMXDIzc HC:70990 VC:000 FC:00 I:00
25DA21 0 S:01FF P:EnvMXDIzc HC:71006 VC:000 FC:00 I:00
25DA23 0 S:01FF P:EnvMXDIzc HC:71022 VC:000 FC:00 I:00
25DA25 0 S:01FF P:EnvMXDIzc HC:71038 VC:000 FC:00 I:00
25DA26 0 S:01FF P:EnvMXDIzc HC:71054 VC:000 FC:00 I:00
25DA27 0 S:01FF P:EnvMXDIzc HC:71070 VC:000 FC:00 I:00
25DA28 0 S:01FF P:EnvMXDIzc HC:71086 VC:000 FC:00 I:00
25DA2A 0 S:01FF P:EnvMXDIzc HC:71102 VC:000 FC:00 I:00
25DA2C 0 S:01FF P:EnvMXDIzc HC:71118 VC:000 FC:00 I:00
25DA2D 0 S:01FF P:EnvMXDIzc HC:71134 VC:000 FC:00 I:00
25DA30 0 S:01FF P:EnvMXDIzc HC:71150 VC:000 FC:00 I:00
25DA32 0 S:01FF P:EnvMXDIzc HC:71166 VC:000 FC:00 I:00
25DA34 0 S:01FF P:EnvMXDIzc HC:71182 VC:000 FC:00 I:00
25DA35 0 S:01FF P:EnvMXDIzc HC:71198 VC:000 FC:00 I:00
25DA38 0 S:01FF P:EnvMXDIzc HC:71214 VC:000 FC:00 I:00
25DA3B 0 S:01FF P:EnvMXDIzc HC:71230 VC:000 FC:00 I:00
25DA3D 0 S:01FF P:EnvMXDIzc HC:71246 VC:000 FC:00 I:00
25DA3F 0 S:01FF P:EnvMXDIzc HC:71262 VC:000 FC:00 I:00
25DA41 0 S:01FF P:EnvMXDIzc HC:71278 VC:000 FC:00 I:00
25DA44 0 S:01FF P:EnvMXDIzc HC:71294 VC:000 FC:00 I:00
25DA46 0 S:01FF P:EnvMXDIzc HC:71310 VC:000 FC:00 I:00
25DA48 0 S:01FF P:EnvMXDIzc HC:71326 VC:000 FC:00 I:00
25DA4A 0 S:01FF P:EnvMXDIzc HC:71342 VC:000 FC:00 I:00
25DA4C 0 S:01FF P:EnvMXDIzc HC:71358 VC:000 FC:00 I:00
25DA4F 0 S:01FF P:EnvMXDIzc HC:71374 VC:000 FC:00 I:00
25DA51 0 S:01FF P:EnvMXDIzc HC:71390 VC:000 FC:00 I:00
25DA53 0 S:01FF P:EnvMXDIzc HC:71406 VC:000 FC:00 I:00
25DA55 0 S:01FF P:EnvMXDIzc HC:71422 VC:000 FC:00 I:00
25DA57 0 S:01FF P:EnvMXDIzc HC:71438 VC:000 FC:00 I:00
25DA59 0 S:01FF P:EnvMXDIzc HC:71454 VC:000 FC:00 I:00
25DA5A 0 S:01FF P:EnvMXDIzc HC:71470 VC:000 FC:00 I:00
25DA5C 0 S:01FF P:EnvMXDIzc HC:71486 VC:000 FC:00 I:00
25DA5E 0 S:01FF P:EnvMXDIzc HC:71502 VC:000 FC:00 I:00
25DA61 0 S:01FF P:EnvMXDIzc HC:71518 VC:000 FC:00 I:00
25DA63 0 S:01FF P:EnvMXDIzc HC:71534 VC:000 FC:00 I:00
25DA65 0 S:01FF P:EnvMXDIzc HC:71550 VC:000 FC:00 I:00
25DA67 0 S:01FF P:EnvMXDIzc HC:71566 VC:000 FC:00 I:00
25DA69 0 S:01FF P:EnvMXDIzc HC:71582 VC:000 FC:00 I:00
25DA6C 0 S:01FF P:EnvMXDIzc HC:71598 VC:000 FC:00 I:00
25DA6D 0 S:01FF P:EnvMXDIzc HC:71614 VC:000 FC:00 I:00
25DA6F 0 S:01FF P:EnvMXDIzc HC:71630 VC:000 FC:00 I:00
25DA70 0 S:01FF P:EnvMXDIzc HC:71646 VC:000 FC:00 I:00
25DA72 0 S:01FF P:EnvMXDIzc HC:71662 VC:000 FC:00 I:00
25DA74 0 S:01FF P:EnvMXDIzc HC:71678 VC:000 FC:00 I:00
25DA76 0 S:01FF P:EnvMXDIzc HC:71694 VC:000 FC:00 I:00
25DA78 0 S:01FF P:EnvMXDIzc HC:71710 VC:000 FC:00 I:00
25DA7A 0 S:01FF P:EnvMXDIzc HC:71726 VC:000 FC:00 I:00
25DA7B 0 S:01FF P:EnvMXDIzc HC:71742 VC:000 FC:00 I:00
25DA7D 0 S:01FF P:EnvMXDIzc HC:71758 VC:000 FC:00 I:00
25DA7F 0 S:01FF P:EnvMXDIzc HC:71774 VC:000 FC:00 I:00
25DA81 0 S:01FF P:EnvMXDIzc HC:71790 VC:000 FC:00 I:00
25DA83 0 S:01FF P:EnvMXDIzc HC:71806 VC:000 FC:00 I:00
25DA85 0 S:01FF P:EnvMXDIzc HC:71822 VC:000 FC:00 I:00
25DA86 0 S:01FF P:EnvMXDIzc HC:71838 VC:000 FC:00 I:00
25DA87 0 S:01FF P:EnvMXDIzc HC:71854 VC:000 FC:00 I:00
25DA88 0 S:01FF P:EnvMXDIzc HC:71870 VC:000 FC:00 I:00
25DA89 0 S:01FF P:EnvMXDIzc HC:71886 VC:000 FC:00 I:00
25DA8B 0 S:01FF P:EnvMXDIzc HC:71902 VC:000 FC:00 I:00
25DA8D 0 S:01FF P:EnvMXDIzc HC:71918 VC:000 FC:00 I:00
25DA8E 0 S:01FF P:EnvMXDIzc HC:71934 VC:000 FC:00 I:00
25DA91 0 S:01FF P:EnvMXDIzc HC:71950 VC:000 FC:00 I:00
25DA93 0 S:01FF P:EnvMXDIzc HC:71966 VC:000 FC:00 I:00
25DA95 0 S:01FF P:EnvMXDIzc HC:71982 VC:000 FC:00 I:00
25DA96 0 S:01FF P:EnvMXDIzc HC:71998 VC:000 FC:00 I:00
25DA99 0 S:01FF P:EnvMXDIzc HC:72014 VC:000 FC:00 I:00
25DA9C 0 S:01FF P:EnvMXDIzc HC:72030 VC:000 FC:00 I:00
25DA9E 0 S:01FF P:EnvMXDIzc HC:72046 VC:000 FC:00 I:00
25DAA0 0 S:01FF P:EnvMXDIzc HC:72062 VC:000 FC:00 I:00
25DAA2 0 S:01FF P:EnvMXDIzc HC:72078 VC:000 FC:00 I:00
25DAA5 0 S:01FF P:EnvMXDIzc HC:72094 VC:000 FC:00 I:00
25DAA7 0 S:01FF P:EnvMXDIzc HC:72110 VC:000 FC:00 I:00
25DAA9 0 S:01FF P:EnvMXDIzc HC:72126 VC:000 FC:00 I:00
25DAAB 0 S:01FF P:EnvMXDIzc HC:72142 VC:000 FC:00 I:00
25DAAD 0 S:01FF P:EnvMXDIzc HC:72158 VC:000 FC:00 I:00
25DAB0 0 S:01FF P:EnvMXDIzc HC:72174 VC:000 FC:00 I:00
25DAB2 0 S:01FF P:EnvMXDIzc HC:72190 VC:000 FC:00 I:00
25DAB4 0 S:01FF P:EnvMXDIzc HC:72206 VC:000 FC:00 I:00
25DAB6 0 S:01FF P:EnvMXDIzc HC:72222 VC:000 FC:00 I:00
25DAB8 0 S:01FF P:EnvMXDIzc HC:72238 VC:000 FC:00 I:00
25DABA 0 S:01FF P:EnvMXDIzc HC:72254 VC:000 FC:00 I:00
25DABB 0 S:01FF P:EnvMXDIzc HC:72270 VC:000 FC:00 I:00
25DABD 0 S:01FF P:EnvMXDIzc HC:72286 VC:000 FC:00 I:00
25DABF 0 S:01FF P:EnvMXDIzc HC:72302 VC:000 FC:00 I:00
25DAC2 0 S:01FF P:EnvMXDIzc HC:72318 VC:000 FC:00 I:00
25DAC4 0 S:01FF P:EnvMXDIzc HC:72334 VC:000 FC:00 I:00
25DAC6 0 S:01FF P:EnvMXDIzc HC:72350 VC:000 FC:00 I:00
25DAC8 0 S:01FF P:EnvMXDIzc HC:72366 VC:000 FC:00 I:00
25DACA 0 S:01FF P:EnvMXDIzc HC:72382 VC:000 FC:00 I:00
25DACD 0 S:01FF P:EnvMXDIzc HC:72398 VC:000 FC:00 I:00
25DACE 0 S:01FF P:EnvMXDIzc HC:72414 VC:000 FC:00 I:00
25DAD0 0 S:01FF P:EnvMXDIzc HC:72430 VC:000 FC:00 I:00
25DAD1 0 S:01FF P:EnvMXDIzc HC:72446 VC:000 FC:00 I:00
25DAD3 0 S:01FF P:EnvMXDIzc HC:72462 VC:000 FC:00 I:00
25DAD5 0 S:01FF P:EnvMXDIzc HC:72478 VC:000 FC:00 I:00
25DAD7 0 S:01FF P:EnvMXDIzc HC:72494 VC:000 FC:00 I:00
25DAD9 0 S:01FF P:EnvMXDIzc HC:72510 VC:000 FC:00 I:00
25DADB 0 S:01FF P:EnvMXDIzc HC:72526 VC:000 FC:00 I:00
25DADC 0 S:01FF P:EnvMXDIzc HC:72542 VC:000 FC:00 I:00
25DADE 0 S:01FF P:EnvMXDIzc HC:72558 VC:000 FC:00 I:00
25DAE0 0 S:01FF P:EnvMXDIzc HC:72574 VC:000 FC:00 I:00
25DAE2 0 S:01FF P:EnvMXDIzc HC:72590 VC:000 FC:00 I:00
25DAE4 0 S:01FF P:EnvMXDIzc HC:72606 VC:000 FC:00 I:00
25DAE6 0 S:01FF P:EnvMXDIzc HC:72622 VC:000 FC:00 I:00
25DAE7 0 S:01FF P:EnvMXDIzc HC:72638 VC:000 FC:00 I:00
25DAE8 0 S:01FF P:EnvMXDIzc HC:72654 VC:000 FC:00 I:00
25DAEA 0 S:01FF P:EnvMXDIzc HC:72670 VC:000 FC:00 I:00
25DAEC 0 S:01FF P:EnvMXDIzc HC:72686 VC:000 FC:00 I:00
25DAEE 0 S:01FF P:EnvMXDIzc HC:72702 VC:000 FC:00 I:00
25DAEF 0 S:01FF P:EnvMXDIzc HC:72718 VC:000 FC:00 I:00
25DAF2 0 S:01FF P:EnvMXDIzc HC:72734 VC:000 FC:00 I:00
25DAF4 0 S:01FF P:EnvMXDIzc HC:72750 VC:000 FC:00 I:00
25DAF6 0 S:01FF P:EnvMXDIzc HC:72766 VC:000 FC:00 I:00
25DAF7 0 S:01FF P:EnvMXDIzc HC:72782 VC:000 FC:00 I:00
25DAFA 0 S:01FF P:EnvMXDIzc HC:72798 VC:000 FC:00 I:00
25DAFC 0 S:01FF P:EnvMXDIzc HC:72814 VC:000 FC:00 I:00
25DAFD 0 S:01FF P:EnvMXDIzc HC:72830 VC:000 FC:00 I:00
25DB00 0 S:01FF P:EnvMXDIzc HC:72846 VC:000 FC:00 I:00
25DB02 0 S:01FF P:EnvMXDIzc HC:72862 VC:000 FC:00 I:00
25DB04 0 S:01FF P:EnvMXDIzc HC:72878 VC:000 FC:00 I:00
25DB08 0 S:01FF P:EnvMXDIzc HC:72894 VC:000 FC:00 I:00
25DB09 0 S:01FF P:EnvMXDIzc HC:72910 VC:000 FC:00 I:00
25DB0B 0 S:01FF P:EnvMXDIzc HC:72926 VC:000 FC:00 I:00
25DB0D 0 S:01FF P:EnvMXDIzc HC:72942 VC:000 FC:00 I:00
25DB11 0 S:01FF P:EnvMXDIzc HC:72958 VC:000 FC:00 I:00
25DB12 0 S:01FF P:EnvMXDIzc HC:72974 VC:000 FC:00 I:00
25DB14 0 S:01FF P:EnvMXDIzc HC:72990 VC:000 FC:00 I:00
25DB16 0 S:01FF P:EnvMXDIzc HC:73006 VC:000 FC:00 I:00
25DB18 0 S:01FF P:EnvMXDIzc HC:73022 VC:000 FC:00 I:00
25DB19 0 S:01FF P:EnvMXDIzc HC:73038 VC:000 FC:00 I:00
25DB1C 0 S:01FF P:EnvMXDIzc HC:73054 VC:000 FC:00 I:00
25DB1E 0 S:01FF P:EnvMXDIzc HC:73070 VC:000 FC:00 I:00
25DB1F 0 S:01FF P:EnvMXDIzc HC:73086 VC:000 FC:00 I:00
25DB22 0 S:01FF P:EnvMXDIzc HC:73102 VC:000 FC:00 I:00
25DB24 0 S:01FF P:EnvMXDIzc HC:73118 VC:000 FC:00 I:00
25DB26 0 S:01FF P:EnvMXDIzc HC:73134 VC:000 FC:00 I:00
25DB29 0 S:01FF P:EnvMXDIzc HC:73150 VC:000 FC:00 I:00
25DB2B 0 S:01FF P:EnvMXDIzc HC:73166 VC:000 FC:00 I:00
25DB2D 0 S:01FF P:EnvMXDIzc HC:73182 VC:000 FC:00 I:00
25DB2E 0 S:01FF P:EnvMXDIzc HC:73198 VC:000 FC:00 I:00
25DB2F 0 S:01FF P:EnvMXDIzc HC:73214 VC:000 FC:00 I:00
25DB31 0 S:01FF P:EnvMXDIzc HC:73230 VC:000 FC:00 I:00
25DB32 0 S:01FF P:EnvMXDIzc HC:73246 VC:000 FC:00 I:00
25DB34 0 S:01FF P:EnvMXDIzc HC:73262 VC:000 FC:00 I:00
25DB36 0 S:01FF P:EnvMXDIzc HC:73278 VC:000 FC:00 I:00
25DB38 0 S:01FF P:EnvMXDIzc HC:73294 VC:000 FC:00 I:00
25DB39 0 S:01FF P:EnvMXDIzc HC:73310 VC:000 FC:00 I:00
25DB3B 0 S:01FF P:EnvMXDIzc HC:73326 VC:000 FC:00 I:00
25DB43 0 S:01FF P:EnvMXDIzc HC:73390 VC:000 FC:00 I:00
25DB44 0 S:01FF P:EnvMXDIzc HC:73406 VC:000 FC:00 I:00
25DB45 0 S:01FF P:EnvMXDIzc HC:73422 VC:000 FC:00 I:00
25DB47 0 S:01FF P:EnvMXDIzc HC:73438 VC:000 FC:00 I:00
25DB48 0 S:01FF P:EnvMXDIzc HC:73454 VC:000 FC:00 I:00
25DB49 0 S:01FF P:EnvMXDIzc HC:73470 VC:000 FC:00 I:00
25DB4A 0 S:01FF P:EnvMXDIzc HC:73486 VC:000 FC:00 I:00
25DB4B 0 S:01FF P:EnvMXDIzc HC:73502 VC:000 FC:00 I:00
25DB4C 0 S:01FF P:EnvMXDIzc HC:73518 VC:000 FC:00 I:00
25DB4D 0 S:01FF P:EnvMXDIzc HC:73534 VC:000 FC:00 I:00
25DB4F 0 S:01FF P:EnvMXDIzc HC:73550 VC:000 FC:00 I:00
25DB51 0 S:01FF P:EnvMXDIzc HC:73566 VC:000 FC:00 I:00
25DB54 0 S:01FF P:EnvMXDIzc HC:73582 VC:000 FC:00 I:00
25DB58 0 S:01FF P:EnvMXDIzc HC:73598 VC:000 FC:00 I:00
25DB5A 0 S:01FF P:EnvMXDIzc HC:73614 VC:000 FC:00 I:00
25DB5E 0 S:01FF P:EnvMXDIzc HC:73630 VC:000 FC:00 I:00
25DB60 0 S:01FF P:EnvMXDIzc HC:73646 VC:000 FC:00 I:00
25DB62 0 S:01FF P:EnvMXDIzc HC:73662 VC:000 FC:00 I:00
25DB63 0 S:01FF P:EnvMXDIzc HC:73678 VC:000 FC:00 I:00
25DB65 0 S:01FF P:EnvMXDIzc HC:73694 VC:000 FC:00 I:00
25DB69 0 S:01FF P:EnvMXDIzc HC:73726 VC:000 FC:00 I:00
25DB6B 0 S:01FF P:EnvMXDIzc HC:73742 VC:000 FC:00 I:00
25DB6E 0 S:01FF P:EnvMXDIzc HC:73758 VC:000 FC:00 I:00
25DB70 0 S:01FF P:EnvMXDIzc HC:73774 VC:000 FC:00 I:00
25DB72 0 S:01FF P:EnvMXDIzc HC:73790 VC:000 FC:00 I:00
25DB75 0 S:01FF P:EnvMXDIzc HC:73806 VC:000 FC:00 I:00
25DB79 0 S:01FF P:EnvMXDIzc HC:73822 VC:000 FC:00 I:00
25DB7B 0 S:01FF P:EnvMXDIzc HC:73838 VC:000 FC:00 I:00
25DB7C 0 S:01FF P:EnvMXDIzc HC:73854 VC:000 FC:00 I:00
25DB7D 0 S:01FF P:EnvMXDIzc HC:73870 VC:000 FC:00 I:00
25DB7F 0 S:01FF P:EnvMXDIzc HC:73886 VC:000 FC:00 I:00
25DB80 0 S:01FF P:EnvMXDIzc HC:73902 VC:000 FC:00 I:00
25DB82 0 S:01FF P:EnvMXDIzc HC:73918 VC:000 FC:00 I:00
25DB84 0 S:01FF P:EnvMXDIzc HC:73934 VC:000 FC:00 I:00
25DB86 0 S:01FF P:EnvMXDIzc HC:73950 VC:000 FC:00 I:00
25DB88 0 S:01FF P:EnvMXDIzc HC:73966 VC:000 FC:00 I:00
25DB8A 0 S:01FF P:EnvMXDIzc HC:73982 VC:000 FC:00 I:00
25DB8B 0 S:01FF P:EnvMXDIzc HC:73998 VC:000 FC:00 I:00
25DB8E 0 S:01FF P:EnvMXDIzc HC:74014 VC:000 FC:00 I:00
25DB90 0 S:01FF P:EnvMXDIzc HC:74030 VC:000 FC:00 I:00
25DB91 0 S:01FF P:EnvMXDIzc HC:74046 VC:000 FC:00 I:00
25DB94 0 S:01FF P:EnvMXDIzc HC:74062 VC:000 FC:00 I:00
25DB96 0 S:01FF P:EnvMXDIzc HC:74078 VC:000 FC:00 I:00
25DB98 0 S:01FF P:EnvMXDIzc HC:74094 VC:000 FC:00 I:00
25DB9C 0 S:01FF P:EnvMXDIzc HC:74110 VC:000 FC:00 I:00
25DB9D 0 S:01FF P:EnvMXDIzc HC:74126 VC:000 FC:00 I:00
25DB9F 0 S:01FF P:EnvMXDIzc HC:74142 VC:000 FC:00 I:00
25DBA0 0 S:01FF P:EnvMXDIzc HC:74158 VC:000 FC:00 I:00
25DBA2 0 S:01FF P:EnvMXDIzc HC:74174 VC:000 FC:00 I:00
25DBA4 0 S:01FF P:EnvMXDIzc HC:74190 VC:000 FC:00 I:00
25DBA6 0 S:01FF P:EnvMXDIzc HC:74206 VC:000 FC:00 I:00
25DBA8 0 S:01FF P:EnvMXDIzc HC:74222 VC:000 FC:00 I:00
25DBAB 0 S:01FF P:EnvMXDIzc HC:74238 VC:000 FC:00 I:00
25DBAC 0 S:01FF P:EnvMXDIzc HC:74254 VC:000 FC:00 I:00
25DBAD 0 S:01FF P:EnvMXDIzc HC:74270 VC:000 FC:00 I:00
25DBAF 0 S:01FF P:EnvMXDIzc HC:74286 VC:000 FC:00 I:00
25DBB0 0 S:01FF P:EnvMXDIzc HC:74302 VC:000 FC:00 I:00
25DBB1 0 S:01FF P:EnvMXDIzc HC:74318 VC:000 FC:00 I:00
25DBB2 0 S:01FF P:EnvMXDIzc HC:74334 VC:000 FC:00 I:00
25DBB3 0 S:01FF P:EnvMXDIzc HC:74350 VC:000 FC:00 I:00
25DBB5 0 S:01FF P:EnvMXDIzc HC:74366 VC:000 FC:00 I:00
25DBB8 0 S:01FF P:EnvMXDIzc HC:74382 VC:000 FC:00 I:00
25DBBA 0 S:01FF P:EnvMXDIzc HC:74398 VC:000 FC:00 I:00
25DBBC 0 S:01FF P:EnvMXDIzc HC:74414 VC:000 FC:00 I:00
25DBBE 0 S:01FF P:EnvMXDIzc HC:74430 VC:000 FC:00 I:00
25DBC0 0 S:01FF P:EnvMXDIzc HC:74446 VC:000 FC:00 I:00
25DBC2 0 S:01FF P:EnvMXDIzc HC:74462 VC:000 FC:00 I:00
25DBC6 0 S:01FF P:EnvMXDIzc HC:74478 VC:000 FC:00 I:00
25DBC8 0 S:01FF P:EnvMXDIzc HC:74494 VC:000 FC:00 I:00
25DBCA 0 S:01FF P:EnvMXDIzc HC:74510 VC:000 FC:00 I:00
25DBCC 0 S:01FF P:EnvMXDIzc HC:74526 VC:000 FC:00 I:00
25DBCE 0 S:01FF P:EnvMXDIzc HC:74542 VC:000 FC:00 I:00
25DBD0 0 S:01FF P:EnvMXDIzc HC:74558 VC:000 FC:00 I:00
25DBD2 0 S:01FF P:EnvMXDIzc HC:74574 VC:000 FC:00 I:00
25DBD4 0 S:01FF P:EnvMXDIzc HC:74590 VC:000 FC:00 I:00
25DBD6 0 S:01FF P:EnvMXDIzc HC:74606 VC:000 FC:00 I:00
25DBD9 0 S:01FF P:EnvMXDIzc HC:74622 VC:000 FC:00 I:00
25DBDA 0 S:01FF P:EnvMXDIzc HC:74638 VC:000 FC:00 I:00
25DBDC 0 S:01FF P:EnvMXDIzc HC:74654 VC:000 FC:00 I:00
25DBDF 0 S:01FF P:EnvMXDIzc HC:74670 VC:000 FC:00 I:00
25DBE0 0 S:01FF P:EnvMXDIzc HC:74686 VC:000 FC:00 I:00
25DBE2 0 S:01FF P:EnvMXDIzc HC:74702 VC:000 FC:00 I:00
25DBE4 0 S:01FF P:EnvMXDIzc HC:74718 VC:000 FC:00 I:00
25DBE6 0 S:01FF P:EnvMXDIzc HC:74734 VC:000 FC:00 I:00
25DBE8 0 S:01FF P:EnvMXDIzc HC:74750 VC:000 FC:00 I:00
25DBE9 0 S:01FF P:EnvMXDIzc HC:74766 VC:000 FC:00 I:00
25DBEB 0 S:01FF P:EnvMXDIzc HC:74782 VC:000 FC:00 I:00
25DBEF 0 S:01FF P:EnvMXDIzc HC:74798 VC:000 FC:00 I:00
25DBF1 0 S:01FF P:EnvMXDIzc HC:74814 VC:000 FC:00 I:00
25DBF3 0 S:01FF P:EnvMXDIzc HC:74830 VC:000 FC:00 I:00
25DBF5 0 S:01FF P:EnvMXDIzc HC:74846 VC:000 FC:00 I:00
25DBF7 0 S:01FF P:EnvMXDIzc HC:74862 VC:000 FC:00 I:00
25DBFA 0 S:01FF P:EnvMXDIzc HC:74878 VC:000 FC:00 I:00
25DBFC 0 S:01FF P:EnvMXDIzc HC:74894 VC:000 FC:00 I:00
25DBFE 0 S:01FF P:EnvMXDIzc HC:74910 VC:000 FC:00 I:00
25DC01 0 S:01FF P:EnvMXDIzc HC:74926 VC:000 FC:00 I:00
25DC03 0 S:01FF P:EnvMXDIzc HC:74942 VC:000 FC:00 I:00
25DC05 0 S:01FF P:EnvMXDIzc HC:74958 VC:000 FC:00 I:00
25DC07 0 S:01FF P:EnvMXDIzc HC:74974 VC:000 FC:00 I:00
25DC09 0 S:01FF P:EnvMXDIzc HC:74990 VC:000 FC:00 I:00
25DC0B 0 S:01FF P:EnvMXDIzc HC:75006 VC:000 FC:00 I:00
25DC0E 0 S:01FF P:EnvMXDIzc HC:75022 VC:000 FC:00 I:00
25DC10 0 S:01FF P:EnvMXDIzc HC:75038 VC:000 FC:00 I:00
25DC12 0 S:01FF P:EnvMXDIzc HC:75054 VC:000 FC:00 I:00
25DC13 0 S:01FF P:EnvMXDIzc HC:75070 VC:000 FC:00 I:00
25DC14 0 S:01FF P:EnvMXDIzc HC:75086 VC:000 FC:00 I:00
25DC16 0 S:01FF P:EnvMXDIzc HC:75102 VC:000 FC:00 I:00
25DC17 0 S:01FF P:EnvMXDIzc HC:75118 VC:000 FC:00 I:00
25DC19 0 S:01FF P:EnvMXDIzc HC:75134 VC:000 FC:00 I:00
25DC1B 0 S:01FF P:EnvMXDIzc HC:75150 VC:000 FC:00 I:00
25DC1D 0 S:01FF P:EnvMXDIzc HC:75166 VC:000 FC:00 I:00
25DC1E 0 S:01FF P:EnvMXDIzc HC:75182 VC:000 FC:00 I:00
25DC20 0 S:01FF P:EnvMXDIzc HC:75198 VC:000 FC:00 I:00
25DC22 0 S:01FF P:EnvMXDIzc HC:75214 VC:000 FC:00 I:00
25DC24 0 S:01FF P:EnvMXDIzc HC:75230 VC:000 FC:00 I:00
25DC26 0 S:01FF P:EnvMXDIzc HC:75246 VC:000 FC:00 I:00
25DC28 0 S:01FF P:EnvMXDIzc HC:75262 VC:000 FC:00 I:00
25DC2B 0 S:01FF P:EnvMXDIzc HC:75278 VC:000 FC:00 I:00
25DC2D 0 S:01FF P:EnvMXDIzc HC:75294 VC:000 FC:00 I:00
25DC30 0 S:01FF P:EnvMXDIzc HC:75310 VC:000 FC:00 I:00
25DC31 0 S:01FF P:EnvMXDIzc HC:75326 VC:000 FC:00 I:00
25DC33 0 S:01FF P:EnvMXDIzc HC:75342 VC:000 FC:00 I:00
25DC35 0 S:01FF P:EnvMXDIzc HC:75358 VC:000 FC:00 I:00
25DC37 0 S:01FF P:EnvMXDIzc HC:75374 VC:000 FC:00 I:00
25DC38 0 S:01FF P:EnvMXDIzc HC:75390 VC:000 FC:00 I:00
25DC3A 0 S:01FF P:EnvMXDIzc HC:75406 VC:000 FC:00 I:00
25DC3C 0 S:01FF P:EnvMXDIzc HC:75422 VC:000 FC:00 I:00
25DC3E 0 S:01FF P:EnvMXDIzc HC:75438 VC:000 FC:00 I:00
25DC40 0 S:01FF P:EnvMXDIzc HC:75454 VC:000 FC:00 I:00
25DC42 0 S:01FF P:EnvMXDIzc HC:75470 VC:000 FC:00 I:00
25DC44 0 S:01FF P:EnvMXDIzc HC:75486 VC:000 FC:00 I:00
25DC46 0 S:01FF P:EnvMXDIzc HC:75502 VC:000 FC:00 I:00
25DC48 0 S:01FF P:EnvMXDIzc HC:75518 VC:000 FC:00 I:00
25DC4A 0 S:01FF P:EnvMXDIzc HC:75534 VC:000 FC:00 I:00
25DC4B 0 S:01FF P:EnvMXDIzc HC:75550 VC:000 FC:00 I:00
25DC4E 0 S:01FF P:EnvMXDIzc HC:75566 VC:000 FC:00 I:00
25DC50 0 S:01FF P:EnvMXDIzc HC:75582 VC:000 FC:00 I:00
25DC51 0 S:01FF P:EnvMXDIzc HC:75598 VC:000 FC:00 I:00
25DC54 0 S:01FF P:EnvMXDIzc HC:75614 VC:000 FC:00 I:00
25DC56 0 S:01FF P:EnvMXDIzc HC:75630 VC:000 FC:00 I:00
25DC58 0 S:01FF P:EnvMXDIzc HC:75646 VC:000 FC:00 I:00
25DC59 0 S:01FF P:EnvMXDIzc HC:75662 VC:000 FC:00 I:00
25DC5A 0 S:01FF P:EnvMXDIzc HC:75678 VC:000 FC:00 I:00
25DC5C 0 S:01FF P:EnvMXDIzc HC:75694 VC:000 FC:00 I:00
25DC5D 0 S:01FF P:EnvMXDIzc HC:75710 VC:000 FC:00 I:00
25DC5F 0 S:01FF P:EnvMXDIzc HC:75726 VC:000 FC:00 I:00
25DC61 0 S:01FF P:EnvMXDIzc HC:75742 VC:000 FC:00 I:00
25DC63 0 S:01FF P:EnvMXDIzc HC:75758 VC:000 FC:00 I:00
25DC64 0 S:01FF P:EnvMXDIzc HC:75774 VC:000 FC:00 I:00
25DC66 0 S:01FF P:EnvMXDIzc HC:75790 VC:000 FC:00 I:00
25DC67 0 S:01FF P:EnvMXDIzc HC:75806 VC:000 FC:00 I:00
25DC6A 0 S:01FF P:EnvMXDIzc HC:75822 VC:000 FC:00 I:00
25DC6C 0 S:01FF P:EnvMXDIzc HC:75838 VC:000 FC:00 I:00
25DC6D 0 S:01FF P:EnvMXDIzc HC:75854 VC:000 FC:00 I:00
25DC70 0 S:01FF P:EnvMXDIzc HC:75870 VC:000 FC:00 I:00
25DC72 0 S:01FF P:EnvMXDIzc HC:75886 VC:000 FC:00 I:00
25DC74 0 S:01FF P:EnvMXDIzc HC:75902 VC:000 FC:00 I:00
25DC78 0 S:01FF P:EnvMXDIzc HC:75918 VC:000 FC:00 I:00
25DC79 0 S:01FF P:EnvMXDIzc HC:75934 VC:000 FC:00 I:00
25DC7B 0 S:01FF P:EnvMXDIzc HC:75950 VC:000 FC:00 I:00
25DC7C 0 S:01FF P:EnvMXDIzc HC:75966 VC:000 FC:00 I:00
25DC7F 0 S:01FF P:EnvMXDIzc HC:75982 VC:000 FC:00 I:00
25DC81 0 S:01FF P:EnvMXDIzc HC:75998 VC:000 FC:00 I:00
25DC82 0 S:01FF P:EnvMXDIzc HC:76014 VC:000 FC:00 I:00
25DC85 0 S:01FF P:EnvMXDIzc HC:76030 VC:000 FC:00 I:00
25DC87 0 S:01FF P:EnvMXDIzc HC:76046 VC:000 FC:00 I:00
25DC89 0 S:01FF P:EnvMXDIzc HC:76062 VC:000 FC:00 I:00
25DC8A 0 S:01FF P:EnvMXDIzc HC:76078 VC:000 FC:00 I:00
25DC8B 0 S:01FF P:EnvMXDIzc HC:76094 VC:000 FC:00 I:00
25DC8D 0 S:01FF P:EnvMXDIzc HC:76110 VC:000 FC:00 I:00
25DC8E 0 S:01FF P:EnvMXDIzc HC:76126 VC:000 FC:00 I:00
25DC90 0 S:01FF P:EnvMXDIzc HC:76142 VC:000 FC:00 I:00
25DC92 0 S:01FF P:EnvMXDIzc HC:76158 VC:000 FC:00 I:00
25DC94 0 S:01FF P:EnvMXDIzc HC:76174 VC:000 FC:00 I:00
25DC95 0 S:01FF P:EnvMXDIzc HC:76190 VC:000 FC:00 I:00
25DC97 0 S:01FF P:EnvMXDIzc HC:76206 VC:000 FC:00 I:00
25DC98 0 S:01FF P:EnvMXDIzc HC:76222 VC:000 FC:00 I:00
25DC9A 0 S:01FF P:EnvMXDIzc HC:76238 VC:000 FC:00 I:00
25DC9C 0 S:01FF P:EnvMXDIzc HC:76254 VC:000 FC:00 I:00
25DC9E 0 S:01FF P:EnvMXDIzc HC:76270 VC:000 FC:00 I:00
25DCA0 0 S:01FF P:EnvMXDIzc HC:76286 VC:000 FC:00 I:00
25DCA2 0 S:01FF P:EnvMXDIzc HC:76302 VC:000 FC:00 I:00
25DCA4 0 S:01FF P:EnvMXDIzc HC:76318 VC:000 FC:00 I:00
25DCA7 0 S:01FF P:EnvMXDIzc HC:76334 VC:000 FC:00 I:00
25DCA9 0 S:01FF P:EnvMXDIzc HC:76350 VC:000 FC:00 I:00
25DCAB 0 S:01FF P:EnvMXDIzc HC:76366 VC:000 FC:00 I:00
25DCAD 0 S:01FF P:EnvMXDIzc HC:76382 VC:000 FC:00 I:00
25DCAF 0 S:01FF P:EnvMXDIzc HC:76398 VC:000 FC:00 I:00
25DCB3 0 S:01FF P:EnvMXDIzc HC:76414 VC:000 FC:00 I:00
25DCB5 0 S:01FF P:EnvMXDIzc HC:76430 VC:000 FC:00 I:00
25DCB7 0 S:01FF P:EnvMXDIzc HC:76446 VC:000 FC:00 I:00
25DCBB 0 S:01FF P:EnvMXDIzc HC:76462 VC:000 FC:00 I:00
25DCBD 0 S:01FF P:EnvMXDIzc HC:76478 VC:000 FC:00 I:00
25DCBF 0 S:01FF P:EnvMXDIzc HC:76494 VC:000 FC:00 I:00
25DCC1 0 S:01FF P:EnvMXDIzc HC:76510 VC:000 FC:00 I:00
25DCC3 0 S:01FF P:EnvMXDIzc HC:76526 VC:000 FC:00 I:00
25DCC5 0 S:01FF P:EnvMXDIzc HC:76542 VC:000 FC:00 I:00
25DCC7 0 S:01FF P:EnvMXDIzc HC:76558 VC:000 FC:00 I:00
25DCCA 0 S:01FF P:EnvMXDIzc HC:76574 VC:000 FC:00 I:00
25DCCB 0 S:01FF P:EnvMXDIzc HC:76590 VC:000 FC:00 I:00
25DCCD 0 S:01FF P:EnvMXDIzc HC:76606 VC:000 FC:00 I:00
25DCD0 0 S:01FF P:EnvMXDIzc HC:76622 VC:000 FC:00 I:00
25DCD1 0 S:01FF P:EnvMXDIzc HC:76638 VC:000 FC:00 I:00
25DCD3 0 S:01FF P:EnvMXDIzc HC:76654 VC:000 FC:00 I:00
25DCD5 0 S:01FF P:EnvMXDIzc HC:76670 VC:000 FC:00 I:00
25DCD7 0 S:01FF P:EnvMXDIzc HC:76686 VC:000 FC:00 I:00
25DCD9 0 S:01FF P:EnvMXDIzc HC:76702 VC:000 FC:00 I:00
25DCDB 0 S:01FF P:EnvMXDIzc HC:76718 VC:000 FC:00 I:00
25DCDD 0 S:01FF P:EnvMXDIzc HC:76734 VC:000 FC:00 I:00
25DCDE 0 S:01FF P:EnvMXDIzc HC:76750 VC:000 FC:00 I:00
25DCE0 0 S:01FF P:EnvMXDIzc HC:76766 VC:000 FC:00 I:00
25DCE2 0 S:01FF P:EnvMXDIzc HC:76782 VC:000 FC:00 I:00
25DCE3 0 S:01FF P:EnvMXDIzc HC:76798 VC:000 FC:00 I:00
25DCE4 0 S:01FF P:EnvMXDIzc HC:76814 VC:000 FC:00 I:00
25DCE6 0 S:01FF P:EnvMXDIzc HC:76830 VC:000 FC:00 I:00
25DCE8 0 S:01FF P:EnvMXDIzc HC:76846 VC:000 FC:00 I:00
25DCEA 0 S:01FF P:EnvMXDIzc HC:76862 VC:000 FC:00 I:00
25DCEC 0 S:01FF P:EnvMXDIzc HC:76878 VC:000 FC:00 I:00
25DCED 0 S:01FF P:EnvMXDIzc HC:76894 VC:000 FC:00 I:00
25DCEF 0 S:01FF P:EnvMXDIzc HC:76910 VC:000 FC:00 I:00
25DCF1 0 S:01FF P:EnvMXDIzc HC:76926 VC:000 FC:00 I:00
25DCF3 0 S:01FF P:EnvMXDIzc HC:76942 VC:000 FC:00 I:00
25DCF5 0 S:01FF P:EnvMXDIzc HC:76958 VC:000 FC:00 I:00
25DCF7 0 S:01FF P:EnvMXDIzc HC:76974 VC:000 FC:00 I:00
25DCF9 0 S:01FF P:EnvMXDIzc HC:76990 VC:000 FC:00 I:00
25DCFB 0 S:01FF P:EnvMXDIzc HC:77006 VC:000 FC:00 I:00
25DCFC 0 S:01FF P:EnvMXDIzc HC:77022 VC:000 FC:00 I:00
25DCFD 0 S:01FF P:EnvMXDIzc HC:77038 VC:000 FC:00 I:00
25DCFF 0 S:01FF P:EnvMXDIzc HC:77054 VC:000 FC:00 I:00
25DD01 0 S:01FF P:EnvMXDIzc HC:77070 VC:000 FC:00 I:00
25DD02 0 S:01FF P:EnvMXDIzc HC:77086 VC:000 FC:00 I:00
25DD05 0 S:01FF P:EnvMXDIzc HC:77102 VC:000 FC:00 I:00
25DD07 0 S:01FF P:EnvMXDIzc HC:77118 VC:000 FC:00 I:00
25DD09 0 S:01FF P:EnvMXDIzc HC:77134 VC:000 FC:00 I:00
25DD0B 0 S:01FF P:EnvMXDIzc HC:77150 VC:000 FC:00 I:00
25DD0D 0 S:01FF P:EnvMXDIzc HC:77166 VC:000 FC:00 I:00
25DD10 0 S:01FF P:EnvMXDIzc HC:77182 VC:000 FC:00 I:00
25DD12 0 S:01FF P:EnvMXDIzc HC:77198 VC:000 FC:00 I:00
25DD14 0 S:01FF P:EnvMXDIzc HC:77214 VC:000 FC:00 I:00
25DD15 0 S:01FF P:EnvMXDIzc HC:77230 VC:000 FC:00 I:00
25DD17 0 S:01FF P:EnvMXDIzc HC:77246 VC:000 FC:00 I:00
25DD19 0 S:01FF P:EnvMXDIzc HC:77262 VC:000 FC:00 I:00
25DD1B 0 S:01FF P:EnvMXDIzc HC:77278 VC:000 FC:00 I:00
25DD1D 0 S:01FF P:EnvMXDIzc HC:77294 VC:000 FC:00 I:00
25DD1F 0 S:01FF P:EnvMXDIzc HC:77310 VC:000 FC:00 I:00
25DD21 0 S:01FF P:EnvMXDIzc HC:77326 VC:000 FC:00 I:00
25DD23 0 S:01FF P:EnvMXDIzc HC:77342 VC:000 FC:00 I:00
25DD26 0 S:01FF P:EnvMXDIzc HC:77358 VC:000 FC:00 I:00
25DD28 0 S:01FF P:EnvMXDIzc HC:77374 VC:000 FC:00 I:00
25DD2A 0 S:01FF P:EnvMXDIzc HC:77390 VC:000 FC:00 I:00
25DD2E 0 S:01FF P:EnvMXDIzc HC:77406 VC:000 FC:00 I:00
25DD30 0 S:01FF P:EnvMXDIzc HC:77422 VC:000 FC:00 I:00
25DD34 0 S:01FF P:EnvMXDIzc HC:77438 VC:000 FC:00 I:00
25DD35 0 S:01FF P:EnvMXDIzc HC:77454 VC:000 FC:00 I:00
25DD37 0 S:01FF P:EnvMXDIzc HC:77470 VC:000 FC:00 I:00
25DD39 0 S:01FF P:EnvMXDIzc HC:77486 VC:000 FC:00 I:00
25DD3B 0 S:01FF P:EnvMXDIzc HC:77502 VC:000 FC:00 I:00
25DD3D 0 S:01FF P:EnvMXDIzc HC:77518 VC:000 FC:00 I:00
25DD3F 0 S:01FF P:EnvMXDIzc HC:77534 VC:000 FC:00 I:00
25DD41 0 S:01FF P:EnvMXDIzc HC:77550 VC:000 FC:00 I:00
25DD43 0 S:01FF P:EnvMXDIzc HC:77566 VC:000 FC:00 I:00
25DD45 0 S:01FF P:EnvMXDIzc HC:77582 VC:000 FC:00 I:00
25DD47 0 S:01FF P:EnvMXDIzc HC:77598 VC:000 FC:00 I:00
25DD49 0 S:01FF P:EnvMXDIzc HC:77614 VC:000 FC:00 I:00
25DD4B 0 S:01FF P:EnvMXDIzc HC:77630 VC:000 FC:00 I:00
25DD4E 0 S:01FF P:EnvMXDIzc HC:77646 VC:000 FC:00 I:00
25DD4F 0 S:01FF P:EnvMXDIzc HC:77662 VC:000 FC:00 I:00
25DD51 0 S:01FF P:EnvMXDIzc HC:77678 VC:000 FC:00 I:00
25DD54 0 S:01FF P:EnvMXDIzc HC:77694 VC:000 FC:00 I:00
25DD56 0 S:01FF P:EnvMXDIzc HC:77710 VC:000 FC:00 I:00
25DD58 0 S:01FF P:EnvMXDIzc HC:77726 VC:000 FC:00 I:00
25DD5A 0 S:01FF P:EnvMXDIzc HC:77742 VC:000 FC:00 I:00
25DD5C 0 S:01FF P:EnvMXDIzc HC:77758 VC:000 FC:00 I:00
25DD5E 0 S:01FF P:EnvMXDIzc HC:77774 VC:000 FC:00 I:00
25DD60 0 S:01FF P:EnvMXDIzc HC:77790 VC:000 FC:00 I:00
25DD61 0 S:01FF P:EnvMXDIzc HC:77806 VC:000 FC:00 I:00
25DD63 0 S:01FF P:EnvMXDIzc HC:77822 VC:000 FC:00 I:00
25DD65 0 S:01FF P:EnvMXDIzc HC:77838 VC:000 FC:00 I:00
25DD67 0 S:01FF P:EnvMXDIzc HC:77854 VC:000 FC:00 I:00
25DD68 0 S:01FF P:EnvMXDIzc HC:77870 VC:000 FC:00 I:00
25DD6A 0 S:01FF P:EnvMXDIzc HC:77886 VC:000 FC:00 I:00
25DD6C 0 S:01FF P:EnvMXDIzc HC:77902 VC:000 FC:00 I:00
25DD6D 0 S:01FF P:EnvMXDIzc HC:77918 VC:000 FC:00 I:00
25DD6F 0 S:01FF P:EnvMXDIzc HC:77934 VC:000 FC:00 I:00
25DD71 0 S:01FF P:EnvMXDIzc HC:77950 VC:000 FC:00 I:00
25DD74 0 S:01FF P:EnvMXDIzc HC:77966 VC:000 FC:00 I:00
25DD75 0 S:01FF P:EnvMXDIzc HC:77982 VC:000 FC:00 I:00
25DD76 0 S:01FF P:EnvMXDIzc HC:77998 VC:000 FC:00 I:00
25DD77 0 S:01FF P:EnvMXDIzc HC:78014 VC:000 FC:00 I:00
25DD79 0 S:01FF P:EnvMXDIzc HC:78030 VC:000 FC:00 I:00
25DD7B 0 S:01FF P:EnvMXDIzc HC:78046 VC:000 FC:00 I:00
25DD7D 0 S:01FF P:EnvMXDIzc HC:78062 VC:000 FC:00 I:00
25DD7F 0 S:01FF P:EnvMXDIzc HC:78078 VC:000 FC:00 I:00
25DD81 0 S:01FF P:EnvMXDIzc HC:78094 VC:000 FC:00 I:00
25DD82 0 S:01FF P:EnvMXDIzc HC:78110 VC:000 FC:00 I:00
25DD84 0 S:01FF P:EnvMXDIzc HC:78126 VC:000 FC:00 I:00
25DD86 0 S:01FF P:EnvMXDIzc HC:78142 VC:000 FC:00 I:00
25DD88 0 S:01FF P:EnvMXDIzc HC:78158 VC:000 FC:00 I:00
25DD8A 0 S:01FF P:EnvMXDIzc HC:78174 VC:000 FC:00 I:00
25DD8C 0 S:01FF P:EnvMXDIzc HC:78190 VC:000 FC:00 I:00
25DD8E 0 S:01FF P:EnvMXDIzc HC:78206 VC:000 FC:00 I:00
25DD90 0 S:01FF P:EnvMXDIzc HC:78222 VC:000 FC:00 I:00
25DD91 0 S:01FF P:EnvMXDIzc HC:78238 VC:000 FC:00 I:00
25DD92 0 S:01FF P:EnvMXDIzc HC:78254 VC:000 FC:00 I:00
25DD93 0 S:01FF P:EnvMXDIzc HC:78270 VC:000 FC:00 I:00
25DD95 0 S:01FF P:EnvMXDIzc HC:78286 VC:000 FC:00 I:00
25DD97 0 S:01FF P:EnvMXDIzc HC:78302 VC:000 FC:00 I:00
25DD98 0 S:01FF P:EnvMXDIzc HC:78318 VC:000 FC:00 I:00
25DD9B 0 S:01FF P:EnvMXDIzc HC:78334 VC:000 FC:00 I:00
25DD9D 0 S:01FF P:EnvMXDIzc HC:78350 VC:000 FC:00 I:00
25DD9F 0 S:01FF P:EnvMXDIzc HC:78366 VC:000 FC:00 I:00
25DDA1 0 S:01FF P:EnvMXDIzc HC:78382 VC:000 FC:00 I:00
25DDA3 0 S:01FF P:EnvMXDIzc HC:78398 VC:000 FC:00 I:00
25DDA5 0 S:01FF P:EnvMXDIzc HC:78414 VC:000 FC:00 I:00
25DDA7 0 S:01FF P:EnvMXDIzc HC:78430 VC:000 FC:00 I:00
25DDAA 0 S:01FF P:EnvMXDIzc HC:78446 VC:000 FC:00 I:00
25DDAC 0 S:01FF P:EnvMXDIzc HC:78462 VC:000 FC:00 I:00
25DDAE 0 S:01FF P:EnvMXDIzc HC:78478 VC:000 FC:00 I:00
25DDB2 0 S:01FF P:EnvMXDIzc HC:63662 VC:000 FC:00 I:00
25DDB4 0 S:01FF P:EnvMXDIzc HC:63678 VC:000 FC:00 I:00
25DDB6 0 S:01FF P:EnvMXDIzc HC:63694 VC:000 FC:00 I:00
25DDB8 0 S:01FF P:EnvMXDIzc HC:63710 VC:000 FC:00 I:00
25DDBA 0 S:01FF P:EnvMXDIzc HC:63726 VC:000 FC:00 I:00
25DDBC 0 S:01FF P:EnvMXDIzc HC:63742 VC:000 FC:00 I:00
25DDBE 0 S:01FF P:EnvMXDIzc HC:63758 VC:000 FC:00 I:00
25DDC0 0 S:01FF P:EnvMXDIzc HC:63774 VC:000 FC:00 I:00
25DDC3 0 S:01FF P:EnvMXDIzc HC:63790 VC:000 FC:00 I:00
25DDC5 0 S:01FF P:EnvMXDIzc HC:63806 VC:000 FC:00 I:00
25DDC7 0 S:01FF P:EnvMXDIzc HC:63822 VC:000 FC:00 I:00
25DDCB 0 S:01FF P:EnvMXDIzc HC:63838 VC:000 FC:00 I:00
25DDCD 0 S:01FF P:EnvMXDIzc HC:63854 VC:000 FC:00 I:00
25DDD1 0 S:01FF P:EnvMXDIzc HC:63870 VC:000 FC:00 I:00
25DDD2 0 S:01FF P:EnvMXDIzc HC:63886 VC:000 FC:00 I:00
25DDD4 0 S:01FF P:EnvMXDIzc HC:63902 VC:000 FC:00 I:00
25DDD6 0 S:01FF P:EnvMXDIzc HC:63918 VC:000 FC:00 I:00
25DDD8 0 S:01FF P:EnvMXDIzc HC:63934 VC:000 FC:00 I:00
25DDDA 0 S:01FF P:EnvMXDIzc HC:63950 VC:000 FC:00 I:00
25DDDC 0 S:01FF P:EnvMXDIzc HC:63966 VC:000 FC:00 I:00
25DDDE 0 S:01FF P:EnvMXDIzc HC:63982 VC:000 FC:00 I:00
25DDE0 0 S:01FF P:EnvMXDIzc HC:63998 VC:000 FC:00 I:00
25DDE2 0 S:01FF P:EnvMXDIzc HC:64014 VC:000 FC:00 I:00
25DDE4 0 S:01FF P:EnvMXdIzc HC:54934 VC:000 FC:00 I:00
25DDE6 0 S:01FF P:EnvMXdIzc HC:54950 VC:000 FC:00 I:00
25DDE8 0 S:01FF P:EnvMXdIzc HC:54966 VC:000 FC:00 I:00
25DDEA 0 S:01FF P:EnvMXdIzc HC:54982 VC:000 FC:00 I:00
25DDEC 0 S:01FF P:EnvMXdIzc HC:54998 VC:000 FC:00 I:00
25DDEF 0 S:01FF P:EnvMXdIzc HC:55014 VC:000 FC:00 I:00
25DDF0 0 S:01FF P:EnvMXdIzc HC:55030 VC:000 FC:00 I:00
25DDF2 0 S:01FF P:EnvMXdIzc HC:55046 VC:000 FC:00 I:00
25DDF5 0 S:01FF P:EnvMXdIzc HC:55062 VC:000 FC:00 I:00
25DDF7 0 S:01FF P:EnvMXdIzc HC:55078 VC:000 FC:00 I:00
25DDF9 0 S:01FF P:EnvMXdIzc HC:55094 VC:000 FC:00 I:00
25DDFB 0 S:01FF P:EnvMXdIzc HC:55110 VC:000 FC:00 I:00
25DDFD 0 S:01FF P:EnvMXdIzc HC:55126 VC:000 FC:00 I:00
25DDFF 0 S:01FF P:EnvMXdIzc HC:55142 VC:000 FC:00 I:00
25DE01 0 S:01FF P:EnvMXdIzc HC:55158 VC:000 FC:00 I:00
25DE02 0 S:01FF P:EnvMXdIzc HC:55174 VC:000 FC:00 I:00
25DE04 0 S:01FF P:EnvMXdIzc HC:55190 VC:000 FC:00 I:00
25DE06 0 S:01FF P:EnvMXdIzc HC:55206 VC:000 FC:00 I:00
25DE08 0 S:01FF P:EnvMXdIzc HC:55222 VC:000 FC:00 I:00
25DE09 0 S:01FF P:EnvMXdIzc HC:55238 VC:000 FC:00 I:00
25DE0B 0 S:01FF P:EnvMXdIzc HC:55254 VC:000 FC:00 I:00
25DE0D 0 S:01FF P:EnvMXdIzc HC:55270 VC:000 FC:00 I:00
25DE0E 0 S:01FF P:EnvMXdIzc HC:55286 VC:000 FC:00 I:00
25DE10 0 S:01FF P:EnvMXdIzc HC:55302 VC:000 FC:00 I:00
25DE12 0 S:01FF P:EnvMXdIzc HC:55318 VC:000 FC:00 I:00
25DE15 0 S:01FF P:EnvMXdIzc HC:55334 VC:000 FC:00 I:00
25DE16 0 S:01FF P:EnvMXdIzc HC:55350 VC:000 FC:00 I:00
25DE18 0 S:01FF P:EnvMXdIzc HC:55366 VC:000 FC:00 I:00
25DE1A 0 S:01FF P:EnvMXdIzc HC:55382 VC:000 FC:00 I:00
25DE1C 0 S:01FF P:EnvMXdIzc HC:55398 VC:000 FC:00 I:00
25DE1E 0 S:01FF P:EnvMXdIzc HC:55414 VC:000 FC:00 I:00
25DE20 0 S:01FF P:EnvMXdIzc HC:55430 VC:000 FC:00 I:00
25DE22 0 S:01FF P:EnvMXdIzc HC:55446 VC:000 FC:00 I:00
25DE23 0 S:01FF P:EnvMXdIzc HC:55462 VC:000 FC:00 I:00
25DE25 0 S:01FF P:EnvMXdIzc HC:55478 VC:000 FC:00 I:00
25DE27 0 S:01FF P:EnvMXdIzc HC:55494 VC:000 FC:00 I:00
25DE29 0 S:01FF P:EnvMXdIzc HC:55510 VC:000 FC:00 I:00
25DE2B 0 S:01FF P:EnvMXdIzc HC:55526 VC:000 FC:00 I:00
25DE2D 0 S:01FF P:EnvMXdIzc HC:55542 VC:000 FC:00 I:00
25DE2F 0 S:01FF P:EnvMXdIzc HC:55558 VC:000 FC:00 I:00
25DE31 0 S:01FF P:EnvMXdIzc HC:55574 VC:000 FC:00 I:00
25DE32 0 S:01FF P:EnvMXdIzc HC:55590 VC:000 FC:00 I:00
25DE33 0 S:01FF P:EnvMXdIzc HC:55606 VC:000 FC:00 I:00
25DE34 0 S:01FF P:EnvMXdIzc HC:55622 VC:000 FC:00 I:00
25DE35 0 S:01FF P:EnvMXdIzc HC:55638 VC:000 FC:00 I:00
25DE37 0 S:01FF P:EnvMXdIzc HC:55654 VC:000 FC:00 I:00
25DE39 0 S:01FF P:EnvMXdIzc HC:55670 VC:000 FC:00 I:00
25DE3A 0 S:01FF P:EnvMXdIzc HC:55686 VC:000 FC:00 I:00
25DE3D 0 S:01FF P:EnvMXdIzc HC:55702 VC:000 FC:00 I:00
25DE3F 0 S:01FF P:EnvMXdIzc HC:55718 VC:000 FC:00 I:00
25DE41 0 S:01FF P:EnvMXdIzc HC:55734 VC:000 FC:00 I:00
25DE43 0 S:01FF P:EnvMXdIzc HC:55750 VC:000 FC:00 I:00
25DE45 0 S:01FF P:EnvMXdIzc HC:55766 VC:000 FC:00 I:00
25DE47 0 S:01FF P:EnvMXdIzc HC:55782 VC:000 FC:00 I:00
25DE49 0 S:01FF P:EnvMXdIzc HC:55798 VC:000 FC:00 I:00
25DE4C 0 S:01FF P:EnvMXdIzc HC:55814 VC:000 FC:00 I:00
25DE4E 0 S:01FF P:EnvMXdIzc HC:55830 VC:000 FC:00 I:00
25DE50 0 S:01FF P:EnvMXdIzc HC:55846 VC:000 FC:00 I:00
25DE51 0 S:01FF P:EnvMXdIzc HC:55862 VC:000 FC:00 I:00
25DE54 0 S:01FF P:EnvMXdIzc HC:55878 VC:000 FC:00 I:00
25DE56 0 S:01FF P:EnvMXdIzc HC:55894 VC:000 FC:00 I:00
25DE58 0 S:01FF P:EnvMXdIzc HC:55910 VC:000 FC:00 I:00
25DE5A 0 S:01FF P:EnvMXdIzc HC:55926 VC:000 FC:00 I:00
25DE5C 0 S:01FF P:EnvMXdIzc HC:55942 VC:000 FC:00 I:00
25DE5E 0 S:01FF P:EnvMXdIzc HC:55958 VC:000 FC:00 I:00
25DE60 0 S:01FF P:EnvMXdIzc HC:55974 VC:000 FC:00 I:00
25DE62 0 S:01FF P:EnvMXdIzc HC:55990 VC:000 FC:00 I:00
25DE65 0 S:01FF P:EnvMXdIzc HC:56006 VC:000 FC:00 I:00
25DE67 0 S:01FF P:EnvMXdIzc HC:56022 VC:000 FC:00 I:00
25DE69 0 S:01FF P:EnvMXdIzc HC:56038 VC:000 FC:00 I:00
25DE6D 0 S:01FF P:EnvMXdIzc HC:56054 VC:000 FC:00 I:00
25DE6F 0 S:01FF P:EnvMXdIzc HC:56070 VC:000 FC:00 I:00
25DE73 0 S:01FF P:EnvMXdIzc HC:56086 VC:000 FC:00 I:00
25DE74 0 S:01FF P:EnvMXdIzc HC:56102 VC:000 FC:00 I:00
25DE76 0 S:01FF P:EnvMXdIzc HC:56118 VC:000 FC:00 I:00
25DE78 0 S:01FF P:EnvMXdIzc HC:56134 VC:000 FC:00 I:00
25DE7A 0 S:01FF P:EnvMXdIzc HC:56150 VC:000 FC:00 I:00
25DE7C 0 S:01FF P:EnvMXdIzc HC:56166 VC:000 FC:00 I:00
25DE7E 0 S:01FF P:EnvMXdIzc HC:56182 VC:000 FC:00 I:00
25DE80 0 S:01FF P:EnvMXdIzc HC:56198 VC:000 FC:00 I:00
25DE82 0 S:01FF P:EnvMXdIzc HC:56214 VC:000 FC:00 I:00
25DE84 0 S:01FF P:EnvMXdIzc HC:56230 VC:000 FC:00 I:00
25DE86 0 S:01FF P:EnvMXdIzc HC:56246 VC:000 FC:00 I:00
25DE88 0 S:01FF P:EnvMXdIzc HC:56262 VC:000 FC:00 I:00
25DE8A 0 S:01FF P:EnvMXdIzc HC:56278 VC:000 FC:00 I:00
25DE8C 0 S:01FF P:EnvMXdIzc HC:56294 VC:000 FC:00 I:00
25DE8E 0 S:01FF P:EnvMXdIzc HC:56310 VC:000 FC:00 I:00
25DE90 0 S:01FF P:EnvMXdIzc HC:56326 VC:000 FC:00 I:00
25DE92 0 S:01FF P:EnvMXdIzc HC:56342 VC:000 FC:00 I:00
25DE95 0 S:01FF P:EnvMXdIzc HC:56358 VC:000 FC:00 I:00
25DE96 0 S:01FF P:EnvMXdIzc HC:56374 VC:000 FC:00 I:00
25DE98 0 S:01FF P:EnvMXdIzc HC:56390 VC:000 FC:00 I:00
25DE9B 0 S:01FF P:EnvMXdIzc HC:56406 VC:000 FC:00 I:00
25DE9D 0 S:01FF P:EnvMXdIzc HC:56422 VC:000 FC:00 I:00
25DE9F 0 S:01FF P:EnvMXdIzc HC:56438 VC:000 FC:00 I:00
25DEA1 0 S:01FF P:EnvMXdIzc HC:56454 VC:000 FC:00 I:00
25DEA3 0 S:01FF P:EnvMXdIzc HC:56470 VC:000 FC:00 I:00
25DEA5 0 S:01FF P:EnvMXdIzc HC:56486 VC:000 FC:00 I:00
25DEA7 0 S:01FF P:EnvMXdIzc HC:56502 VC:000 FC:00 I:00
25DEA8 0 S:01FF P:EnvMXdIzc HC:56518 VC:000 FC:00 I:00
25DEAA 0 S:01FF P:EnvMXdIzc HC:56534 VC:000 FC:00 I:00
25DEAC 0 S:01FF P:EnvMXdIzc HC:56550 VC:000 FC:00 I:00
25DEAE 0 S:01FF P:EnvMXdIzc HC:56566 VC:000 FC:00 I:00
25DEAF 0 S:01FF P:EnvMXdIzc HC:56582 VC:000 FC:00 I:00
25DEB1 0 S:01FF P:EnvMXdIzc HC:56598 VC:000 FC:00 I:00
25DEB3 0 S:01FF P:EnvMXdIzc HC:56614 VC:000 FC:00 I:00
25DEB4 0 S:01FF P:EnvMXdIzc HC:56630 VC:000 FC:00 I:00
25DEB6 0 S:01FF P:EnvMXdIzc HC:56646 VC:000 FC:00 I:00
25DEB8 0 S:01FF P:EnvMXdIzc HC:56662 VC:000 FC:00 I:00
25DEBB 0 S:01FF P:EnvMXdIzc HC:56678 VC:000 FC:00 I:00
25DEBC 0 S:01FF P:EnvMXdIzc HC:56694 VC:000 FC:00 I:00
25DEBE 0 S:01FF P:EnvMXdIzc HC:56710 VC:000 FC:00 I:00
25DEBF 0 S:01FF P:EnvMXdIzc HC:56726 VC:000 FC:00 I:00
25DEC1 0 S:01FF P:EnvMXdIzc HC:56742 VC:000 FC:00 I:00
25DEC3 0 S:01FF P:EnvMXdIzc HC:56758 VC:000 FC:00 I:00
25DEC5 0 S:01FF P:EnvMXdIzc HC:56774 VC:000 FC:00 I:00
25DEC7 0 S:01FF P:EnvMXdIzc HC:56790 VC:000 FC:00 I:00
25DEC9 0 S:01FF P:EnvMXdIzc HC:56806 VC:000 FC:00 I:00
25DECA 0 S:01FF P:EnvMXdIzc HC:56822 VC:000 FC:00 I:00
25DECC 0 S:01FF P:EnvMXdIzc HC:56838 VC:000 FC:00 I:00
25DECE 0 S:01FF P:EnvMXdIzc HC:56854 VC:000 FC:00 I:00
25DED0 0 S:01FF P:EnvMXdIzc HC:56870 VC:000 FC:00 I:00
25DED2 0 S:01FF P:EnvMXdIzc HC:56886 VC:000 FC:00 I:00
25DED4 0 S:01FF P:EnvMXdIzc HC:56902 VC:000 FC:00 I:00
25DED6 0 S:01FF P:EnvMXdIzc HC:56918 VC:000 FC:00 I:00
25DED8 0 S:01FF P:EnvMXdIzc HC:56934 VC:000 FC:00 I:00
25DED9 0 S:01FF P:EnvMXdIzc HC:56950 VC:000 FC:00 I:00
25DEDA 0 S:01FF P:EnvMXdIzc HC:56966 VC:000 FC:00 I:00
25DEDC 0 S:01FF P:EnvMXdIzc HC:56982 VC:000 FC:00 I:00
25DEDE 0 S:01FF P:EnvMXdIzc HC:56998 VC:000 FC:00 I:00
25DEE0 0 S:01FF P:EnvMXdIzc HC:57014 VC:000 FC:00 I:00
25DEE1 0 S:01FF P:EnvMXdIzc HC:57030 VC:000 FC:00 I:00
25DEE4 0 S:01FF P:EnvMXdIzc HC:57046 VC:000 FC:00 I:00
25DEE6 0 S:01FF P:EnvMXdIzc HC:57062 VC:000 FC:00 I:00
25DEE8 0 S:01FF P:EnvMXdIzc HC:57078 VC:000 FC:00 I:00
25DEEA 0 S:01FF P:EnvMXdIzc HC:57094 VC:000 FC:00 I:00
25DEEC 0 S:01FF P:EnvMXdIzc HC:57110 VC:000 FC:00 I:00
25DEEE 0 S:01FF P:EnvMXdIzc HC:57126 VC:000 FC:00 I:00
25DEF0 0 S:01FF P:EnvMXdIzc HC:57142 VC:000 FC:00 I:00
25DEF3 0 S:01FF P:EnvMXdIzc HC:57158 VC:000 FC:00 I:00
25DEF5 0 S:01FF P:EnvMXdIzc HC:57174 VC:000 FC:00 I:00
25DEF7 0 S:01FF P:EnvMXdIzc HC:57190 VC:000 FC:00 I:00
25DEF8 0 S:01FF P:EnvMXdIzc HC:57206 VC:000 FC:00 I:00
25DEFE 0 S:01FF P:EnvMXDIzc HC:61382 VC:000 FC:00 I:00
25DF00 0 S:01FF P:EnvMXDIzc HC:61398 VC:000 FC:00 I:00
25DF02 0 S:01FF P:EnvMXDIzc HC:61414 VC:000 FC:00 I:00
25DF04 0 S:01FF P:EnvMXDIzc HC:61430 VC:000 FC:00 I:00
25DF06 0 S:01FF P:EnvMXDIzc HC:61446 VC:000 FC:00 I:00
25DF08 0 S:01FF P:EnvMXDIzc HC:61462 VC:000 FC:00 I:00
25DF0B 0 S:01FF P:EnvMXDIzc HC:61478 VC:000 FC:00 I:00
25DF0F 0 S:01FF P:EnvMXDIzc HC:61494 VC:000 FC:00 I:00
25DF11 0 S:01FF P:EnvMXdIzc HC:57350 VC:000 FC:00 I:00
25DF15 0 S:01FF P:EnvMXdIzc HC:57366 VC:000 FC:00 I:00
25DF16 0 S:01FF P:EnvMXdIzc HC:57382 VC:000 FC:00 I:00
25DF18 0 S:01FF P:EnvMXdIzc HC:57398 VC:000 FC:00 I:00
25DF1A 0 S:01FF P:EnvMXdIzc HC:57414 VC:000 FC:00 I:00
25DF1C 0 S:01FF P:EnvMXdIzc HC:57430 VC:000 FC:00 I:00
25DF1E 0 S:01FF P:EnvMXdIzc HC:57446 VC:000 FC:00 I:00
25DF20 0 S:01FF P:EnvMXdIzc HC:57462 VC:000 FC:00 I:00
25DF23 0 S:01FF P:EnvMXdIzc HC:57478 VC:000 FC:00 I:00
25DF24 0 S:01FF P:EnvMXdIzc HC:57494 VC:000 FC:00 I:00
25DF26 0 S:01FF P:EnvMXdIzc HC:57510 VC:000 FC:00 I:00
25DF27 0 S:01FF P:EnvMXdIzc HC:57526 VC:000 FC:00 I:00
25DF29 0 S:01FF P:EnvMXdIzc HC:57542 VC:000 FC:00 I:00
25DF2B 0 S:01FF P:EnvMXdIzc HC:57558 VC:000 FC:00 I:00
25DF2D 0 S:01FF P:EnvMXdIzc HC:57574 VC:000 FC:00 I:00
25DF2E 0 S:01FF P:EnvMXdIzc HC:57590 VC:000 FC:00 I:00
25DF2F 0 S:01FF P:EnvMXdIzc HC:57606 VC:000 FC:00 I:00
25DF31 0 S:01FF P:EnvMXdIzc HC:57622 VC:000 FC:00 I:00
25DF33 0 S:01FF P:EnvMXdIzc HC:57638 VC:000 FC:00 I:00
25DF35 0 S:01FF P:EnvMXdIzc HC:57654 VC:000 FC:00 I:00
25DF36 0 S:01FF P:EnvMXdIzc HC:57670 VC:000 FC:00 I:00
25DF38 0 S:01FF P:EnvMXdIzc HC:57686 VC:000 FC:00 I:00
25DF3A 0 S:01FF P:EnvMXdIzc HC:57702 VC:000 FC:00 I:00
25DF3C 0 S:01FF P:EnvMXdIzc HC:57718 VC:000 FC:00 I:00
25DF3E 0 S:01FF P:EnvMXdIzc HC:57734 VC:000 FC:00 I:00
25DF40 0 S:01FF P:EnvMXdIzc HC:57750 VC:000 FC:00 I:00
25DF41 0 S:01FF P:EnvMXdIzc HC:57766 VC:000 FC:00 I:00
25DF42 0 S:01FF P:EnvMXdIzc HC:57782 VC:000 FC:00 I:00
25DF44 0 S:01FF P:EnvMXdIzc HC:57798 VC:000 FC:00 I:00
25DF45 0 S:01FF P:EnvMXdIzc HC:57814 VC:000 FC:00 I:00
25DF47 0 S:01FF P:EnvMXdIzc HC:57830 VC:000 FC:00 I:00
25DF49 0 S:01FF P:EnvMXdIzc HC:57846 VC:000 FC:00 I:00
25DF4B 0 S:01FF P:EnvMXdIzc HC:57862 VC:000 FC:00 I:00
25DF4C 0 S:01FF P:EnvMXdIzc HC:57878 VC:000 FC:00 I:00
25DF4D 0 S:01FF P:EnvMXdIzc HC:57894 VC:000 FC:00 I:00
25DF4F 0 S:01FF P:EnvMXdIzc HC:57910 VC:000 FC:00 I:00
25DF50 0 S:01FF P:EnvMXdIzc HC:57926 VC:000 FC:00 I:00
25DF52 0 S:01FF P:EnvMXdIzc HC:57942 VC:000 FC:00 I:00
25DF54 0 S:01FF P:EnvMXdIzc HC:57958 VC:000 FC:00 I:00
25DF56 0 S:01FF P:EnvMXdIzc HC:57974 VC:000 FC:00 I:00
25DF57 0 S:01FF P:EnvMXdIzc HC:57990 VC:000 FC:00 I:00
25DF59 0 S:01FF P:EnvMXdIzc HC:58006 VC:000 FC:00 I:00
25DF5A 0 S:01FF P:EnvMXdIzc HC:58022 VC:000 FC:00 I:00
25DF5B 0 S:01FF P:EnvMXdIzc HC:58038 VC:000 FC:00 I:00
25DF5C 0 S:01FF P:EnvMXdIzc HC:58054 VC:000 FC:00 I:00
25DF63 0 S:01FF P:EnvMXdIzc HC:58118 VC:000 FC:00 I:00
25DF65 0 S:01FF P:EnvMXdIzc HC:58134 VC:000 FC:00 I:00
25DF67 0 S:01FF P:EnvMXdIzc HC:58150 VC:000 FC:00 I:00
25DF68 0 S:01FF P:EnvMXdIzc HC:58166 VC:000 FC:00 I:00
25DF69 0 S:01FF P:EnvMXdIzc HC:58182 VC:000 FC:00 I:00
25DF6B 0 S:01FF P:EnvMXdIzc HC:58198 VC:000 FC:00 I:00
25DF6C 0 S:01FF P:EnvMXdIzc HC:58214 VC:000 FC:00 I:00
25DF6E 0 S:01FF P:EnvMXdIzc HC:58230 VC:000 FC:00 I:00
25DF70 0 S:01FF P:EnvMXdIzc HC:58246 VC:000 FC:00 I:00
25DF72 0 S:01FF P:EnvMXdIzc HC:58262 VC:000 FC:00 I:00
25DF74 0 S:01FF P:EnvMXdIzc HC:58278 VC:000 FC:00 I:00
25DF76 0 S:01FF P:EnvMXdIzc HC:58294 VC:000 FC:00 I:00
25DF77 0 S:01FF P:EnvMXdIzc HC:58310 VC:000 FC:00 I:00
25DF78 0 S:01FF P:EnvMXdIzc HC:58326 VC:000 FC:00 I:00
25DF7A 0 S:01FF P:EnvMXdIzc HC:58342 VC:000 FC:00 I:00
25DF7B 0 S:01FF P:EnvMXdIzc HC:58358 VC:000 FC:00 I:00
25DF7D 0 S:01FF P:EnvMXdIzc HC:58374 VC:000 FC:00 I:00
25DF7F 0 S:01FF P:EnvMXdIzc HC:58390 VC:000 FC:00 I:00
25DF81 0 S:01FF P:EnvMXdIzc HC:58406 VC:000 FC:00 I:00
25DF82 0 S:01FF P:EnvMXdIzc HC:58422 VC:000 FC:00 I:00
25DF83 0 S:01FF P:EnvMXdIzc HC:58438 VC:000 FC:00 I:00
25DF85 0 S:01FF P:EnvMXdIzc HC:58454 VC:000 FC:00 I:00
25DF87 0 S:01FF P:EnvMXdIzc HC:58470 VC:000 FC:00 I:00
25DF89 0 S:01FF P:EnvMXdIzc HC:58486 VC:000 FC:00 I:00
25DF8B 0 S:01FF P:EnvMXdIzc HC:58502 VC:000 FC:00 I:00
25DF8C 0 S:01FF P:EnvMXdIzc HC:58518 VC:000 FC:00 I:00
25DF8E 0 S:01FF P:EnvMXdIzc HC:58534 VC:000 FC:00 I:00
25DF90 0 S:01FF P:EnvMXdIzc HC:58550 VC:000 FC:00 I:00
25DF92 0 S:01FF P:EnvMXdIzc HC:58566 VC:000 FC:00 I:00
25DF94 0 S:01FF P:EnvMXdIzc HC:58582 VC:000 FC:00 I:00
25DF96 0 S:01FF P:EnvMXdIzc HC:58598 VC:000 FC:00 I:00
25DF97 0 S:01FF P:EnvMXdIzc HC:58614 VC:000 FC:00 I:00
25DF98 0 S:01FF P:EnvMXdIzc HC:58630 VC:000 FC:00 I:00
25DF9A 0 S:01FF P:EnvMXdIzc HC:58646 VC:000 FC:00 I:00
25DF9B 0 S:01FF P:EnvMXdIzc HC:58662 VC:000 FC:00 I:00
25DF9D 0 S:01FF P:EnvMXdIzc HC:58678 VC:000 FC:00 I:00
25DFA1 0 S:01FF P:EnvMXdIzc HC:58694 VC:000 FC:00 I:00
25DFA3 0 S:01FF P:EnvMXdIzc HC:58710 VC:000 FC:00 I:00
25DFA7 0 S:01FF P:EnvMXdIzc HC:58726 VC:000 FC:00 I:00
25DFA8 0 S:01FF P:EnvMXdIzc HC:58742 VC:000 FC:00 I:00
25DFAA 0 S:01FF P:EnvMXdIzc HC:58758 VC:000 FC:00 I:00
25DFAB 0 S:01FF P:EnvMXdIzc HC:58774 VC:000 FC:00 I:00
25DFAD 0 S:01FF P:EnvMXdIzc HC:58790 VC:000 FC:00 I:00
25DFAF 0 S:01FF P:EnvMXdIzc HC:58806 VC:000 FC:00 I:00
25DFB3 0 S:01FF P:EnvMXdIzc HC:58822 VC:000 FC:00 I:00
25DFB7 0 S:01FF P:EnvMXdIzc HC:58838 VC:000 FC:00 I:00
25DFB9 0 S:01FF P:EnvMXdIzc HC:58854 VC:000 FC:00 I:00
25DFBB 0 S:01FF P:EnvMXdIzc HC:58870 VC:000 FC:00 I:00
25DFBE 0 S:01FF P:EnvMXDIzc HC:58910 VC:000 FC:00 I:00
25DFC1 0 S:01FF P:EnvMXDIzc HC:58926 VC:000 FC:00 I:00
25DFC2 0 S:01FF P:EnvMXDIzc HC:58942 VC:000 FC:00 I:00
25DFC4 0 S:01FF P:EnvMXDIzc HC:58958 VC:000 FC:00 I:00
25DFC5 0 S:01FF P:EnvMXDIzc HC:58974 VC:000 FC:00 I:00
25DFC8 0 S:01FF P:EnvMXDIzc HC:58990 VC:000 FC:00 I:00
25DFCC 0 S:01FF P:EnvMXDIzc HC:59006 VC:000 FC:00 I:00
25DFCE 0 S:01FF P:EnvMXDIzc HC:59022 VC:000 FC:00 I:00
25DFD2 0 S:01FF P:EnvMXDIzc HC:59070 VC:000 FC:00 I:00
25DFD5 0 S:01FF P:EnvMXDIzc HC:59086 VC:000 FC:00 I:00
25DFD7 0 S:01FF P:EnvMXDIzc HC:59102 VC:000 FC:00 I:00
25DFD9 0 S:01FF P:EnvMXDIzc HC:59118 VC:000 FC:00 I:00
25DFDB 0 S:01FF P:EnvMXDIzc HC:59134 VC:000 FC:00 I:00
25DFDC 0 S:01FF P:EnvMXDIzc HC:59150 VC:000 FC:00 I:00
25DFDD 0 S:01FF P:EnvMXDIzc HC:59166 VC:000 FC:00 I:00
25DFDF 0 S:01FF P:EnvMXDIzc HC:59182 VC:000 FC:00 I:00
25DFE0 0 S:01FF P:EnvMXDIzc HC:59198 VC:000 FC:00 I:00
25DFE2 0 S:01FF P:EnvMXDIzc HC:59214 VC:000 FC:00 I:00
25DFE4 0 S:01FF P:EnvMXDIzc HC:59230 VC:000 FC:00 I:00
25DFE6 0 S:01FF P:EnvMXDIzc HC:59246 VC:000 FC:00 I:00
25DFE7 0 S:01FF P:EnvMXDIzc HC:59262 VC:000 FC:00 I:00
25DFE9 0 S:01FF P:EnvMXDIzc HC:59278 VC:000 FC:00 I:00
25DFEB 0 S:01FF P:EnvMXDIzc HC:59294 VC:000 FC:00 I:00
25DFEC 0 S:01FF P:EnvMXDIzc HC:59310 VC:000 FC:00 I:00
25DFED 0 S:01FF P:EnvMXDIzc HC:59326 VC:000 FC:00 I:00
25DFEF 0 S:01FF P:EnvMXDIzc HC:59342 VC:000 FC:00 I:00
25DFF1 0 S:01FF P:EnvMXDIzc HC:59358 VC:000 FC:00 I:00
25DFF3 0 S:01FF P:EnvMXDIzc HC:59374 VC:000 FC:00 I:00
25DFF5 0 S:01FF P:EnvMXDIzc HC:59390 VC:000 FC:00 I:00
25DFF6 0 S:01FF P:EnvMXDIzc HC:59406 VC:000 FC:00 I:00
25DFF8 0 S:01FF P:EnvMXDIzc HC:59422 VC:000 FC:00 I:00
25DFFA 0 S:01FF P:EnvMXDIzc HC:59438 VC:000 FC:00 I:00
25DFFC 0 S:01FF P:EnvMXDIzc HC:59454 VC:000 FC:00 I:00
25DFFE 0 S:01FF P:EnvMXDIzc HC:59470 VC:000 FC:00 I:00
25E000 0 S:01FF P:EnvMXDIzc HC:59486 VC:000 FC:00 I:00
25E001 0 S:01FF P:EnvMXDIzc HC:59502 VC:000 FC:00 I:00
25E002 0 S:01FF P:EnvMXDIzc HC:59518 VC:000 FC:00 I:00
25E004 0 S:01FF P:EnvMXDIzc HC:59534 VC:000 FC:00 I:00
25E006 0 S:01FF P:EnvMXDIzc HC:59550 VC:000 FC:00 I:00
25E007 0 S:01FF P:EnvMXDIzc HC:59566 VC:000 FC:00 I:00
25E00A 0 S:01FF P:EnvMXDIzc HC:59582 VC:000 FC:00 I:00
25E00E 0 S:01FF P:EnvMXDIzc HC:59598 VC:000 FC:00 I:00
25E010 0 S:01FF P:EnvMXDIzc HC:59614 VC:000 FC:00 I:00
25E014 0 S:01FF P:EnvMXDIzc HC:59630 VC:000 FC:00 I:00
25E015 0 S:01FF P:EnvMXDIzc HC:59646 VC:000 FC:00 I:00
25E017 0 S:01FF P:EnvMXDIzc HC:59662 VC:000 FC:00 I:00
25E019 0 S:01FF P:EnvMXDIzc HC:59678 VC:000 FC:00 I:00
25E01A 0 S:01FF P:EnvMXDIzc HC:59694 VC:000 FC:00 I:00
25E01C 0 S:01FF P:EnvMXDIzc HC:59710 VC:000 FC:00 I:00
25E01E 0 S:01FF P:EnvMXDIzc HC:59726 VC:000 FC:00 I:00
25E020 0 S:01FF P:EnvMXDIzc HC:59742 VC:000 FC:00 I:00
25E022 0 S:01FF P:EnvMXDIzc HC:59758 VC:000 FC:00 I:00
25E023 0 S:01FF P:EnvMXDIzc HC:59774 VC:000 FC:00 I:00
25E025 0 S:01FF P:EnvMXDIzc HC:59790 VC:000 FC:00 I:00
25E027 0 S:01FF P:EnvMXDIzc HC:59806 VC:000 FC:00 I:00
25E029 0 S:01FF P:EnvMXDIzc HC:59822 VC:000 FC:00 I:00
25E02B 0 S:01FF P:EnvMXDIzc HC:59838 VC:000 FC:00 I:00
25E02D 0 S:01FF P:EnvMXDIzc HC:59854 VC:000 FC:00 I:00
25E02F 0 S:01FF P:EnvMXDIzc HC:59870 VC:000 FC:00 I:00
25E031 0 S:01FF P:EnvMXDIzc HC:59886 VC:000 FC:00 I:00
25E033 0 S:01FF P:EnvMXDIzc HC:59902 VC:000 FC:00 I:00
25E035 0 S:01FF P:EnvMXDIzc HC:59918 VC:000 FC:00 I:00
25E036 0 S:01FF P:EnvMXDIzc HC:59934 VC:000 FC:00 I:00
25E038 0 S:01FF P:EnvMXDIzc HC:59950 VC:000 FC:00 I:00
25E03A 0 S:01FF P:EnvMXDIzc HC:59966 VC:000 FC:00 I:00
25E03C 0 S:01FF P:EnvMXDIzc HC:59982 VC:000 FC:00 I:00
25F670 0 S:01FF P:EnvMXdIzc HC:0206 VC:000 FC:00 I:00
25F673 0 S:01FF P:EnvMXdIzc HC:0222 VC:000 FC:00 I:00
25F675 0 S:01FF P:EnvMXdIzc HC:0238 VC:000 FC:00 I:00
25F678 0 S:01FF P:EnvMXdIzc HC:0254 VC:000 FC:00 I:00
25F67A 0 S:01FF P:EnvMXdIzc HC:0270 VC:000 FC:00 I:00
25F67C 0 S:01FF P:EnvMXdIzc HC:0286 VC:000 FC:00 I:00
25F67E 0 S:01FF P:EnvMXdIzc HC:0302 VC:000 FC:00 I:00
25F681 0 S:01FF P:EnvMXdIzc HC:0318 VC:000 FC:00 I:00
25F683 0 S:01FF P:EnvMXdIzc HC:0334 VC:000 FC:00 I:00
25F685 0 S:01FF P:EnvMXdIzc HC:0350 VC:000 FC:00 I:00
25F687 0 S:01FF P:EnvMXdIzc HC:0366 VC:000 FC:00 I:00
25F689 0 S:01FF P:EnvMXdIzc HC:0382 VC:000 FC:00 I:00
25F68C 0 S:01FF P:EnvMXdIzc HC:0398 VC:000 FC:00 I:00
25F68E 0 S:01FF P:EnvMXdIzc HC:0414 VC:000 FC:00 I:00
25F691 0 S:01FF P:EnvMXdIzc HC:0430 VC:000 FC:00 I:00
25F693 0 S:01FF P:EnvMXdIzc HC:0446 VC:000 FC:00 I:00
25F695 0 S:01FF P:EnvMXdIzc HC:0462 VC:000 FC:00 I:00
25F697 0 S:01FF P:EnvMXdIzc HC:0478 VC:000 FC:00 I:00
25F699 0 S:01FF P:EnvMXdIzc HC:0494 VC:000 FC:00 I:00
25F69B 0 S:01FF P:EnvMXdIzc HC:0510 VC:000 FC:00 I:00
25F69D 0 S:01FF P:EnvMXdIzc HC:0526 VC:000 FC:00 I:00
25F69F 0 S:01FF P:EnvMXdIzc HC:0542 VC:000 FC:00 I:00
25F6A1 0 S:01FF P:EnvMXdIzc HC:0558 VC:000 FC:00 I:00
25F6A3 0 S:01FF P:EnvMXdIzc HC:0574 VC:000 FC:00 I:00
25F6A5 0 S:01FF P:EnvMXdIzc HC:0590 VC:000 FC:00 I:00
25F6A8 0 S:01FF P:EnvMXdIzc HC:0606 VC:000 FC:00 I:00
25F6AA 0 S:01FF P:EnvMXdIzc HC:0622 VC:000 FC:00 I:00
25F6AC 0 S:01FF P:EnvMXdIzc HC:0638 VC:000 FC:00 I:00
25F6AE 0 S:01FF P:EnvMXdIzc HC:0654 VC:000 FC:00 I:00
25F6B0 0 S:01FF P:EnvMXdIzc HC:0670 VC:000 FC:00 I:00
25F6B1 0 S:01FF P:EnvMXdIzc HC:0686 VC:000 FC:00 I:00
25F6B2 0 S:01FF P:EnvMXdIzc HC:0702 VC:000 FC:00 I:00
25F6B4 0 S:01FF P:EnvMXdIzc HC:0718 VC:000 FC:00 I:00
25F6B5 0 S:01FF P:EnvMXdIzc HC:0734 VC:000 FC:00 I:00
25F6B6 0 S:01FF P:EnvMXdIzc HC:0750 VC:000 FC:00 I:00
25F6B8 0 S:01FF P:EnvMXdIzc HC:0766 VC:000 FC:00 I:00
25F6B9 0 S:01FF P:EnvMXdIzc HC:0782 VC:000 FC:00 I:00
25F6BA 0 S:01FF P:EnvMXdIzc HC:0806 VC:000 FC:00 I:00
25F6BC 0 S:01FF P:EnvmXdIzc HC:0822 VC:000 FC:00 I:00
25F6BE 0 S:01FF P:EnvmXdIzc HC:0838 VC:000 FC:00 I:00
25F6C2 0 S:01FF P:EnvmXdIzc HC:0854 VC:000 FC:00 I:00
25F6C5 0 S:01FF P:EnvmXdIzc HC:0870 VC:000 FC:00 I:00
25F6C9 0 S:01FF P:EnvmXdIzc HC:0886 VC:000 FC:00 I:00
25F6CC 0 S:01FF P:EnvmXdIzc HC:0902 VC:000 FC:00 I:00
25F6D0 0 S:01FF P:EnvmXdIzc HC:0918 VC:000 FC:00 I:00
25F6D3 0 S:01FF P:EnvmXdIzc HC:0934 VC:000 FC:00 I:00
25F6D7 0 S:01FF P:EnvmXdIzc HC:0950 VC:000 FC:00 I:00
25F6DA 0 S:01FF P:EnvmXdIzc HC:0966 VC:000 FC:00 I:00
25F6DB 0 S:01FF P:EnvmXdIzc HC:0982 VC:000 FC:00 I:00
25F6DC 0 S:01FF P:EnvmXdIzc HC:0998 VC:000 FC:00 I:00
25F6DD 0 S:01FF P:EnvmXdIzc HC:1014 VC:000 FC:00 I:00
25F6DE 0 S:01FF P:EnvmXdIzc HC:1030 VC:000 FC:00 I:00
25F6E0 0 S:01FF P:EnvmXdIzc HC:1046 VC:000 FC:00 I:00
25F6E2 0 S:01FF P:EnvmXdIzc HC:1070 VC:000 FC:00 I:00
25F6E4 0 S:01FF P:EnvMXdIzc HC:1086 VC:000 FC:00 I:00
25F6E5 0 S:01FF P:EnvMXdIzc HC:1102 VC:000 FC:00 I:00
25F6E8 0 S:01FF P:EnvMXdIzc HC:1118 VC:000 FC:00 I:00
25F6EA 0 S:01FF P:EnvMXdIzc HC:1134 VC:000 FC:00 I:00
25F6ED 0 S:01FF P:EnvMXdIzc HC:1150 VC:000 FC:00 I:00
25F6EF 0 S:01FF P:EnvMXdIzc HC:1166 VC:000 FC:00 I:00
25F6F1 0 S:01FF P:EnvMXdIzc HC:1182 VC:000 FC:00 I:00
25F6F3 0 S:01FF P:EnvMXdIzc HC:1198 VC:000 FC:00 I:00
25F6F6 0 S:01FF P:EnvMXdIzc HC:1214 VC:000 FC:00 I:00
25F6F8 0 S:01FF P:EnvMXdIzc HC:1230 VC:000 FC:00 I:00
25F6FA 0 S:01FF P:EnvMXdIzc HC:1246 VC:000 FC:00 I:00
25F6FC 0 S:01FF P:EnvMXdIzc HC:1262 VC:000 FC:00 I:00
25F6FE 0 S:01FF P:EnvMXdIzc HC:1278 VC:000 FC:00 I:00
25F701 0 S:01FF P:EnvMXdIzc HC:1294 VC:000 FC:00 I:00
25F703 0 S:01FF P:EnvMXdIzc HC:1310 VC:000 FC:00 I:00
25F706 0 S:01FF P:EnvMXdIzc HC:1326 VC:000 FC:00 I:00
25F708 0 S:01FF P:EnvMXdIzc HC:1342 VC:000 FC:00 I:00
25F70A 0 S:01FF P:EnvMXdIzc HC:1358 VC:000 FC:00 I:00
25F70C 0 S:01FF P:EnvMXdIzc HC:1374 VC:000 FC:00 I:00
25F70E 0 S:01FF P:EnvMXdIzc HC:1390 VC:000 FC:00 I:00
25F710 0 S:01FF P:EnvMXdIzc HC:1406 VC:000 FC:00 I:00
25F712 0 S:01FF P:EnvMXdIzc HC:1422 VC:000 FC:00 I:00
25F714 0 S:01FF P:EnvMXdIzc HC:1438 VC:000 FC:00 I:00
25F716 0 S:01FF P:EnvMXdIzc HC:1454 VC:000 FC:00 I:00
25F718 0 S:01FF P:EnvMXdIzc HC:1470 VC:000 FC:00 I:00
25F71A 0 S:01FF P:EnvMXdIzc HC:1486 VC:000 FC:00 I:00
25F71D 0 S:01FF P:EnvMXdIzc HC:1502 VC:000 FC:00 I:00
25F71F 0 S:01FF P:EnvMXdIzc HC:1518 VC:000 FC:00 I:00
25F721 0 S:01FF P:EnvMXdIzc HC:1534 VC:000 FC:00 I:00
25F723 0 S:01FF P:EnvMXdIzc HC:1550 VC:000 FC:00 I:00
25F725 0 S:01FF P:EnvMXdIzc HC:1566 VC:000 FC:00 I:00
25F726 0 S:01FF P:EnvMXdIzc HC:1582 VC:000 FC:00 I:00
25F727 0 S:01FF P:EnvMXdIzc HC:1598 VC:000 FC:00 I:00
25F729 0 S:01FF P:EnvMXdIzc HC:1614 VC:000 FC:00 I:00
25F72A 0 S:01FF P:EnvMXdIzc HC:1630 VC:000 FC:00 I:00
25F72B 0 S:01FF P:EnvMXdIzc HC:1646 VC:000 FC:00 I:00
25F72D 0 S:01FF P:EnvMXdIzc HC:1662 VC:000 FC:00 I:00
25F72E 0 S:01FF P:EnvMXdIzc HC:1678 VC:000 FC:00 I:00
25F72F 0 S:01FF P:EnvMXdIzc HC:1702 VC:000 FC:00 I:00
25F731 0 S:01FF P:EnvmXdIzc HC:1718 VC:000 FC:00 I:00
25F733 0 S:01FF P:EnvmXdIzc HC:1734 VC:000 FC:00 I:00
25F737 0 S:01FF P:EnvmXdIzc HC:1750 VC:000 FC:00 I:00
25F73A 0 S:01FF P:EnvmXdIzc HC:1766 VC:000 FC:00 I:00
25F73E 0 S:01FF P:EnvmXdIzc HC:1782 VC:000 FC:00 I:00
25F741 0 S:01FF P:EnvmXdIzc HC:1798 VC:000 FC:00 I:00
25F745 0 S:01FF P:EnvmXdIzc HC:1814 VC:000 FC:00 I:00
25F748 0 S:01FF P:EnvmXdIzc HC:1830 VC:000 FC:00 I:00
25F74C 0 S:01FF P:EnvmXdIzc HC:1846 VC:000 FC:00 I:00
25F74F 0 S:01FF P:EnvmXdIzc HC:1862 VC:000 FC:00 I:00
25F750 0 S:01FF P:EnvmXdIzc HC:1878 VC:000 FC:00 I:00
25F751 0 S:01FF P:EnvmXdIzc HC:1894 VC:000 FC:00 I:00
25F752 0 S:01FF P:EnvmXdIzc HC:1910 VC:000 FC:00 I:00
25F753 0 S:01FF P:EnvmXdIzc HC:1926 VC:000 FC:00 I:00
25F755 0 S:01FF P:EnvmXdIzc HC:1942 VC:000 FC:00 I:00
25F757 0 S:01FF P:EnvmXdIzc HC:1966 VC:000 FC:00 I:00
25F759 0 S:01FF P:EnvMXdIzc HC:1982 VC:000 FC:00 I:00
25F75A 0 S:01FF P:EnvMXdIzc HC:1998 VC:000 FC:00 I:00
25F75C 0 S:01FF P:EnvMXdIzc HC:2014 VC:000 FC:00 I:00
25F75E 0 S:01FF P:EnvMXdIzc HC:2030 VC:000 FC:00 I:00
25F761 0 S:01FF P:EnvMXdIzc HC:2046 VC:000 FC:00 I:00
25F763 0 S:01FF P:EnvMXdIzc HC:2062 VC:000 FC:00 I:00
25F765 0 S:01FF P:EnvMXdIzc HC:2078 VC:000 FC:00 I:00
25F767 0 S:01FF P:EnvMXdIzc HC:2094 VC:000 FC:00 I:00
25F769 0 S:01FF P:EnvMXdIzc HC:2110 VC:000 FC:00 I:00
25F76B 0 S:01FF P:EnvMXdIzc HC:2126 VC:000 FC:00 I:00
25F76E 0 S:01FF P:EnvMXdIzc HC:2142 VC:000 FC:00 I:00
25F76F 0 S:01FF P:EnvMXdIzc HC:2158 VC:000 FC:00 I:00
25F771 0 S:01FF P:EnvMXdIzc HC:2174 VC:000 FC:00 I:00
25F772 0 S:01FF P:EnvMXdIzc HC:2190 VC:000 FC:00 I:00
25F775 0 S:01FF P:EnvMXdIzc HC:2206 VC:000 FC:00 I:00
25F777 0 S:01FF P:EnvMXdIzc HC:2222 VC:000 FC:00 I:00
25F779 0 S:01FF P:EnvMXdIzc HC:2238 VC:000 FC:00 I:00
25F77B 0 S:01FF P:EnvMXdIzc HC:2254 VC:000 FC:00 I:00
25F77D 0 S:01FF P:EnvMXdIzc HC:2270 VC:000 FC:00 I:00
25F77E 0 S:01FF P:EnvMXdIzc HC:2286 VC:000 FC:00 I:00
25F77F 0 S:01FF P:EnvMXdIzc HC:2302 VC:000 FC:00 I:00
25F781 0 S:01FF P:EnvMXdIzc HC:2318 VC:000 FC:00 I:00
25F782 0 S:01FF P:EnvMXdIzc HC:2334 VC:000 FC:00 I:00
25F783 0 S:01FF P:EnvMXdIzc HC:2358 VC:000 FC:00 I:00
25F785 0 S:01FF P:EnvmXdIzc HC:2374 VC:000 FC:00 I:00
25F789 0 S:01FF P:EnvmXdIzc HC:2390 VC:000 FC:00 I:00
25F78C 0 S:01FF P:EnvmXdIzc HC:2406 VC:000 FC:00 I:00
25F790 0 S:01FF P:EnvmXdIzc HC:2422 VC:000 FC:00 I:00
25F793 0 S:01FF P:EnvmXdIzc HC:2446 VC:000 FC:00 I:00
25F795 0 S:01FF P:EnvMXdIzc HC:2462 VC:000 FC:00 I:00
25F798 0 S:01FF P:EnvMXdIzc HC:2478 VC:000 FC:00 I:00
268830 0 S:01FF P:EnvMXdIzc HC:0206 VC:000 FC:00 I:00
268832 0 S:01FF P:EnvMXdIzc HC:0222 VC:000 FC:00 I:00
268834 0 S:01FF P:EnvMXdIzc HC:0238 VC:000 FC:00 I:00
268838 0 S:01FF P:EnvMXdIzc HC:0254 VC:000 FC:00 I:00
26883A 0 S:01FF P:EnvMXdIzc HC:0270 VC:000 FC:00 I:00
26883E 0 S:01FF P:EnvMXdIzc HC:0286 VC:000 FC:00 I:00
268840 0 S:01FF P:EnvMXdIzc HC:0302 VC:000 FC:00 I:00
268842 0 S:01FF P:EnvMXdIzc HC:0318 VC:000 FC:00 I:00
268844 0 S:01FF P:EnvMXdIzc HC:0334 VC:000 FC:00 I:00
268848 0 S:01FF P:EnvMXdIzc HC:0350 VC:000 FC:00 I:00
26884A 0 S:01FF P:EnvMXdIzc HC:0366 VC:000 FC:00 I:00
26884E 0 S:01FF P:EnvMXdIzc HC:0382 VC:000 FC:00 I:00
268850 0 S:01FF P:EnvMXdIzc HC:0398 VC:000 FC:00 I:00
268852 0 S:01FF P:EnvMXdIzc HC:0414 VC:000 FC:00 I:00
268854 0 S:01FF P:EnvMXdIzc HC:0430 VC:000 FC:00 I:00
268858 0 S:01FF P:EnvMXdIzc HC:0446 VC:000 FC:00 I:00
26885C 0 S:01FF P:EnvMXdIzc HC:0462 VC:000 FC:00 I:00
26885E 0 S:01FF P:EnvMXdIzc HC:0478 VC:000 FC:00 I:00
268860 0 S:01FF P:EnvMXdIzc HC:0494 VC:000 FC:00 I:00
268862 0 S:01FF P:EnvMXdIzc HC:0510 VC:000 FC:00 I:00
268866 0 S:01FF P:EnvMXdIzc HC:0526 VC:000 FC:00 I:00
268867 0 S:01FF P:EnvMXdIzc HC:0542 VC:000 FC:00 I:00
268869 0 S:01FF P:EnvMXdIzc HC:0558 VC:000 FC:00 I:00
26886D 0 S:01FF P:EnvMXdIzc HC:0574 VC:000 FC:00 I:00
26886E 0 S:01FF P:EnvMXdIzc HC:0590 VC:000 FC:00 I:00
268870 0 S:01FF P:EnvMXdIzc HC:0606 VC:000 FC:00 I:00
268872 0 S:01FF P:EnvMXdIzc HC:0622 VC:000 FC:00 I:00
268874 0 S:01FF P:EnvMXdIzc HC:0638 VC:000 FC:00 I:00
268878 0 S:01FF P:EnvMXdIzc HC:0654 VC:000 FC:00 I:00
268879 0 S:01FF P:EnvMXdIzc HC:0670 VC:000 FC:00 I:00
26887B 0 S:01FF P:EnvMXdIzc HC:0686 VC:000 FC:00 I:00
26887F 0 S:01FF P:EnvMXdIzc HC:0702 VC:000 FC:00 I:00
268880 0 S:01FF P:EnvMXdIzc HC:0718 VC:000 FC:00 I:00
268882 0 S:01FF P:EnvMXdIzc HC:0734 VC:000 FC:00 I:00
268884 0 S:01FF P:EnvMXdIzc HC:0750 VC:000 FC:00 I:00
268888 0 S:01FF P:EnvMXdIzc HC:0766 VC:000 FC:00 I:00
268891 0 S:01FF P:EnvMXdIzc HC:0846 VC:000 FC:00 I:00
268892 0 S:01FF P:EnvMXdIzc HC:0862 VC:000 FC:00 I:00
268895 0 S:01FF P:EnvMXdIzc HC:0878 VC:000 FC:00 I:00
268896 0 S:01FF P:EnvMXdIzc HC:0894 VC:000 FC:00 I:00
268897 0 S:01FF P:EnvMXdIzc HC:0910 VC:000 FC:00 I:00
268898 0 S:01FF P:EnvMXdIzc HC:0926 VC:000 FC:00 I:00
268899 0 S:01FF P:EnvMXdIzc HC:0942 VC:000 FC:00 I:00
26889A 0 S:01FF P:EnvMXdIzc HC:0958 VC:000 FC:00 I:00
26889B 0 S:01FF P:EnvMXdIzc HC:0974 VC:000 FC:00 I:00
26889E 0 S:01FF P:EnvMXdIzc HC:0990 VC:000 FC:00 I:00
26889F 0 S:01FF P:EnvMXdIzc HC:1006 VC:000 FC:00 I:00
2688A0 0 S:01FF P:EnvMXdIzc HC:1022 VC:000 FC:00 I:00
2688A1 0 S:01FF P:EnvMXdIzc HC:1038 VC:000 FC:00 I:00
2688A2 0 S:01FF P:EnvMXdIzc HC:1054 VC:000 FC:00 I:00
2688A3 0 S:01FF P:EnvMXdIzc HC:1070 VC:000 FC:00 I:00
2688A7 0 S:01FF P:EnvMXdIzc HC:1086 VC:000 FC:00 I:00
2688A8 0 S:01FF P:EnvMXdIzc HC:1102 VC:000 FC:00 I:00
2688A9 0 S:01FF P:EnvMXdIzc HC:1118 VC:000 FC:00 I:00
2688AA 0 S:01FF P:EnvMXdIzc HC:1134 VC:000 FC:00 I:00
26B028 0 S:01FF P:EnvMXdIzc HC:62982 VC:000 FC:00 I:00
26B02A 0 S:01FF P:EnvMXdIzc HC:62998 VC:000 FC:00 I:00
26B02C 0 S:01FF P:EnvMXdIzc HC:63014 VC:000 FC:00 I:00
26B030 0 S:01FF P:EnvMXdIzc HC:63030 VC:000 FC:00 I:00
26B034 0 S:01FF P:EnvMXdIzc HC:63046 VC:000 FC:00 I:00
26B036 0 S:01FF P:EnvMXdIzc HC:63062 VC:000 FC:00 I:00
26B038 0 S:01FF P:EnvMXdIzc HC:63078 VC:000 FC:00 I:00
26B03C 0 S:01FF P:EnvMXdIzc HC:63094 VC:000 FC:00 I:00
26B049 0 S:01FF P:EnvMXdIzc HC:63206 VC:000 FC:00 I:00
26B04A 0 S:01FF P:EnvMXdIzc HC:63222 VC:000 FC:00 I:00
26B04B 0 S:01FF P:EnvMXdIzc HC:63238 VC:000 FC:00 I:00
26B04C 0 S:01FF P:EnvMXdIzc HC:63254 VC:000 FC:00 I:00
26B04D 0 S:01FF P:EnvMXdIzc HC:63270 VC:000 FC:00 I:00
26B04E 0 S:01FF P:EnvMXdIzc HC:63286 VC:000 FC:00 I:00
26B04F 0 S:01FF P:EnvMXdIzc HC:63302 VC:000 FC:00 I:00
26B052 0 S:01FF P:EnvMXdIzc HC:63318 VC:000 FC:00 I:00
26B053 0 S:01FF P:EnvMXdIzc HC:63334 VC:000 FC:00 I:00
26B054 0 S:01FF P:EnvMXdIzc HC:63350 VC:000 FC:00 I:00
26B055 0 S:01FF P:EnvMXdIzc HC:63366 VC:000 FC:00 I:00
26B056 0 S:01FF P:EnvMXdIzc HC:63382 VC:000 FC:00 I:00
26B057 0 S:01FF P:EnvMXdIzc HC:63398 VC:000 FC:00 I:00
26B05B 0 S:01FF P:EnvMXdIzc HC:63414 VC:000 FC:00 I:00
26B05C 0 S:01FF P:EnvMXdIzc HC:63430 VC:000 FC:00 I:00
26B05D 0 S:01FF P:EnvMXdIzc HC:63446 VC:000 FC:00 I:00
26B05E 0 S:01FF P:EnvMXdIzc HC:63462 VC:000 FC:00 I:00
26B113 0 S:01FF P:EnvMXdIzc HC:56438 VC:000 FC:00 I:00
26B115 0 S:01FF P:EnvMXdIzc HC:56454 VC:000 FC:00 I:00
26B117 0 S:01FF P:EnvMXdIzc HC:56470 VC:000 FC:00 I:00
26B118 0 S:01FF P:EnvMXdIzc HC:56486 VC:000 FC:00 I:00
26B119 0 S:01FF P:EnvMXdIzc HC:56502 VC:000 FC:00 I:00
26B11C 0 S:01FF P:EnvMXdIzc HC:56518 VC:000 FC:00 I:00
26B11D 0 S:01FF P:EnvMXdIzc HC:56534 VC:000 FC:00 I:00          
26B1C2 0 S:01FF P:EnvMXdIzc HC:56550 VC:000 FC:00 I:00
26B1C5 0 S:01FF P:EnvMXdIzc HC:56566 VC:000 FC:00 I:00
26B1C7 0 S:01FF P:EnvMXdIzc HC:56582 VC:000 FC:00 I:00
26B1C9 0 S:01FF P:EnvMXdIzc HC:56598 VC:000 FC:00 I:00
26B1CB 0 S:01FF P:EnvMXdIzc HC:56614 VC:000 FC:00 I:00
26B1CE 0 S:01FF P:EnvMXdIzc HC:56630 VC:000 FC:00 I:00
26B1D2 0 S:01FF P:EnvMXdIzc HC:56646 VC:000 FC:00 I:00
26B1D4 0 S:01FF P:EnvMXdIzc HC:56662 VC:000 FC:00 I:00
26B1D8 0 S:01FF P:EnvMXdIzc HC:56678 VC:000 FC:00 I:00
26B1DA 0 S:01FF P:EnvMXdIzc HC:56694 VC:000 FC:00 I:00
26B1DC 0 S:01FF P:EnvMXdIzc HC:56710 VC:000 FC:00 I:00
26B1E0 0 S:01FF P:EnvMXdIzc HC:56726 VC:000 FC:00 I:00
26B1E2 0 S:01FF P:EnvMXdIzc HC:56742 VC:000 FC:00 I:00
26B1E6 0 S:01FF P:EnvMXdIzc HC:56758 VC:000 FC:00 I:00
26B1E8 0 S:01FF P:EnvMXdIzc HC:56774 VC:000 FC:00 I:00
26B1EA 0 S:01FF P:EnvMXdIzc HC:56790 VC:000 FC:00 I:00
26B1EE 0 S:01FF P:EnvMXdIzc HC:56806 VC:000 FC:00 I:00
26B1F0 0 S:01FF P:EnvMXdIzc HC:56822 VC:000 FC:00 I:00
26B1F4 0 S:01FF P:EnvMXdIzc HC:56838 VC:000 FC:00 I:00
26B1F6 0 S:01FF P:EnvMXdIzc HC:56854 VC:000 FC:00 I:00
26B1F8 0 S:01FF P:EnvMXdIzc HC:56870 VC:000 FC:00 I:00
26B1FC 0 S:01FF P:EnvMXdIzc HC:56886 VC:000 FC:00 I:00
26B1FE 0 S:01FF P:EnvMXdIzc HC:56902 VC:000 FC:00 I:00
26B1FF 0 S:01FF P:EnvMXdIzc HC:56918 VC:000 FC:00 I:00
26B202 0 S:01FF P:EnvMXdIzc HC:56934 VC:000 FC:00 I:00
26B204 0 S:01FF P:EnvMXdIzc HC:56950 VC:000 FC:00 I:00
26B207 0 S:01FF P:EnvMXdIzc HC:56966 VC:000 FC:00 I:00
26B208 0 S:01FF P:EnvMXdIzc HC:56982 VC:000 FC:00 I:00
26B20A 0 S:01FF P:EnvMXdIzc HC:56998 VC:000 FC:00 I:00
26B20B 0 S:01FF P:EnvMXdIzc HC:57014 VC:000 FC:00 I:00
26B20C 0 S:01FF P:EnvMXdIzc HC:57030 VC:000 FC:00 I:00
26B20D 0 S:01FF P:EnvMXdIzc HC:57046 VC:000 FC:00 I:00
26B20E 0 S:01FF P:EnvMXdIzc HC:57062 VC:000 FC:00 I:00
26B20F 0 S:01FF P:EnvMXdIzc HC:57078 VC:000 FC:00 I:00
26B212 0 S:01FF P:EnvMXdIzc HC:57094 VC:000 FC:00 I:00
26B215 0 S:01FF P:EnvMXdIzc HC:57110 VC:000 FC:00 I:00
26B217 0 S:01FF P:EnvMXdIzc HC:57126 VC:000 FC:00 I:00
26B218 0 S:01FF P:EnvMXdIzc HC:57142 VC:000 FC:00 I:00
26B21B 0 S:01FF P:EnvMXdIzc HC:57158 VC:000 FC:00 I:00
26B21D 0 S:01FF P:EnvMXdIzc HC:57174 VC:000 FC:00 I:00
26B21F 0 S:01FF P:EnvMXdIzc HC:57190 VC:000 FC:00 I:00
26B222 0 S:01FF P:EnvMXdIzc HC:57206 VC:000 FC:00 I:00
26B224 0 S:01FF P:EnvMXdIzc HC:57222 VC:000 FC:00 I:00
26B226 0 S:01FF P:EnvMXdIzc HC:57238 VC:000 FC:00 I:00
26B227 0 S:01FF P:EnvMXdIzc HC:57254 VC:000 FC:00 I:00
26B228 0 S:01FF P:EnvMXdIzc HC:57270 VC:000 FC:00 I:00
26B22A 0 S:01FF P:EnvMXdIzc HC:57286 VC:000 FC:00 I:00
26B22B 0 S:01FF P:EnvMXdIzc HC:57302 VC:000 FC:00 I:00
26B22D 0 S:01FF P:EnvMXdIzc HC:57318 VC:000 FC:00 I:00
26B22F 0 S:01FF P:EnvMXdIzc HC:57334 VC:000 FC:00 I:00
26B231 0 S:01FF P:EnvMXdIzc HC:57350 VC:000 FC:00 I:00
26B232 0 S:01FF P:EnvMXdIzc HC:57366 VC:000 FC:00 I:00
26B234 0 S:01FF P:EnvMXdIzc HC:57382 VC:000 FC:00 I:00
26B236 0 S:01FF P:EnvMXdIzc HC:57398 VC:000 FC:00 I:00
26B238 0 S:01FF P:EnvMXdIzc HC:57414 VC:000 FC:00 I:00
26B239 0 S:01FF P:EnvMXdIzc HC:57430 VC:000 FC:00 I:00
26B23A 0 S:01FF P:EnvMXdIzc HC:57446 VC:000 FC:00 I:00
26B23C 0 S:01FF P:EnvMXdIzc HC:57462 VC:000 FC:00 I:00
26B23D 0 S:01FF P:EnvMXdIzc HC:57478 VC:000 FC:00 I:00
26B23F 0 S:01FF P:EnvMXdIzc HC:57494 VC:000 FC:00 I:00
26B241 0 S:01FF P:EnvMXdIzc HC:57510 VC:000 FC:00 I:00
26B243 0 S:01FF P:EnvMXdIzc HC:57526 VC:000 FC:00 I:00
26B244 0 S:01FF P:EnvMXdIzc HC:57542 VC:000 FC:00 I:00
26B246 0 S:01FF P:EnvMXdIzc HC:57558 VC:000 FC:00 I:00
26B248 0 S:01FF P:EnvMXdIzc HC:57574 VC:000 FC:00 I:00
26B24A 0 S:01FF P:EnvMXdIzc HC:57590 VC:000 FC:00 I:00
26B24B 0 S:01FF P:EnvMXdIzc HC:57606 VC:000 FC:00 I:00
26B24D 0 S:01FF P:EnvMXdIzc HC:57622 VC:000 FC:00 I:00
26B24F 0 S:01FF P:EnvMXdIzc HC:57638 VC:000 FC:00 I:00
26B251 0 S:01FF P:EnvMXdIzc HC:57654 VC:000 FC:00 I:00
26B253 0 S:01FF P:EnvMXdIzc HC:57670 VC:000 FC:00 I:00
26B256 0 S:01FF P:EnvMXdIzc HC:57686 VC:000 FC:00 I:00
26B258 0 S:01FF P:EnvMXdIzc HC:57702 VC:000 FC:00 I:00
26B25A 0 S:01FF P:EnvMXdIzc HC:57718 VC:000 FC:00 I:00
26B25C 0 S:01FF P:EnvMXdIzc HC:57734 VC:000 FC:00 I:00
26B260 0 S:01FF P:EnvMXdIzc HC:57750 VC:000 FC:00 I:00
26B262 0 S:01FF P:EnvMXdIzc HC:57766 VC:000 FC:00 I:00
26B264 0 S:01FF P:EnvMXdIzc HC:57782 VC:000 FC:00 I:00
26B266 0 S:01FF P:EnvMXdIzc HC:57798 VC:000 FC:00 I:00
26B268 0 S:01FF P:EnvMXdIzc HC:57814 VC:000 FC:00 I:00
26B26B 0 S:01FF P:EnvMXdIzc HC:57830 VC:000 FC:00 I:00
26B26F 0 S:01FF P:EnvMXdIzc HC:57846 VC:000 FC:00 I:00
26B272 0 S:01FF P:EnvMXdIzc HC:57862 VC:000 FC:00 I:00
26B274 0 S:01FF P:EnvMXdIzc HC:57878 VC:000 FC:00 I:00
26B276 0 S:01FF P:EnvMXdIzc HC:57894 VC:000 FC:00 I:00
26B278 0 S:01FF P:EnvMXdIzc HC:57910 VC:000 FC:00 I:00
26B27A 0 S:01FF P:EnvMXdIzc HC:57926 VC:000 FC:00 I:00
26B27C 0 S:01FF P:EnvMXdIzc HC:57942 VC:000 FC:00 I:00
26B27E 0 S:01FF P:EnvMXdIzc HC:57958 VC:000 FC:00 I:00
26B287 0 S:01FF P:EnvMXdIzc HC:58022 VC:000 FC:00 I:00
26B289 0 S:01FF P:EnvMXdIzc HC:58038 VC:000 FC:00 I:00
26B28B 0 S:01FF P:EnvMXdIzc HC:58054 VC:000 FC:00 I:00
26B28D 0 S:01FF P:EnvMXdIzc HC:58070 VC:000 FC:00 I:00
26B28F 0 S:01FF P:EnvMXdIzc HC:58086 VC:000 FC:00 I:00
26B292 0 S:01FF P:EnvMXdIzc HC:58102 VC:000 FC:00 I:00
26B294 0 S:01FF P:EnvMXdIzc HC:58118 VC:000 FC:00 I:00
26B296 0 S:01FF P:EnvMXdIzc HC:58134 VC:000 FC:00 I:00
26B298 0 S:01FF P:EnvMXdIzc HC:58150 VC:000 FC:00 I:00
26B29A 0 S:01FF P:EnvMXdIzc HC:58166 VC:000 FC:00 I:00
26B29C 0 S:01FF P:EnvMXdIzc HC:58182 VC:000 FC:00 I:00
26B29F 0 S:01FF P:EnvMXdIzc HC:58198 VC:000 FC:00 I:00
26B2A3 0 S:01FF P:EnvMXdIzc HC:58214 VC:000 FC:00 I:00
26B2A5 0 S:01FF P:EnvMXdIzc HC:58230 VC:000 FC:00 I:00
26B2A6 0 S:01FF P:EnvMXdIzc HC:58246 VC:000 FC:00 I:00
26B2A7 0 S:01FF P:EnvMXdIzc HC:58262 VC:000 FC:00 I:00
26B2A9 0 S:01FF P:EnvMXdIzc HC:58278 VC:000 FC:00 I:00
26B2AA 0 S:01FF P:EnvMXdIzc HC:58294 VC:000 FC:00 I:00
26B2AC 0 S:01FF P:EnvMXdIzc HC:58310 VC:000 FC:00 I:00
26B2AE 0 S:01FF P:EnvMXdIzc HC:58326 VC:000 FC:00 I:00
26B2B0 0 S:01FF P:EnvMXdIzc HC:58342 VC:000 FC:00 I:00
26B2B2 0 S:01FF P:EnvMXdIzc HC:58358 VC:000 FC:00 I:00
26B2B4 0 S:01FF P:EnvMXdIzc HC:58374 VC:000 FC:00 I:00
26B2B8 0 S:01FF P:EnvMXdIzc HC:58390 VC:000 FC:00 I:00
26B2BA 0 S:01FF P:EnvMXdIzc HC:58406 VC:000 FC:00 I:00
26B2BB 0 S:01FF P:EnvMXdIzc HC:58422 VC:000 FC:00 I:00
26B2BC 0 S:01FF P:EnvMXdIzc HC:58438 VC:000 FC:00 I:00
26B2BE 0 S:01FF P:EnvMXdIzc HC:58454 VC:000 FC:00 I:00
26B2BF 0 S:01FF P:EnvMXdIzc HC:58470 VC:000 FC:00 I:00
26B2C1 0 S:01FF P:EnvMXdIzc HC:58486 VC:000 FC:00 I:00
26B2C3 0 S:01FF P:EnvMXdIzc HC:58502 VC:000 FC:00 I:00
26B2C5 0 S:01FF P:EnvMXdIzc HC:58518 VC:000 FC:00 I:00
26B2C7 0 S:01FF P:EnvMXdIzc HC:58534 VC:000 FC:00 I:00
26B2C9 0 S:01FF P:EnvMXdIzc HC:58550 VC:000 FC:00 I:00
26B2CD 0 S:01FF P:EnvMXdIzc HC:58566 VC:000 FC:00 I:00
26B2CF 0 S:01FF P:EnvMXdIzc HC:58582 VC:000 FC:00 I:00
26B2D0 0 S:01FF P:EnvMXdIzc HC:58598 VC:000 FC:00 I:00
26B2D1 0 S:01FF P:EnvMXdIzc HC:58614 VC:000 FC:00 I:00
26B2D3 0 S:01FF P:EnvMXdIzc HC:58630 VC:000 FC:00 I:00
26B2D4 0 S:01FF P:EnvMXdIzc HC:58646 VC:000 FC:00 I:00
26B2D6 0 S:01FF P:EnvMXdIzc HC:58662 VC:000 FC:00 I:00
26B2D8 0 S:01FF P:EnvMXdIzc HC:58678 VC:000 FC:00 I:00
26B2DA 0 S:01FF P:EnvMXdIzc HC:58694 VC:000 FC:00 I:00
26B2DC 0 S:01FF P:EnvMXdIzc HC:58710 VC:000 FC:00 I:00
26B2DE 0 S:01FF P:EnvMXdIzc HC:58726 VC:000 FC:00 I:00
26B2E2 0 S:01FF P:EnvMXdIzc HC:58742 VC:000 FC:00 I:00
26B2E4 0 S:01FF P:EnvMXdIzc HC:58758 VC:000 FC:00 I:00
26B2E6 0 S:01FF P:EnvMXdIzc HC:58774 VC:000 FC:00 I:00
26B2E8 0 S:01FF P:EnvMXdIzc HC:58790 VC:000 FC:00 I:00
26B2EA 0 S:01FF P:EnvMXdIzc HC:58806 VC:000 FC:00 I:00
26B2EC 0 S:01FF P:EnvMXdIzc HC:58822 VC:000 FC:00 I:00
26B2EF 0 S:01FF P:EnvMXdIzc HC:58838 VC:000 FC:00 I:00
26B2F3 0 S:01FF P:EnvMXdIzc HC:58854 VC:000 FC:00 I:00
26B2F6 0 S:01FF P:EnvMXdIzc HC:58870 VC:000 FC:00 I:00
26B2F7 0 S:01FF P:EnvMXdIzc HC:58886 VC:000 FC:00 I:00
26B2F9 0 S:01FF P:EnvMXdIzc HC:58902 VC:000 FC:00 I:00
26B2FB 0 S:01FF P:EnvMXdIzc HC:58918 VC:000 FC:00 I:00
26B2FC 0 S:01FF P:EnvMXdIzc HC:58934 VC:000 FC:00 I:00
26B2FF 0 S:01FF P:EnvMXdIzc HC:58950 VC:000 FC:00 I:00
26B301 0 S:01FF P:EnvMXdIzc HC:58966 VC:000 FC:00 I:00
26B302 0 S:01FF P:EnvMXdIzc HC:58982 VC:000 FC:00 I:00
26B305 0 S:01FF P:EnvMXdIzc HC:58998 VC:000 FC:00 I:00
26B307 0 S:01FF P:EnvMXdIzc HC:59014 VC:000 FC:00 I:00
26B309 0 S:01FF P:EnvMXdIzc HC:59030 VC:000 FC:00 I:00
26B30C 0 S:01FF P:EnvMXdIzc HC:59046 VC:000 FC:00 I:00
26B30E 0 S:01FF P:EnvMXdIzc HC:59062 VC:000 FC:00 I:00
26B310 0 S:01FF P:EnvMXdIzc HC:59078 VC:000 FC:00 I:00
26B314 0 S:01FF P:EnvMXdIzc HC:59094 VC:000 FC:00 I:00
26B315 0 S:01FF P:EnvMXdIzc HC:59110 VC:000 FC:00 I:00
26B317 0 S:01FF P:EnvMXdIzc HC:59126 VC:000 FC:00 I:00
26B318 0 S:01FF P:EnvMXdIzc HC:59142 VC:000 FC:00 I:00
26B31B 0 S:01FF P:EnvMXdIzc HC:59158 VC:000 FC:00 I:00
26B31D 0 S:01FF P:EnvMXdIzc HC:59174 VC:000 FC:00 I:00
26B31E 0 S:01FF P:EnvMXdIzc HC:59190 VC:000 FC:00 I:00
26B321 0 S:01FF P:EnvMXdIzc HC:59206 VC:000 FC:00 I:00
26B323 0 S:01FF P:EnvMXdIzc HC:59222 VC:000 FC:00 I:00
26B325 0 S:01FF P:EnvMXdIzc HC:59238 VC:000 FC:00 I:00
26B327 0 S:01FF P:EnvMXdIzc HC:59254 VC:000 FC:00 I:00
26B329 0 S:01FF P:EnvMXdIzc HC:59270 VC:000 FC:00 I:00
26B32D 0 S:01FF P:EnvMXdIzc HC:59286 VC:000 FC:00 I:00
26B32E 0 S:01FF P:EnvMXdIzc HC:59302 VC:000 FC:00 I:00
26B330 0 S:01FF P:EnvMXdIzc HC:59318 VC:000 FC:00 I:00
26B332 0 S:01FF P:EnvMXdIzc HC:59334 VC:000 FC:00 I:00
26B334 0 S:01FF P:EnvMXdIzc HC:59350 VC:000 FC:00 I:00
26B335 0 S:01FF P:EnvMXdIzc HC:59366 VC:000 FC:00 I:00
26B338 0 S:01FF P:EnvMXdIzc HC:59382 VC:000 FC:00 I:00
26B33A 0 S:01FF P:EnvMXdIzc HC:59398 VC:000 FC:00 I:00
26B33B 0 S:01FF P:EnvMXdIzc HC:59414 VC:000 FC:00 I:00
26B33E 0 S:01FF P:EnvMXdIzc HC:59430 VC:000 FC:00 I:00
26B340 0 S:01FF P:EnvMXdIzc HC:59446 VC:000 FC:00 I:00
26B342 0 S:01FF P:EnvMXdIzc HC:59462 VC:000 FC:00 I:00
26B343 0 S:01FF P:EnvMXdIzc HC:59478 VC:000 FC:00 I:00
26B344 0 S:01FF P:EnvMXdIzc HC:59494 VC:000 FC:00 I:00
26B346 0 S:01FF P:EnvMXdIzc HC:59510 VC:000 FC:00 I:00
26B347 0 S:01FF P:EnvMXdIzc HC:59526 VC:000 FC:00 I:00
26B349 0 S:01FF P:EnvMXdIzc HC:59542 VC:000 FC:00 I:00
26B34B 0 S:01FF P:EnvMXdIzc HC:59558 VC:000 FC:00 I:00
26B34D 0 S:01FF P:EnvMXdIzc HC:59574 VC:000 FC:00 I:00
26B34E 0 S:01FF P:EnvMXdIzc HC:59590 VC:000 FC:00 I:00
26B350 0 S:01FF P:EnvMXdIzc HC:59606 VC:000 FC:00 I:00
26B352 0 S:01FF P:EnvMXdIzc HC:59622 VC:000 FC:00 I:00
26B354 0 S:01FF P:EnvMXdIzc HC:59638 VC:000 FC:00 I:00
26B355 0 S:01FF P:EnvMXdIzc HC:59654 VC:000 FC:00 I:00
26B358 0 S:01FF P:EnvMXdIzc HC:59670 VC:000 FC:00 I:00
26B35A 0 S:01FF P:EnvMXdIzc HC:59686 VC:000 FC:00 I:00
26B35B 0 S:01FF P:EnvMXdIzc HC:59702 VC:000 FC:00 I:00
26B35E 0 S:01FF P:EnvMXdIzc HC:59718 VC:000 FC:00 I:00
26B360 0 S:01FF P:EnvMXdIzc HC:59734 VC:000 FC:00 I:00
26B362 0 S:01FF P:EnvMXdIzc HC:59750 VC:000 FC:00 I:00
26B365 0 S:01FF P:EnvMXdIzc HC:59766 VC:000 FC:00 I:00
26B367 0 S:01FF P:EnvMXdIzc HC:59782 VC:000 FC:00 I:00
26B369 0 S:01FF P:EnvMXdIzc HC:59798 VC:000 FC:00 I:00
26B36A 0 S:01FF P:EnvMXdIzc HC:59814 VC:000 FC:00 I:00
26B36B 0 S:01FF P:EnvMXdIzc HC:59830 VC:000 FC:00 I:00
26B36D 0 S:01FF P:EnvMXdIzc HC:59846 VC:000 FC:00 I:00
26B36E 0 S:01FF P:EnvMXdIzc HC:59862 VC:000 FC:00 I:00
26B370 0 S:01FF P:EnvMXdIzc HC:59878 VC:000 FC:00 I:00
26B372 0 S:01FF P:EnvMXdIzc HC:59894 VC:000 FC:00 I:00
26B374 0 S:01FF P:EnvMXdIzc HC:59910 VC:000 FC:00 I:00
26B375 0 S:01FF P:EnvMXdIzc HC:59926 VC:000 FC:00 I:00
26B377 0 S:01FF P:EnvMXdIzc HC:59942 VC:000 FC:00 I:00
26B378 0 S:01FF P:EnvMXdIzc HC:59958 VC:000 FC:00 I:00
26B37B 0 S:01FF P:EnvMXdIzc HC:59974 VC:000 FC:00 I:00
26B37D 0 S:01FF P:EnvMXdIzc HC:59990 VC:000 FC:00 I:00
26B37E 0 S:01FF P:EnvMXdIzc HC:60006 VC:000 FC:00 I:00
26B381 0 S:01FF P:EnvMXdIzc HC:60022 VC:000 FC:00 I:00
26B383 0 S:01FF P:EnvMXdIzc HC:60038 VC:000 FC:00 I:00
26B385 0 S:01FF P:EnvMXdIzc HC:60054 VC:000 FC:00 I:00
26B389 0 S:01FF P:EnvMXdIzc HC:60070 VC:000 FC:00 I:00
26B38A 0 S:01FF P:EnvMXdIzc HC:60086 VC:000 FC:00 I:00
26B38C 0 S:01FF P:EnvMXdIzc HC:60102 VC:000 FC:00 I:00
26B38D 0 S:01FF P:EnvMXdIzc HC:60118 VC:000 FC:00 I:00
26B390 0 S:01FF P:EnvMXdIzc HC:60134 VC:000 FC:00 I:00
26B392 0 S:01FF P:EnvMXdIzc HC:60150 VC:000 FC:00 I:00
26B393 0 S:01FF P:EnvMXdIzc HC:60166 VC:000 FC:00 I:00
26B396 0 S:01FF P:EnvMXdIzc HC:60182 VC:000 FC:00 I:00
26B398 0 S:01FF P:EnvMXdIzc HC:60198 VC:000 FC:00 I:00
26B39A 0 S:01FF P:EnvMXdIzc HC:60214 VC:000 FC:00 I:00
26B39C 0 S:01FF P:EnvMXdIzc HC:60230 VC:000 FC:00 I:00
26B39E 0 S:01FF P:EnvMXdIzc HC:60246 VC:000 FC:00 I:00
26B3A1 0 S:01FF P:EnvMXdIzc HC:60262 VC:000 FC:00 I:00
26B3A3 0 S:01FF P:EnvMXdIzc HC:60278 VC:000 FC:00 I:00
26B3A5 0 S:01FF P:EnvMXdIzc HC:60294 VC:000 FC:00 I:00
26B3A8 0 S:01FF P:EnvMXdIzc HC:60310 VC:000 FC:00 I:00
26B3AA 0 S:01FF P:EnvMXdIzc HC:60326 VC:000 FC:00 I:00
26B3AC 0 S:01FF P:EnvMXdIzc HC:60342 VC:000 FC:00 I:00
26B3AD 0 S:01FF P:EnvMXdIzc HC:60358 VC:000 FC:00 I:00
26B3AE 0 S:01FF P:EnvMXdIzc HC:60374 VC:000 FC:00 I:00
26B3B0 0 S:01FF P:EnvMXdIzc HC:60390 VC:000 FC:00 I:00
26B3B1 0 S:01FF P:EnvMXdIzc HC:60406 VC:000 FC:00 I:00
26B3B3 0 S:01FF P:EnvMXdIzc HC:60422 VC:000 FC:00 I:00
26B3B5 0 S:01FF P:EnvMXdIzc HC:60438 VC:000 FC:00 I:00
26B3B7 0 S:01FF P:EnvMXdIzc HC:60454 VC:000 FC:00 I:00
26B3B8 0 S:01FF P:EnvMXdIzc HC:60470 VC:000 FC:00 I:00
26B3BA 0 S:01FF P:EnvMXdIzc HC:60486 VC:000 FC:00 I:00
26B3BC 0 S:01FF P:EnvMXdIzc HC:60502 VC:000 FC:00 I:00
26B3BE 0 S:01FF P:EnvMXdIzc HC:60518 VC:000 FC:00 I:00
26B3C0 0 S:01FF P:EnvMXdIzc HC:60534 VC:000 FC:00 I:00
26B3C2 0 S:01FF P:EnvMXdIzc HC:60550 VC:000 FC:00 I:00
26B3C5 0 S:01FF P:EnvMXdIzc HC:60566 VC:000 FC:00 I:00
26B3C7 0 S:01FF P:EnvMXdIzc HC:60582 VC:000 FC:00 I:00
26B3C9 0 S:01FF P:EnvMXdIzc HC:60598 VC:000 FC:00 I:00
26B3CA 0 S:01FF P:EnvMXdIzc HC:60614 VC:000 FC:00 I:00
26B3CD 0 S:01FF P:EnvMXdIzc HC:60630 VC:000 FC:00 I:00
26B3CF 0 S:01FF P:EnvMXdIzc HC:60646 VC:000 FC:00 I:00
26B3D0 0 S:01FF P:EnvMXdIzc HC:60662 VC:000 FC:00 I:00
26B3D3 0 S:01FF P:EnvMXdIzc HC:60678 VC:000 FC:00 I:00
26B3D5 0 S:01FF P:EnvMXdIzc HC:60694 VC:000 FC:00 I:00
26B3D7 0 S:01FF P:EnvMXdIzc HC:60710 VC:000 FC:00 I:00
26B3D9 0 S:01FF P:EnvMXdIzc HC:60726 VC:000 FC:00 I:00
26B3DB 0 S:01FF P:EnvMXdIzc HC:60742 VC:000 FC:00 I:00
26B3DE 0 S:01FF P:EnvMXdIzc HC:60758 VC:000 FC:00 I:00
26B3E0 0 S:01FF P:EnvMXdIzc HC:60774 VC:000 FC:00 I:00
26B3E2 0 S:01FF P:EnvMXdIzc HC:60790 VC:000 FC:00 I:00
26B3E5 0 S:01FF P:EnvMXdIzc HC:60806 VC:000 FC:00 I:00
26B3E7 0 S:01FF P:EnvMXdIzc HC:60822 VC:000 FC:00 I:00
26B3E9 0 S:01FF P:EnvMXdIzc HC:60838 VC:000 FC:00 I:00
26B3EA 0 S:01FF P:EnvMXdIzc HC:60854 VC:000 FC:00 I:00
26B3EB 0 S:01FF P:EnvMXdIzc HC:60870 VC:000 FC:00 I:00
26B3ED 0 S:01FF P:EnvMXdIzc HC:60886 VC:000 FC:00 I:00
26B3EE 0 S:01FF P:EnvMXdIzc HC:60902 VC:000 FC:00 I:00
26B3F0 0 S:01FF P:EnvMXdIzc HC:60918 VC:000 FC:00 I:00
26B3F2 0 S:01FF P:EnvMXdIzc HC:60934 VC:000 FC:00 I:00
26B3F4 0 S:01FF P:EnvMXdIzc HC:60950 VC:000 FC:00 I:00
26B3F5 0 S:01FF P:EnvMXdIzc HC:60966 VC:000 FC:00 I:00
26B3F7 0 S:01FF P:EnvMXdIzc HC:60982 VC:000 FC:00 I:00
26B3F9 0 S:01FF P:EnvMXdIzc HC:60998 VC:000 FC:00 I:00
26B3FB 0 S:01FF P:EnvMXdIzc HC:61014 VC:000 FC:00 I:00
26B3FD 0 S:01FF P:EnvMXdIzc HC:61030 VC:000 FC:00 I:00
26B3FF 0 S:01FF P:EnvMXdIzc HC:61046 VC:000 FC:00 I:00
26B402 0 S:01FF P:EnvMXdIzc HC:61062 VC:000 FC:00 I:00
26B404 0 S:01FF P:EnvMXdIzc HC:61078 VC:000 FC:00 I:00
26B406 0 S:01FF P:EnvMXdIzc HC:61094 VC:000 FC:00 I:00
26B407 0 S:01FF P:EnvMXdIzc HC:61110 VC:000 FC:00 I:00
26B408 0 S:01FF P:EnvMXdIzc HC:61126 VC:000 FC:00 I:00
26B40B 0 S:01FF P:EnvMXdIzc HC:61142 VC:000 FC:00 I:00
26B40D 0 S:01FF P:EnvMXdIzc HC:61158 VC:000 FC:00 I:00
26B40E 0 S:01FF P:EnvMXdIzc HC:61174 VC:000 FC:00 I:00
26B411 0 S:01FF P:EnvMXdIzc HC:61190 VC:000 FC:00 I:00
26B413 0 S:01FF P:EnvMXdIzc HC:61206 VC:000 FC:00 I:00
26B415 0 S:01FF P:EnvMXdIzc HC:61222 VC:000 FC:00 I:00
26B419 0 S:01FF P:EnvMXdIzc HC:61238 VC:000 FC:00 I:00
26B41A 0 S:01FF P:EnvMXdIzc HC:61254 VC:000 FC:00 I:00
26B41C 0 S:01FF P:EnvMXdIzc HC:61270 VC:000 FC:00 I:00
26B41D 0 S:01FF P:EnvMXdIzc HC:61286 VC:000 FC:00 I:00
26B420 0 S:01FF P:EnvMXdIzc HC:61302 VC:000 FC:00 I:00
26B422 0 S:01FF P:EnvMXdIzc HC:61318 VC:000 FC:00 I:00
26B423 0 S:01FF P:EnvMXdIzc HC:61334 VC:000 FC:00 I:00
26B426 0 S:01FF P:EnvMXdIzc HC:61350 VC:000 FC:00 I:00
26B428 0 S:01FF P:EnvMXdIzc HC:61366 VC:000 FC:00 I:00
26B42A 0 S:01FF P:EnvMXdIzc HC:61382 VC:000 FC:00 I:00
26B42E 0 S:01FF P:EnvMXdIzc HC:61398 VC:000 FC:00 I:00
26B42F 0 S:01FF P:EnvMXdIzc HC:61414 VC:000 FC:00 I:00
26B431 0 S:01FF P:EnvMXdIzc HC:61430 VC:000 FC:00 I:00
26B433 0 S:01FF P:EnvMXdIzc HC:61446 VC:000 FC:00 I:00
26B435 0 S:01FF P:EnvMXdIzc HC:61462 VC:000 FC:00 I:00
26B43A 0 S:01FF P:EnvMXdIzc HC:61510 VC:000 FC:00 I:00
26B43C 0 S:01FF P:EnvMXdIzc HC:61526 VC:000 FC:00 I:00
26B43E 0 S:01FF P:EnvMXdIzc HC:61542 VC:000 FC:00 I:00
26B440 0 S:01FF P:EnvMXdIzc HC:61558 VC:000 FC:00 I:00
26B442 0 S:01FF P:EnvMXdIzc HC:61574 VC:000 FC:00 I:00
26B444 0 S:01FF P:EnvMXdIzc HC:61590 VC:000 FC:00 I:00
26B447 0 S:01FF P:EnvMXdIzc HC:61606 VC:000 FC:00 I:00
26B449 0 S:01FF P:EnvMXdIzc HC:61622 VC:000 FC:00 I:00
26B44B 0 S:01FF P:EnvMXdIzc HC:61638 VC:000 FC:00 I:00
26B44E 0 S:01FF P:EnvMXdIzc HC:61654 VC:000 FC:00 I:00
26B450 0 S:01FF P:EnvMXdIzc HC:61670 VC:000 FC:00 I:00
26B452 0 S:01FF P:EnvMXdIzc HC:61686 VC:000 FC:00 I:00
26B456 0 S:01FF P:EnvMXdIzc HC:61702 VC:000 FC:00 I:00
26B458 0 S:01FF P:EnvMXdIzc HC:61718 VC:000 FC:00 I:00
26B45C 0 S:01FF P:EnvMXdIzc HC:61734 VC:000 FC:00 I:00
26B45E 0 S:01FF P:EnvMXdIzc HC:61750 VC:000 FC:00 I:00
26B460 0 S:01FF P:EnvMXdIzc HC:61766 VC:000 FC:00 I:00
26B464 0 S:01FF P:EnvMXdIzc HC:61782 VC:000 FC:00 I:00
26B466 0 S:01FF P:EnvMXdIzc HC:61798 VC:000 FC:00 I:00
26B46A 0 S:01FF P:EnvMXdIzc HC:61814 VC:000 FC:00 I:00
26B46C 0 S:01FF P:EnvMXdIzc HC:61830 VC:000 FC:00 I:00
26B46E 0 S:01FF P:EnvMXdIzc HC:61846 VC:000 FC:00 I:00
26B471 0 S:01FF P:EnvMXdIzc HC:61862 VC:000 FC:00 I:00
26B472 0 S:01FF P:EnvMXdIzc HC:61878 VC:000 FC:00 I:00
26B474 0 S:01FF P:EnvMXdIzc HC:61894 VC:000 FC:00 I:00
26B476 0 S:01FF P:EnvMXdIzc HC:61910 VC:000 FC:00 I:00
26B480 0 S:01FF P:EnvMXdIzc HC:61974 VC:000 FC:00 I:00
26B482 0 S:01FF P:EnvMXdIzc HC:61990 VC:000 FC:00 I:00
26B484 0 S:01FF P:EnvMXdIzc HC:62006 VC:000 FC:00 I:00
26B486 0 S:01FF P:EnvMXdIzc HC:62022 VC:000 FC:00 I:00
26B488 0 S:01FF P:EnvMXdIzc HC:62038 VC:000 FC:00 I:00
26B48B 0 S:01FF P:EnvMXdIzc HC:62054 VC:000 FC:00 I:00
26B48D 0 S:01FF P:EnvMXdIzc HC:62070 VC:000 FC:00 I:00
26B48F 0 S:01FF P:EnvMXdIzc HC:62086 VC:000 FC:00 I:00
26B492 0 S:01FF P:EnvMXdIzc HC:62102 VC:000 FC:00 I:00
26B494 0 S:01FF P:EnvMXdIzc HC:62118 VC:000 FC:00 I:00
26B496 0 S:01FF P:EnvMXdIzc HC:62134 VC:000 FC:00 I:00
26B498 0 S:01FF P:EnvMXdIzc HC:62150 VC:000 FC:00 I:00
26B49A 0 S:01FF P:EnvMXdIzc HC:62166 VC:000 FC:00 I:00
26B49C 0 S:01FF P:EnvMXdIzc HC:62182 VC:000 FC:00 I:00
26B4A0 0 S:01FF P:EnvMXdIzc HC:62198 VC:000 FC:00 I:00
26B4A2 0 S:01FF P:EnvMXdIzc HC:62214 VC:000 FC:00 I:00
26B4A5 0 S:01FF P:EnvMXdIzc HC:62230 VC:000 FC:00 I:00
26B4A9 0 S:01FF P:EnvMXdIzc HC:62246 VC:000 FC:00 I:00
26B4AB 0 S:01FF P:EnvMXdIzc HC:62262 VC:000 FC:00 I:00
26B4AF 0 S:01FF P:EnvMXdIzc HC:62278 VC:000 FC:00 I:00
26B4B1 0 S:01FF P:EnvMXdIzc HC:62294 VC:000 FC:00 I:00
26B4B3 0 S:01FF P:EnvMXdIzc HC:62310 VC:000 FC:00 I:00
26B4B7 0 S:01FF P:EnvMXdIzc HC:62326 VC:000 FC:00 I:00
26B4B9 0 S:01FF P:EnvMXdIzc HC:62342 VC:000 FC:00 I:00
26B4BC 0 S:01FF P:EnvMXdIzc HC:62358 VC:000 FC:00 I:00
26B4BE 0 S:01FF P:EnvMXdIzc HC:62374 VC:000 FC:00 I:00
26B4C0 0 S:01FF P:EnvMXdIzc HC:62390 VC:000 FC:00 I:00
26B4C2 0 S:01FF P:EnvMXdIzc HC:62406 VC:000 FC:00 I:00
26B4C4 0 S:01FF P:EnvMXdIzc HC:62422 VC:000 FC:00 I:00
26B4C7 0 S:01FF P:EnvMXdIzc HC:62438 VC:000 FC:00 I:00
26B4C9 0 S:01FF P:EnvMXdIzc HC:62454 VC:000 FC:00 I:00
26B4D6 0 S:01FF P:EnvMXdIzc HC:62550 VC:000 FC:00 I:00
26B4D9 0 S:01FF P:EnvMXdIzc HC:62566 VC:000 FC:00 I:00
26B4DB 0 S:01FF P:EnvMXdIzc HC:62582 VC:000 FC:00 I:00
26B4DD 0 S:01FF P:EnvMXdIzc HC:62598 VC:000 FC:00 I:00
26B4E0 0 S:01FF P:EnvMXdIzc HC:62614 VC:000 FC:00 I:00
26B4E2 0 S:01FF P:EnvMXdIzc HC:62630 VC:000 FC:00 I:00
26B4E4 0 S:01FF P:EnvMXdIzc HC:62646 VC:000 FC:00 I:00
26B4E6 0 S:01FF P:EnvMXdIzc HC:62662 VC:000 FC:00 I:00
26B4EA 0 S:01FF P:EnvMXdIzc HC:62678 VC:000 FC:00 I:00
26B4EC 0 S:01FF P:EnvMXdIzc HC:62694 VC:000 FC:00 I:00
26B4EF 0 S:01FF P:EnvMXdIzc HC:62710 VC:000 FC:00 I:00
26B4F3 0 S:01FF P:EnvMXdIzc HC:62726 VC:000 FC:00 I:00
26B4F5 0 S:01FF P:EnvMXdIzc HC:62742 VC:000 FC:00 I:00
26B4F9 0 S:01FF P:EnvMXdIzc HC:62758 VC:000 FC:00 I:00
26B4FB 0 S:01FF P:EnvMXdIzc HC:62774 VC:000 FC:00 I:00
26B4FD 0 S:01FF P:EnvMXdIzc HC:62790 VC:000 FC:00 I:00
26B501 0 S:01FF P:EnvMXdIzc HC:62806 VC:000 FC:00 I:00
26B503 0 S:01FF P:EnvMXdIzc HC:62822 VC:000 FC:00 I:00
26B506 0 S:01FF P:EnvMXdIzc HC:62838 VC:000 FC:00 I:00
26B508 0 S:01FF P:EnvMXdIzc HC:62854 VC:000 FC:00 I:00
26B50A 0 S:01FF P:EnvMXdIzc HC:62870 VC:000 FC:00 I:00
26B50C 0 S:01FF P:EnvMXdIzc HC:62886 VC:000 FC:00 I:00
26B50E 0 S:01FF P:EnvMXdIzc HC:62902 VC:000 FC:00 I:00
26B511 0 S:01FF P:EnvMXdIzc HC:62918 VC:000 FC:00 I:00
26B513 0 S:01FF P:EnvMXdIzc HC:62934 VC:000 FC:00 I:00
26B58D 0 S:01FF P:EnvMXdIzc HC:53590 VC:000 FC:00 I:00
26B590 0 S:01FF P:EnvMXdIzc HC:53606 VC:000 FC:00 I:00
26B591 0 S:01FF P:EnvMXdIzc HC:53622 VC:000 FC:00 I:00
26B593 0 S:01FF P:EnvMXdIzc HC:53638 VC:000 FC:00 I:00
26B594 0 S:01FF P:EnvMXdIzc HC:53654 VC:000 FC:00 I:00
26B598 0 S:01FF P:EnvMXdIzc HC:53670 VC:000 FC:00 I:00
26B59A 0 S:01FF P:EnvMXdIzc HC:53686 VC:000 FC:00 I:00
26B59E 0 S:01FF P:EnvMXdIzc HC:53702 VC:000 FC:00 I:00
26B5A2 0 S:01FF P:EnvMXdIzc HC:53718 VC:000 FC:00 I:00
26B5A4 0 S:01FF P:EnvMXdIzc HC:53734 VC:000 FC:00 I:00
26B5A5 0 S:01FF P:EnvMXdIzc HC:53750 VC:000 FC:00 I:00
26B5A8 0 S:01FF P:EnvMXdIzc HC:53766 VC:000 FC:00 I:00
26B5AA 0 S:01FF P:EnvMXdIzc HC:53782 VC:000 FC:00 I:00
26B5AB 0 S:01FF P:EnvMXdIzc HC:53798 VC:000 FC:00 I:00
26B5AE 0 S:01FF P:EnvMXdIzc HC:53814 VC:000 FC:00 I:00
26B5B0 0 S:01FF P:EnvMXdIzc HC:53830 VC:000 FC:00 I:00
26B5B2 0 S:01FF P:EnvMXdIzc HC:53846 VC:000 FC:00 I:00
26B5B6 0 S:01FF P:EnvMXdIzc HC:53862 VC:000 FC:00 I:00
26B5BA 0 S:01FF P:EnvMXdIzc HC:53878 VC:000 FC:00 I:00
26B5BB 0 S:01FF P:EnvMXdIzc HC:53894 VC:000 FC:00 I:00
26B5BD 0 S:01FF P:EnvMXdIzc HC:53910 VC:000 FC:00 I:00
26B5BE 0 S:01FF P:EnvMXdIzc HC:53926 VC:000 FC:00 I:00
26B5C1 0 S:01FF P:EnvMXdIzc HC:53942 VC:000 FC:00 I:00
26B5C3 0 S:01FF P:EnvMXdIzc HC:53958 VC:000 FC:00 I:00
26B5C6 0 S:01FF P:EnvMXdIzc HC:53974 VC:000 FC:00 I:00
26B5C8 0 S:01FF P:EnvMXdIzc HC:53990 VC:000 FC:00 I:00
26B5CB 0 S:01FF P:EnvMXdIzc HC:54006 VC:000 FC:00 I:00
26B5CD 0 S:01FF P:EnvMXdIzc HC:54022 VC:000 FC:00 I:00
26B5CF 0 S:01FF P:EnvMXdIzc HC:54038 VC:000 FC:00 I:00
26B5D3 0 S:01FF P:EnvMXdIzc HC:54054 VC:000 FC:00 I:00
26B5D4 0 S:01FF P:EnvMXdIzc HC:54070 VC:000 FC:00 I:00
26B5D6 0 S:01FF P:EnvMXdIzc HC:54086 VC:000 FC:00 I:00
26B5D8 0 S:01FF P:EnvMXdIzc HC:54102 VC:000 FC:00 I:00
26B5DA 0 S:01FF P:EnvMXdIzc HC:54118 VC:000 FC:00 I:00
26B5DE 0 S:01FF P:EnvMXdIzc HC:54134 VC:000 FC:00 I:00
26B5DF 0 S:01FF P:EnvMXdIzc HC:54150 VC:000 FC:00 I:00
26B5E1 0 S:01FF P:EnvMXdIzc HC:54166 VC:000 FC:00 I:00
26B5E3 0 S:01FF P:EnvMXdIzc HC:54182 VC:000 FC:00 I:00
26B5E5 0 S:01FF P:EnvMXdIzc HC:54198 VC:000 FC:00 I:00
26B5EA 0 S:01FF P:EnvMXdIzc HC:54262 VC:000 FC:00 I:00
26B5EC 0 S:01FF P:EnvMXdIzc HC:54278 VC:000 FC:00 I:00
26B5EE 0 S:01FF P:EnvMXdIzc HC:54294 VC:000 FC:00 I:00
26B5F0 0 S:01FF P:EnvMXdIzc HC:54310 VC:000 FC:00 I:00
26B5F2 0 S:01FF P:EnvMXdIzc HC:54326 VC:000 FC:00 I:00
26B5F5 0 S:01FF P:EnvMXdIzc HC:54342 VC:000 FC:00 I:00
26B5F7 0 S:01FF P:EnvMXdIzc HC:54358 VC:000 FC:00 I:00
26B5F9 0 S:01FF P:EnvMXdIzc HC:54374 VC:000 FC:00 I:00
26B5FB 0 S:01FF P:EnvMXdIzc HC:54390 VC:000 FC:00 I:00
26B5FE 0 S:01FF P:EnvMXdIzc HC:54406 VC:000 FC:00 I:00
26B600 0 S:01FF P:EnvMXdIzc HC:54422 VC:000 FC:00 I:00
26B602 0 S:01FF P:EnvMXdIzc HC:54438 VC:000 FC:00 I:00
26B606 0 S:01FF P:EnvMXdIzc HC:54454 VC:000 FC:00 I:00
26B609 0 S:01FF P:EnvMXdIzc HC:54470 VC:000 FC:00 I:00
26B60D 0 S:01FF P:EnvMXdIzc HC:54486 VC:000 FC:00 I:00
26B60F 0 S:01FF P:EnvMXdIzc HC:54502 VC:000 FC:00 I:00
26B613 0 S:01FF P:EnvMXdIzc HC:54518 VC:000 FC:00 I:00
26B615 0 S:01FF P:EnvMXdIzc HC:54534 VC:000 FC:00 I:00
26B617 0 S:01FF P:EnvMXdIzc HC:54550 VC:000 FC:00 I:00
26B61A 0 S:01FF P:EnvMXdIzc HC:54566 VC:000 FC:00 I:00
26B61B 0 S:01FF P:EnvMXdIzc HC:54582 VC:000 FC:00 I:00
26B61D 0 S:01FF P:EnvMXdIzc HC:54598 VC:000 FC:00 I:00
26B61F 0 S:01FF P:EnvMXdIzc HC:54614 VC:000 FC:00 I:00
26B620 0 S:01FF P:EnvMXdIzc HC:54630 VC:000 FC:00 I:00
26B622 0 S:01FF P:EnvMXdIzc HC:54646 VC:000 FC:00 I:00
26B624 0 S:01FF P:EnvMXdIzc HC:54662 VC:000 FC:00 I:00
26B626 0 S:01FF P:EnvMXdIzc HC:54678 VC:000 FC:00 I:00
26B628 0 S:01FF P:EnvMXdIzc HC:54694 VC:000 FC:00 I:00
26B62B 0 S:01FF P:EnvMXdIzc HC:54710 VC:000 FC:00 I:00
26B62D 0 S:01FF P:EnvMXdIzc HC:54726 VC:000 FC:00 I:00
26B62F 0 S:01FF P:EnvMXdIzc HC:54742 VC:000 FC:00 I:00
26B631 0 S:01FF P:EnvMXdIzc HC:54758 VC:000 FC:00 I:00
26B634 0 S:01FF P:EnvMXdIzc HC:54774 VC:000 FC:00 I:00
26B636 0 S:01FF P:EnvMXdIzc HC:54790 VC:000 FC:00 I:00
26B638 0 S:01FF P:EnvMXdIzc HC:54806 VC:000 FC:00 I:00
26B63C 0 S:01FF P:EnvMXdIzc HC:54822 VC:000 FC:00 I:00
26B63E 0 S:01FF P:EnvMXdIzc HC:54838 VC:000 FC:00 I:00
26B642 0 S:01FF P:EnvMXdIzc HC:54854 VC:000 FC:00 I:00
26B644 0 S:01FF P:EnvMXdIzc HC:54870 VC:000 FC:00 I:00
26B646 0 S:01FF P:EnvMXdIzc HC:54886 VC:000 FC:00 I:00
26B64A 0 S:01FF P:EnvMXdIzc HC:54902 VC:000 FC:00 I:00
26B64C 0 S:01FF P:EnvMXdIzc HC:54918 VC:000 FC:00 I:00
26B64F 0 S:01FF P:EnvMXdIzc HC:54934 VC:000 FC:00 I:00
26B650 0 S:01FF P:EnvMXdIzc HC:54950 VC:000 FC:00 I:00
26B652 0 S:01FF P:EnvMXdIzc HC:54966 VC:000 FC:00 I:00
26B654 0 S:01FF P:EnvMXdIzc HC:54982 VC:000 FC:00 I:00
26B655 0 S:01FF P:EnvMXdIzc HC:54998 VC:000 FC:00 I:00
26B658 0 S:01FF P:EnvMXdIzc HC:55014 VC:000 FC:00 I:00
26B65A 0 S:01FF P:EnvMXdIzc HC:55030 VC:000 FC:00 I:00
26B65B 0 S:01FF P:EnvMXdIzc HC:55046 VC:000 FC:00 I:00
26B65E 0 S:01FF P:EnvMXdIzc HC:55062 VC:000 FC:00 I:00
26B660 0 S:01FF P:EnvMXdIzc HC:55078 VC:000 FC:00 I:00
26B663 0 S:01FF P:EnvMXdIzc HC:55094 VC:000 FC:00 I:00
26B665 0 S:01FF P:EnvMXdIzc HC:55110 VC:000 FC:00 I:00
26B667 0 S:01FF P:EnvMXdIzc HC:55126 VC:000 FC:00 I:00
26B66B 0 S:01FF P:EnvMXdIzc HC:55142 VC:000 FC:00 I:00
26B66C 0 S:01FF P:EnvMXdIzc HC:55158 VC:000 FC:00 I:00
26B66E 0 S:01FF P:EnvMXdIzc HC:55174 VC:000 FC:00 I:00
26B66F 0 S:01FF P:EnvMXdIzc HC:55190 VC:000 FC:00 I:00
26B672 0 S:01FF P:EnvMXdIzc HC:55206 VC:000 FC:00 I:00
26B674 0 S:01FF P:EnvMXdIzc HC:55222 VC:000 FC:00 I:00
26B675 0 S:01FF P:EnvMXdIzc HC:55238 VC:000 FC:00 I:00
26B678 0 S:01FF P:EnvMXdIzc HC:55254 VC:000 FC:00 I:00
26B67A 0 S:01FF P:EnvMXdIzc HC:55270 VC:000 FC:00 I:00
26B67D 0 S:01FF P:EnvMXdIzc HC:55286 VC:000 FC:00 I:00
26B67F 0 S:01FF P:EnvMXdIzc HC:55302 VC:000 FC:00 I:00
26B681 0 S:01FF P:EnvMXdIzc HC:55318 VC:000 FC:00 I:00
26B685 0 S:01FF P:EnvMXdIzc HC:55334 VC:000 FC:00 I:00
26B686 0 S:01FF P:EnvMXdIzc HC:55350 VC:000 FC:00 I:00
26B688 0 S:01FF P:EnvMXdIzc HC:55366 VC:000 FC:00 I:00
26B68A 0 S:01FF P:EnvMXdIzc HC:55382 VC:000 FC:00 I:00
26B68C 0 S:01FF P:EnvMXdIzc HC:55398 VC:000 FC:00 I:00
26B68D 0 S:01FF P:EnvMXdIzc HC:55414 VC:000 FC:00 I:00
26B68F 0 S:01FF P:EnvMXdIzc HC:55430 VC:000 FC:00 I:00
26B691 0 S:01FF P:EnvMXdIzc HC:55446 VC:000 FC:00 I:00
26B694 0 S:01FF P:EnvMXdIzc HC:55462 VC:000 FC:00 I:00
26B696 0 S:01FF P:EnvMXdIzc HC:55478 VC:000 FC:00 I:00
26B698 0 S:01FF P:EnvMXdIzc HC:55494 VC:000 FC:00 I:00
26B699 0 S:01FF P:EnvMXdIzc HC:55510 VC:000 FC:00 I:00
26B69A 0 S:01FF P:EnvMXdIzc HC:55526 VC:000 FC:00 I:00
26B69C 0 S:01FF P:EnvMXdIzc HC:55542 VC:000 FC:00 I:00
26B69E 0 S:01FF P:EnvMXdIzc HC:55558 VC:000 FC:00 I:00
26B6A0 0 S:01FF P:EnvMXdIzc HC:55574 VC:000 FC:00 I:00
26B7B0 0 S:01FF P:EnvMXdIzc HC:6646 VC:000 FC:00 I:00
26B7B2 0 S:01FF P:EnvMXdIzc HC:6662 VC:000 FC:00 I:00
26B7B4 0 S:01FF P:EnvMXdIzc HC:6678 VC:000 FC:00 I:00
26B7B6 0 S:01FF P:EnvMXdIzc HC:6694 VC:000 FC:00 I:00
26B7B8 0 S:01FF P:EnvMXdIzc HC:6710 VC:000 FC:00 I:00
26B7BB 0 S:01FF P:EnvMXdIzc HC:6726 VC:000 FC:00 I:00
26B7BD 0 S:01FF P:EnvMXdIzc HC:6742 VC:000 FC:00 I:00
26B7BF 0 S:01FF P:EnvMXdIzc HC:6758 VC:000 FC:00 I:00
26B7C1 0 S:01FF P:EnvMXdIzc HC:6774 VC:000 FC:00 I:00
26B7C5 0 S:01FF P:EnvMXdIzc HC:6790 VC:000 FC:00 I:00
26B7C7 0 S:01FF P:EnvMXdIzc HC:6806 VC:000 FC:00 I:00
26B7C9 0 S:01FF P:EnvMXdIzc HC:6822 VC:000 FC:00 I:00
26B7CB 0 S:01FF P:EnvMXdIzc HC:6838 VC:000 FC:00 I:00
26B7CF 0 S:01FF P:EnvMXdIzc HC:6854 VC:000 FC:00 I:00
26B7D0 0 S:01FF P:EnvMXdIzc HC:6870 VC:000 FC:00 I:00
26B7D3 0 S:01FF P:EnvMXdIzc HC:6886 VC:000 FC:00 I:00
26B7D4 0 S:01FF P:EnvMXdIzc HC:6902 VC:000 FC:00 I:00
26B7D7 0 S:01FF P:EnvMXdIzc HC:6918 VC:000 FC:00 I:00
26B7D9 0 S:01FF P:EnvMXdIzc HC:6934 VC:000 FC:00 I:00
26B7DB 0 S:01FF P:EnvMXdIzc HC:6950 VC:000 FC:00 I:00
26B7DC 0 S:01FF P:EnvMXdIzc HC:6966 VC:000 FC:00 I:00
26B7DE 0 S:01FF P:EnvMXdIzc HC:6982 VC:000 FC:00 I:00
26B7E8 0 S:01FF P:EnvMXdIzc HC:7046 VC:000 FC:00 I:00
26B7EC 0 S:01FF P:EnvMXdIzc HC:7062 VC:000 FC:00 I:00
26B811 0 S:01FF P:EnvMXdIzc HC:51814 VC:000 FC:00 I:00
26B813 0 S:01FF P:EnvMXdIzc HC:51830 VC:000 FC:00 I:00
26B815 0 S:01FF P:EnvMXdIzc HC:51846 VC:000 FC:00 I:00
26B817 0 S:01FF P:EnvMXdIzc HC:51862 VC:000 FC:00 I:00
26B819 0 S:01FF P:EnvMXdIzc HC:51878 VC:000 FC:00 I:00
26B81C 0 S:01FF P:EnvMXdIzc HC:51894 VC:000 FC:00 I:00
26B81D 0 S:01FF P:EnvMXdIzc HC:51910 VC:000 FC:00 I:00
26B81F 0 S:01FF P:EnvMXdIzc HC:51926 VC:000 FC:00 I:00
26B820 0 S:01FF P:EnvMXdIzc HC:51942 VC:000 FC:00 I:00
26B824 0 S:01FF P:EnvMXdIzc HC:51958 VC:000 FC:00 I:00
26B826 0 S:01FF P:EnvMXdIzc HC:51974 VC:000 FC:00 I:00
26B82A 0 S:01FF P:EnvMXdIzc HC:51990 VC:000 FC:00 I:00
26B82B 0 S:01FF P:EnvMXdIzc HC:52006 VC:000 FC:00 I:00
26B82E 0 S:01FF P:EnvMXdIzc HC:52022 VC:000 FC:00 I:00
26B832 0 S:01FF P:EnvMXdIzc HC:52038 VC:000 FC:00 I:00
26B834 0 S:01FF P:EnvMXdIzc HC:52054 VC:000 FC:00 I:00
26B836 0 S:01FF P:EnvMXdIzc HC:52070 VC:000 FC:00 I:00
26B838 0 S:01FF P:EnvMXdIzc HC:52086 VC:000 FC:00 I:00
26B83C 0 S:01FF P:EnvMXdIzc HC:52102 VC:000 FC:00 I:00
26B83D 0 S:01FF P:EnvMXdIzc HC:52118 VC:000 FC:00 I:00
26B840 0 S:01FF P:EnvMXdIzc HC:52134 VC:000 FC:00 I:00
26B841 0 S:01FF P:EnvMXdIzc HC:52150 VC:000 FC:00 I:00
26B844 0 S:01FF P:EnvMXdIzc HC:52166 VC:000 FC:00 I:00
26B846 0 S:01FF P:EnvMXdIzc HC:52182 VC:000 FC:00 I:00
26B848 0 S:01FF P:EnvMXdIzc HC:52198 VC:000 FC:00 I:00
26B849 0 S:01FF P:EnvMXdIzc HC:52214 VC:000 FC:00 I:00
26B84C 0 S:01FF P:EnvMXdIzc HC:52230 VC:000 FC:00 I:00
26B84E 0 S:01FF P:EnvMXdIzc HC:52246 VC:000 FC:00 I:00
26B84F 0 S:01FF P:EnvMXdIzc HC:52262 VC:000 FC:00 I:00
26B852 0 S:01FF P:EnvMXdIzc HC:52278 VC:000 FC:00 I:00
26B854 0 S:01FF P:EnvMXdIzc HC:52294 VC:000 FC:00 I:00
26B856 0 S:01FF P:EnvMXdIzc HC:52310 VC:000 FC:00 I:00
26B857 0 S:01FF P:EnvMXdIzc HC:52326 VC:000 FC:00 I:00
26B858 0 S:01FF P:EnvMXdIzc HC:52342 VC:000 FC:00 I:00
26B85A 0 S:01FF P:EnvMXdIzc HC:52358 VC:000 FC:00 I:00
26B85B 0 S:01FF P:EnvMXdIzc HC:52374 VC:000 FC:00 I:00
26B85D 0 S:01FF P:EnvMXdIzc HC:52390 VC:000 FC:00 I:00
26B85F 0 S:01FF P:EnvMXdIzc HC:52406 VC:000 FC:00 I:00
26B861 0 S:01FF P:EnvMXdIzc HC:52422 VC:000 FC:00 I:00
26B862 0 S:01FF P:EnvMXdIzc HC:52438 VC:000 FC:00 I:00
26B864 0 S:01FF P:EnvMXdIzc HC:52454 VC:000 FC:00 I:00
26B865 0 S:01FF P:EnvMXdIzc HC:52470 VC:000 FC:00 I:00
26B867 0 S:01FF P:EnvMXdIzc HC:52486 VC:000 FC:00 I:00
26B869 0 S:01FF P:EnvMXdIzc HC:52502 VC:000 FC:00 I:00
26B86B 0 S:01FF P:EnvMXdIzc HC:52518 VC:000 FC:00 I:00
26B86D 0 S:01FF P:EnvMXdIzc HC:52534 VC:000 FC:00 I:00
26B86E 0 S:01FF P:EnvMXdIzc HC:52550 VC:000 FC:00 I:00
26B870 0 S:01FF P:EnvMXdIzc HC:52566 VC:000 FC:00 I:00
26B872 0 S:01FF P:EnvMXdIzc HC:52582 VC:000 FC:00 I:00
26B874 0 S:01FF P:EnvMXdIzc HC:52598 VC:000 FC:00 I:00
26B876 0 S:01FF P:EnvMXdIzc HC:52614 VC:000 FC:00 I:00
26B878 0 S:01FF P:EnvMXdIzc HC:52630 VC:000 FC:00 I:00
26B87A 0 S:01FF P:EnvMXdIzc HC:52646 VC:000 FC:00 I:00
26B87C 0 S:01FF P:EnvMXdIzc HC:52662 VC:000 FC:00 I:00
26B87E 0 S:01FF P:EnvMXdIzc HC:52678 VC:000 FC:00 I:00
26B880 0 S:01FF P:EnvMXdIzc HC:52694 VC:000 FC:00 I:00
26B881 0 S:01FF P:EnvMXdIzc HC:52710 VC:000 FC:00 I:00
26B883 0 S:01FF P:EnvMXdIzc HC:52726 VC:000 FC:00 I:00
26B885 0 S:01FF P:EnvMXdIzc HC:52742 VC:000 FC:00 I:00
26B887 0 S:01FF P:EnvMXdIzc HC:52758 VC:000 FC:00 I:00
26B889 0 S:01FF P:EnvMXdIzc HC:52774 VC:000 FC:00 I:00
26B88C 0 S:01FF P:EnvMXdIzc HC:52790 VC:000 FC:00 I:00
26B88D 0 S:01FF P:EnvMXdIzc HC:52806 VC:000 FC:00 I:00
26B88F 0 S:01FF P:EnvMXdIzc HC:52822 VC:000 FC:00 I:00
26B892 0 S:01FF P:EnvMXdIzc HC:52838 VC:000 FC:00 I:00
26B893 0 S:01FF P:EnvMXdIzc HC:52854 VC:000 FC:00 I:00
26B895 0 S:01FF P:EnvMXdIzc HC:52870 VC:000 FC:00 I:00
26B897 0 S:01FF P:EnvMXdIzc HC:52886 VC:000 FC:00 I:00
26B899 0 S:01FF P:EnvMXdIzc HC:52902 VC:000 FC:00 I:00
26CA00 0 S:01FF P:EnvMXdIzc HC:3958 VC:000 FC:00 I:00
26CA03 0 S:01FF P:EnvMXdIzc HC:3974 VC:000 FC:00 I:00
26CA05 0 S:01FF P:EnvMXdIzc HC:3990 VC:000 FC:00 I:00
26CA06 0 S:01FF P:EnvMXdIzc HC:4006 VC:000 FC:00 I:00
26CA09 0 S:01FF P:EnvMXdIzc HC:4022 VC:000 FC:00 I:00
26CA0B 0 S:01FF P:EnvMXdIzc HC:4038 VC:000 FC:00 I:00
26CA0D 0 S:01FF P:EnvMXdIzc HC:4054 VC:000 FC:00 I:00
26CA0F 0 S:01FF P:EnvMXdIzc HC:4070 VC:000 FC:00 I:00
26CA11 0 S:01FF P:EnvMXdIzc HC:4086 VC:000 FC:00 I:00
26CA14 0 S:01FF P:EnvMXdIzc HC:4102 VC:000 FC:00 I:00
26CA16 0 S:01FF P:EnvMXdIzc HC:4118 VC:000 FC:00 I:00
26CA19 0 S:01FF P:EnvMXdIzc HC:4134 VC:000 FC:00 I:00
26CA1B 0 S:01FF P:EnvMXdIzc HC:4150 VC:000 FC:00 I:00
26CA1E 0 S:01FF P:EnvMXdIzc HC:4166 VC:000 FC:00 I:00
26CA20 0 S:01FF P:EnvMXdIzc HC:4182 VC:000 FC:00 I:00
26CA21 0 S:01FF P:EnvMXdIzc HC:4198 VC:000 FC:00 I:00
26CA24 0 S:01FF P:EnvMXdIzc HC:4214 VC:000 FC:00 I:00
26CA27 0 S:01FF P:EnvMXdIzc HC:4230 VC:000 FC:00 I:00
26CA2A 0 S:01FF P:EnvMXdIzc HC:4246 VC:000 FC:00 I:00
26CA2D 0 S:01FF P:EnvMXdIzc HC:4262 VC:000 FC:00 I:00
26CA30 0 S:01FF P:EnvMXdIzc HC:4278 VC:000 FC:00 I:00
26CA33 0 S:01FF P:EnvMXdIzc HC:4294 VC:000 FC:00 I:00
26CA34 0 S:01FF P:EnvMXdIzc HC:4310 VC:000 FC:00 I:00
26CA36 0 S:01FF P:EnvMXdIzc HC:4326 VC:000 FC:00 I:00
26CA39 0 S:01FF P:EnvMXdIzc HC:4342 VC:000 FC:00 I:00
26CA3C 0 S:01FF P:EnvMXdIzc HC:4358 VC:000 FC:00 I:00
26CA3F 0 S:01FF P:EnvMXdIzc HC:4374 VC:000 FC:00 I:00
26CA42 0 S:01FF P:EnvMXdIzc HC:4390 VC:000 FC:00 I:00
26CA45 0 S:01FF P:EnvMXdIzc HC:4406 VC:000 FC:00 I:00
26CA48 0 S:01FF P:EnvMXdIzc HC:4422 VC:000 FC:00 I:00
26CA4B 0 S:01FF P:EnvMXdIzc HC:4438 VC:000 FC:00 I:00
26CA4C 0 S:01FF P:EnvMXdIzc HC:4454 VC:000 FC:00 I:00
26CA4E 0 S:01FF P:EnvMXdIzc HC:4470 VC:000 FC:00 I:00
26CA51 0 S:01FF P:EnvMXdIzc HC:4486 VC:000 FC:00 I:00
26CA54 0 S:01FF P:EnvMXdIzc HC:4502 VC:000 FC:00 I:00
26CA56 0 S:01FF P:EnvMXdIzc HC:4518 VC:000 FC:00 I:00
26CA59 0 S:01FF P:EnvMXdIzc HC:4534 VC:000 FC:00 I:00
26CA5A 0 S:01FF P:EnvMXdIzc HC:4550 VC:000 FC:00 I:00
26CA5C 0 S:01FF P:EnvMXdIzc HC:4566 VC:000 FC:00 I:00
26CA5F 0 S:01FF P:EnvMXdIzc HC:4582 VC:000 FC:00 I:00
26CA62 0 S:01FF P:EnvMXdIzc HC:4598 VC:000 FC:00 I:00
26CA63 0 S:01FF P:EnvMXdIzc HC:4614 VC:000 FC:00 I:00
26CA66 0 S:01FF P:EnvMXdIzc HC:4630 VC:000 FC:00 I:00
26CA67 0 S:01FF P:EnvMXdIzc HC:4646 VC:000 FC:00 I:00
26CA6A 0 S:01FF P:EnvMXdIzc HC:4662 VC:000 FC:00 I:00
26CA6D 0 S:01FF P:EnvMXdIzc HC:4678 VC:000 FC:00 I:00
26CA6E 0 S:01FF P:EnvMXdIzc HC:4694 VC:000 FC:00 I:00
26CA70 0 S:01FF P:EnvMXdIzc HC:4710 VC:000 FC:00 I:00
26CA72 0 S:01FF P:EnvMXdIzc HC:4726 VC:000 FC:00 I:00
26CA75 0 S:01FF P:EnvMXdIzc HC:4742 VC:000 FC:00 I:00
26CA78 0 S:01FF P:EnvMXdIzc HC:4758 VC:000 FC:00 I:00
26CA7B 0 S:01FF P:EnvMXdIzc HC:4774 VC:000 FC:00 I:00
26CA7C 0 S:01FF P:EnvMXdIzc HC:4790 VC:000 FC:00 I:00
26CA7E 0 S:01FF P:EnvMXdIzc HC:4806 VC:000 FC:00 I:00
26CA80 0 S:01FF P:EnvMXdIzc HC:4822 VC:000 FC:00 I:00
26CA83 0 S:01FF P:EnvMXdIzc HC:4838 VC:000 FC:00 I:00
26CA84 0 S:01FF P:EnvMXdIzc HC:4854 VC:000 FC:00 I:00
26CA86 0 S:01FF P:EnvMXdIzc HC:4870 VC:000 FC:00 I:00
26CA87 0 S:01FF P:EnvMXdIzc HC:4886 VC:000 FC:00 I:00
26CA8A 0 S:01FF P:EnvMXdIzc HC:4902 VC:000 FC:00 I:00
26CA8C 0 S:01FF P:EnvMXdIzc HC:4918 VC:000 FC:00 I:00
26CA8E 0 S:01FF P:EnvMXdIzc HC:4934 VC:000 FC:00 I:00
26CA90 0 S:01FF P:EnvMXdIzc HC:4950 VC:000 FC:00 I:00
26CA93 0 S:01FF P:EnvMXdIzc HC:4966 VC:000 FC:00 I:00
26CA94 0 S:01FF P:EnvMXdIzc HC:4982 VC:000 FC:00 I:00
26CA97 0 S:01FF P:EnvMXdIzc HC:4998 VC:000 FC:00 I:00
26CA99 0 S:01FF P:EnvMXdIzc HC:5014 VC:000 FC:00 I:00
26CA9B 0 S:01FF P:EnvMXdIzc HC:5030 VC:000 FC:00 I:00
26CA9C 0 S:01FF P:EnvMXdIzc HC:5046 VC:000 FC:00 I:00
26CA9E 0 S:01FF P:EnvMXdIzc HC:5062 VC:000 FC:00 I:00
26CAA1 0 S:01FF P:EnvMXdIzc HC:5078 VC:000 FC:00 I:00
26CAA4 0 S:01FF P:EnvMXdIzc HC:5094 VC:000 FC:00 I:00
26CAA7 0 S:01FF P:EnvMXdIzc HC:5110 VC:000 FC:00 I:00
26CAA8 0 S:01FF P:EnvMXdIzc HC:5126 VC:000 FC:00 I:00
26CAAB 0 S:01FF P:EnvMXdIzc HC:5142 VC:000 FC:00 I:00
26CAAE 0 S:01FF P:EnvMXdIzc HC:5158 VC:000 FC:00 I:00
26CAB1 0 S:01FF P:EnvMXdIzc HC:5174 VC:000 FC:00 I:00
26CAB4 0 S:01FF P:EnvMXdIzc HC:5190 VC:000 FC:00 I:00
26CAB6 0 S:01FF P:EnvMXdIzc HC:5206 VC:000 FC:00 I:00
26CAB9 0 S:01FF P:EnvMXdIzc HC:5222 VC:000 FC:00 I:00
26CABC 0 S:01FF P:EnvMXdIzc HC:5238 VC:000 FC:00 I:00
26CABD 0 S:01FF P:EnvMXdIzc HC:5254 VC:000 FC:00 I:00
26CAC0 0 S:01FF P:EnvMXdIzc HC:5270 VC:000 FC:00 I:00
26CAC3 0 S:01FF P:EnvMXdIzc HC:5286 VC:000 FC:00 I:00
26CAC6 0 S:01FF P:EnvMXdIzc HC:5302 VC:000 FC:00 I:00
26CAC7 0 S:01FF P:EnvMXdIzc HC:5318 VC:000 FC:00 I:00
26CAC9 0 S:01FF P:EnvMXdIzc HC:5334 VC:000 FC:00 I:00
26CACB 0 S:01FF P:EnvMXdIzc HC:5350 VC:000 FC:00 I:00
26CACD 0 S:01FF P:EnvMXdIzc HC:5366 VC:000 FC:00 I:00
26CAD0 0 S:01FF P:EnvMXdIzc HC:5382 VC:000 FC:00 I:00
26CAD3 0 S:01FF P:EnvMXdIzc HC:5398 VC:000 FC:00 I:00
26CAD6 0 S:01FF P:EnvMXdIzc HC:5414 VC:000 FC:00 I:00
26CAD9 0 S:01FF P:EnvMXdIzc HC:5430 VC:000 FC:00 I:00
26CADC 0 S:01FF P:EnvMXdIzc HC:5446 VC:000 FC:00 I:00
26CADF 0 S:01FF P:EnvMXdIzc HC:5462 VC:000 FC:00 I:00
26CAE2 0 S:01FF P:EnvMXdIzc HC:5478 VC:000 FC:00 I:00
26CAE5 0 S:01FF P:EnvMXdIzc HC:5494 VC:000 FC:00 I:00
26CAE6 0 S:01FF P:EnvMXdIzc HC:5510 VC:000 FC:00 I:00
26CAE7 0 S:01FF P:EnvMXdIzc HC:5526 VC:000 FC:00 I:00
26CAE8 0 S:01FF P:EnvMXdIzc HC:5542 VC:000 FC:00 I:00
26CAE9 0 S:01FF P:EnvMXdIzc HC:5558 VC:000 FC:00 I:00
26CAEB 0 S:01FF P:EnvMXdIzc HC:5574 VC:000 FC:00 I:00
26CAEE 0 S:01FF P:EnvMXdIzc HC:5590 VC:000 FC:00 I:00
26CAF0 0 S:01FF P:EnvMXdIzc HC:5606 VC:000 FC:00 I:00
26CAF1 0 S:01FF P:EnvMXdIzc HC:5622 VC:000 FC:00 I:00
26CAF2 0 S:01FF P:EnvMXdIzc HC:5638 VC:000 FC:00 I:00
26CAF3 0 S:01FF P:EnvMXdIzc HC:5654 VC:000 FC:00 I:00
26CAF4 0 S:01FF P:EnvMXdIzc HC:5670 VC:000 FC:00 I:00
26CAF6 0 S:01FF P:EnvMXdIzc HC:5686 VC:000 FC:00 I:00
26CAF9 0 S:01FF P:EnvMXdIzc HC:5702 VC:000 FC:00 I:00
26CAFB 0 S:01FF P:EnvMXdIzc HC:5718 VC:000 FC:00 I:00
26CAFC 0 S:01FF P:EnvMXdIzc HC:5734 VC:000 FC:00 I:00
26CAFE 0 S:01FF P:EnvMXdIzc HC:5750 VC:000 FC:00 I:00
26CB00 0 S:01FF P:EnvMXdIzc HC:5766 VC:000 FC:00 I:00
26CB02 0 S:01FF P:EnvMXdIzc HC:5782 VC:000 FC:00 I:00
26CB04 0 S:01FF P:EnvMXdIzc HC:5798 VC:000 FC:00 I:00
26CB06 0 S:01FF P:EnvMXdIzc HC:5814 VC:000 FC:00 I:00
26CB08 0 S:01FF P:EnvMXdIzc HC:5830 VC:000 FC:00 I:00
26CB0B 0 S:01FF P:EnvMXdIzc HC:5846 VC:000 FC:00 I:00
26CB0D 0 S:01FF P:EnvMXdIzc HC:5862 VC:000 FC:00 I:00
26CB0E 0 S:01FF P:EnvMXdIzc HC:5878 VC:000 FC:00 I:00
26CB11 0 S:01FF P:EnvMXdIzc HC:5894 VC:000 FC:00 I:00
26CB13 0 S:01FF P:EnvMXdIzc HC:5910 VC:000 FC:00 I:00
26CB16 0 S:01FF P:EnvMXdIzc HC:5926 VC:000 FC:00 I:00
26CB18 0 S:01FF P:EnvMXdIzc HC:5942 VC:000 FC:00 I:00
26CB1B 0 S:01FF P:EnvMXdIzc HC:5958 VC:000 FC:00 I:00
26CB1D 0 S:01FF P:EnvMXdIzc HC:5974 VC:000 FC:00 I:00
26CB1F 0 S:01FF P:EnvMXdIzc HC:5990 VC:000 FC:00 I:00
26CB21 0 S:01FF P:EnvMXdIzc HC:6006 VC:000 FC:00 I:00
26CB22 0 S:01FF P:EnvMXdIzc HC:6022 VC:000 FC:00 I:00
26CB24 0 S:01FF P:EnvMXdIzc HC:6038 VC:000 FC:00 I:00
26CB26 0 S:01FF P:EnvMXdIzc HC:6054 VC:000 FC:00 I:00
26CB29 0 S:01FF P:EnvMXdIzc HC:6070 VC:000 FC:00 I:00
26CB2B 0 S:01FF P:EnvMXdIzc HC:6086 VC:000 FC:00 I:00
26CB2C 0 S:01FF P:EnvMXdIzc HC:6102 VC:000 FC:00 I:00
26CB2D 0 S:01FF P:EnvMXdIzc HC:6118 VC:000 FC:00 I:00
26CB2E 0 S:01FF P:EnvMXdIzc HC:6134 VC:000 FC:00 I:00
26CB30 0 S:01FF P:EnvMXdIzc HC:6150 VC:000 FC:00 I:00
26CB32 0 S:01FF P:EnvMXdIzc HC:6166 VC:000 FC:00 I:00
26CB34 0 S:01FF P:EnvMXdIzc HC:6182 VC:000 FC:00 I:00
26CB37 0 S:01FF P:EnvMXdIzc HC:6198 VC:000 FC:00 I:00
26CB39 0 S:01FF P:EnvMXdIzc HC:6214 VC:000 FC:00 I:00
26CB3B 0 S:01FF P:EnvMXdIzc HC:6230 VC:000 FC:00 I:00
26CB3D 0 S:01FF P:EnvMXdIzc HC:6246 VC:000 FC:00 I:00
26CB3F 0 S:01FF P:EnvMXdIzc HC:6262 VC:000 FC:00 I:00
26CB41 0 S:01FF P:EnvMXdIzc HC:6278 VC:000 FC:00 I:00
26CB42 0 S:01FF P:EnvMXdIzc HC:6294 VC:000 FC:00 I:00
26CB45 0 S:01FF P:EnvMXdIzc HC:6310 VC:000 FC:00 I:00
26CB48 0 S:01FF P:EnvMXdIzc HC:6326 VC:000 FC:00 I:00
26CB49 0 S:01FF P:EnvMXdIzc HC:6342 VC:000 FC:00 I:00
26CB4A 0 S:01FF P:EnvMXdIzc HC:6358 VC:000 FC:00 I:00
26CB4B 0 S:01FF P:EnvMXdIzc HC:6374 VC:000 FC:00 I:00
26CB4C 0 S:01FF P:EnvMXdIzc HC:6390 VC:000 FC:00 I:00
26CB4E 0 S:01FF P:EnvMXdIzc HC:6406 VC:000 FC:00 I:00
26CB51 0 S:01FF P:EnvMXdIzc HC:6422 VC:000 FC:00 I:00
26CB53 0 S:01FF P:EnvMXdIzc HC:6438 VC:000 FC:00 I:00
26CB54 0 S:01FF P:EnvMXdIzc HC:6454 VC:000 FC:00 I:00
26CB56 0 S:01FF P:EnvMXdIzc HC:6470 VC:000 FC:00 I:00
26CB58 0 S:01FF P:EnvMXdIzc HC:6486 VC:000 FC:00 I:00
26CB5A 0 S:01FF P:EnvMXdIzc HC:6502 VC:000 FC:00 I:00
26CB5B 0 S:01FF P:EnvMXdIzc HC:6518 VC:000 FC:00 I:00
26CB5D 0 S:01FF P:EnvMXdIzc HC:6534 VC:000 FC:00 I:00
26CB5F 0 S:01FF P:EnvMXdIzc HC:6550 VC:000 FC:00 I:00
26CB61 0 S:01FF P:EnvMXdIzc HC:6566 VC:000 FC:00 I:00
26CB63 0 S:01FF P:EnvMXdIzc HC:6582 VC:000 FC:00 I:00
26CB65 0 S:01FF P:EnvMXdIzc HC:6598 VC:000 FC:00 I:00
26CB67 0 S:01FF P:EnvMXdIzc HC:6614 VC:000 FC:00 I:00
26CB69 0 S:01FF P:EnvMXdIzc HC:6630 VC:000 FC:00 I:00
26CDC4 0 S:01FF P:EnvMXdIzc HC:3862 VC:000 FC:00 I:00
26CDC6 0 S:01FF P:EnvMXdIzc HC:3878 VC:000 FC:00 I:00
26CDC8 0 S:01FF P:EnvMXdIzc HC:3894 VC:000 FC:00 I:00
26CDCA 0 S:01FF P:EnvMXdIzc HC:3910 VC:000 FC:00 I:00
26CDCD 0 S:01FF P:EnvMXdIzc HC:3926 VC:000 FC:00 I:00
26CFF0 0 S:01FF P:EnvMXdIzc HC:3734 VC:000 FC:00 I:00
26CFF1 0 S:01FF P:EnvMXdIzc HC:3750 VC:000 FC:00 I:00
26CFF4 0 S:01FF P:EnvMXdIzc HC:3766 VC:000 FC:00 I:00
26CFF6 0 S:01FF P:EnvMXdIzc HC:3782 VC:000 FC:00 I:00
26CFF7 0 S:01FF P:EnvMXdIzc HC:3798 VC:000 FC:00 I:00
26CFF9 0 S:01FF P:EnvMXdIzc HC:3814 VC:000 FC:00 I:00
26CFFA 0 S:01FF P:EnvMXdIzc HC:3830 VC:000 FC:00 I:00
26CFFD 0 S:01FF P:EnvMXdIzc HC:3846 VC:000 FC:00 I:00         
26F495 0 S:01FF P:EnvMXdIzc HC:0206 VC:000 FC:00 I:00
26F497 0 S:01FF P:EnvMXdIzc HC:0222 VC:000 FC:00 I:00
26F49A 0 S:01FF P:EnvMXdIzc HC:0238 VC:000 FC:00 I:00
26F49B 0 S:01FF P:EnvMXdIzc HC:0254 VC:000 FC:00 I:00
26F49D 0 S:01FF P:EnvMXdIzc HC:0270 VC:000 FC:00 I:00
26F49F 0 S:01FF P:EnvMXdIzc HC:0286 VC:000 FC:00 I:00
26F4A1 0 S:01FF P:EnvMXdIzc HC:0302 VC:000 FC:00 I:00
26F4A4 0 S:01FF P:EnvMXdIzc HC:0318 VC:000 FC:00 I:00
26F4A7 0 S:01FF P:EnvMXdIzc HC:0334 VC:000 FC:00 I:00
26F4A9 0 S:01FF P:EnvMXdIzc HC:0350 VC:000 FC:00 I:00
26F4AC 0 S:01FF P:EnvMXdIzc HC:0366 VC:000 FC:00 I:00
26F4AE 0 S:01FF P:EnvMXdIzc HC:0382 VC:000 FC:00 I:00
26F4B1 0 S:01FF P:EnvMXdIzc HC:0398 VC:000 FC:00 I:00
26F4B2 0 S:01FF P:EnvMXdIzc HC:0414 VC:000 FC:00 I:00
26F4B5 0 S:01FF P:EnvMXdIzc HC:0430 VC:000 FC:00 I:00
26F4B7 0 S:01FF P:EnvMXdIzc HC:0446 VC:000 FC:00 I:00
26F4B9 0 S:01FF P:EnvMXdIzc HC:0462 VC:000 FC:00 I:00
26F4BC 0 S:01FF P:EnvMXdIzc HC:0478 VC:000 FC:00 I:00
26F4BF 0 S:01FF P:EnvMXdIzc HC:0494 VC:000 FC:00 I:00
26F4C2 0 S:01FF P:EnvMXdIzc HC:0510 VC:000 FC:00 I:00
26F4C5 0 S:01FF P:EnvMXdIzc HC:0526 VC:000 FC:00 I:00
26F4C6 0 S:01FF P:EnvMXdIzc HC:0542 VC:000 FC:00 I:00
26F4C8 0 S:01FF P:EnvMXdIzc HC:0558 VC:000 FC:00 I:00
26F4CB 0 S:01FF P:EnvMXdIzc HC:0574 VC:000 FC:00 I:00
26F4CE 0 S:01FF P:EnvMXdIzc HC:0590 VC:000 FC:00 I:00
26F4D1 0 S:01FF P:EnvMXdIzc HC:0606 VC:000 FC:00 I:00
26F4D3 0 S:01FF P:EnvMXdIzc HC:0622 VC:000 FC:00 I:00
26F4D4 0 S:01FF P:EnvMXdIzc HC:0638 VC:000 FC:00 I:00
26F4D6 0 S:01FF P:EnvMXdIzc HC:0654 VC:000 FC:00 I:00
26F4D9 0 S:01FF P:EnvMXdIzc HC:0670 VC:000 FC:00 I:00
26F4DC 0 S:01FF P:EnvMXdIzc HC:0686 VC:000 FC:00 I:00
26F4DF 0 S:01FF P:EnvMXdIzc HC:0702 VC:000 FC:00 I:00
26F4E2 0 S:01FF P:EnvMXdIzc HC:0718 VC:000 FC:00 I:00
26F4E3 0 S:01FF P:EnvMXdIzc HC:0734 VC:000 FC:00 I:00
26F4E4 0 S:01FF P:EnvMXdIzc HC:0750 VC:000 FC:00 I:00
26F4E5 0 S:01FF P:EnvMXdIzc HC:0766 VC:000 FC:00 I:00
26F4E6 0 S:01FF P:EnvMXdIzc HC:0782 VC:000 FC:00 I:00
26F4E7 0 S:01FF P:EnvMXdIzc HC:0798 VC:000 FC:00 I:00
26F4EA 0 S:01FF P:EnvMXdIzc HC:0814 VC:000 FC:00 I:00
26F4ED 0 S:01FF P:EnvMXdIzc HC:0830 VC:000 FC:00 I:00
26F4EE 0 S:01FF P:EnvMXdIzc HC:0846 VC:000 FC:00 I:00
26F4F1 0 S:01FF P:EnvMXdIzc HC:0862 VC:000 FC:00 I:00
26F4F3 0 S:01FF P:EnvMXdIzc HC:0878 VC:000 FC:00 I:00
26F4F5 0 S:01FF P:EnvMXdIzc HC:0894 VC:000 FC:00 I:00
26F4F8 0 S:01FF P:EnvMXdIzc HC:0910 VC:000 FC:00 I:00
26F4FB 0 S:01FF P:EnvMXdIzc HC:0926 VC:000 FC:00 I:00
26F4FE 0 S:01FF P:EnvMXdIzc HC:0942 VC:000 FC:00 I:00
26F501 0 S:01FF P:EnvMXdIzc HC:0958 VC:000 FC:00 I:00
26F504 0 S:01FF P:EnvMXdIzc HC:0974 VC:000 FC:00 I:00
26F507 0 S:01FF P:EnvMXdIzc HC:0990 VC:000 FC:00 I:00
26F50A 0 S:01FF P:EnvMXdIzc HC:1006 VC:000 FC:00 I:00
26F50D 0 S:01FF P:EnvMXdIzc HC:1022 VC:000 FC:00 I:00
26F50E 0 S:01FF P:EnvMXdIzc HC:1038 VC:000 FC:00 I:00
26F50F 0 S:01FF P:EnvMXdIzc HC:1054 VC:000 FC:00 I:00
26F510 0 S:01FF P:EnvMXdIzc HC:1070 VC:000 FC:00 I:00
26F511 0 S:01FF P:EnvMXdIzc HC:1086 VC:000 FC:00 I:00
26F514 0 S:01FF P:EnvMXdIzc HC:1102 VC:000 FC:00 I:00
26F517 0 S:01FF P:EnvMXdIzc HC:1118 VC:000 FC:00 I:00
26F51A 0 S:01FF P:EnvMXdIzc HC:1134 VC:000 FC:00 I:00
26F51C 0 S:01FF P:EnvMXdIzc HC:1150 VC:000 FC:00 I:00
26F51D 0 S:01FF P:EnvMXdIzc HC:1166 VC:000 FC:00 I:00
26F51E 0 S:01FF P:EnvMXdIzc HC:1182 VC:000 FC:00 I:00
26F521 0 S:01FF P:EnvMXdIzc HC:1198 VC:000 FC:00 I:00
26F522 0 S:01FF P:EnvMXdIzc HC:1214 VC:000 FC:00 I:00
26F525 0 S:01FF P:EnvMXdIzc HC:1230 VC:000 FC:00 I:00
26F526 0 S:01FF P:EnvMXdIzc HC:1246 VC:000 FC:00 I:00
26F528 0 S:01FF P:EnvMXdIzc HC:1262 VC:000 FC:00 I:00
26F529 0 S:01FF P:EnvMXdIzc HC:1278 VC:000 FC:00 I:00
26F52C 0 S:01FF P:EnvMXdIzc HC:1294 VC:000 FC:00 I:00
26F530 0 S:01FF P:EnvMXdIzc HC:1310 VC:000 FC:00 I:00
26F533 0 S:01FF P:EnvMXdIzc HC:1326 VC:000 FC:00 I:00
26F536 0 S:01FF P:EnvMXdIzc HC:1342 VC:000 FC:00 I:00
26F539 0 S:01FF P:EnvMXdIzc HC:1358 VC:000 FC:00 I:00
26F53B 0 S:01FF P:EnvMXdIzc HC:1374 VC:000 FC:00 I:00
26F53E 0 S:01FF P:EnvMXdIzc HC:1390 VC:000 FC:00 I:00
26F541 0 S:01FF P:EnvMXdIzc HC:1406 VC:000 FC:00 I:00
26F543 0 S:01FF P:EnvMXdIzc HC:1422 VC:000 FC:00 I:00
26F546 0 S:01FF P:EnvMXdIzc HC:1438 VC:000 FC:00 I:00
26F547 0 S:01FF P:EnvMXdIzc HC:1454 VC:000 FC:00 I:00
26F548 0 S:01FF P:EnvMXdIzc HC:1470 VC:000 FC:00 I:00
26F549 0 S:01FF P:EnvMXdIzc HC:1486 VC:000 FC:00 I:00
26F54C 0 S:01FF P:EnvMXdIzc HC:1502 VC:000 FC:00 I:00
26F54F 0 S:01FF P:EnvMXdIzc HC:1518 VC:000 FC:00 I:00
26F552 0 S:01FF P:EnvMXdIzc HC:1534 VC:000 FC:00 I:00
26F555 0 S:01FF P:EnvMXdIzc HC:1550 VC:000 FC:00 I:00
26F558 0 S:01FF P:EnvMXdIzc HC:1566 VC:000 FC:00 I:00
26F55B 0 S:01FF P:EnvMXdIzc HC:1582 VC:000 FC:00 I:00
26F55D 0 S:01FF P:EnvMXdIzc HC:1598 VC:000 FC:00 I:00
26F560 0 S:01FF P:EnvMXdIzc HC:1614 VC:000 FC:00 I:00
26F562 0 S:01FF P:EnvMXdIzc HC:1630 VC:000 FC:00 I:00
26F565 0 S:01FF P:EnvMXdIzc HC:1646 VC:000 FC:00 I:00
26F567 0 S:01FF P:EnvMXdIzc HC:1662 VC:000 FC:00 I:00
26F569 0 S:01FF P:EnvMXdIzc HC:1678 VC:000 FC:00 I:00
26F56C 0 S:01FF P:EnvMXdIzc HC:1694 VC:000 FC:00 I:00
26F56F 0 S:01FF P:EnvMXdIzc HC:1710 VC:000 FC:00 I:00
26F571 0 S:01FF P:EnvMXdIzc HC:1726 VC:000 FC:00 I:00
26F574 0 S:01FF P:EnvMXdIzc HC:1742 VC:000 FC:00 I:00
26F577 0 S:01FF P:EnvMXdIzc HC:1758 VC:000 FC:00 I:00
26F579 0 S:01FF P:EnvMXdIzc HC:1774 VC:000 FC:00 I:00
26F57C 0 S:01FF P:EnvMXdIzc HC:1790 VC:000 FC:00 I:00
26F57E 0 S:01FF P:EnvMXdIzc HC:1806 VC:000 FC:00 I:00
26F580 0 S:01FF P:EnvMXdIzc HC:1822 VC:000 FC:00 I:00
26F582 0 S:01FF P:EnvMXdIzc HC:1838 VC:000 FC:00 I:00
26F584 0 S:01FF P:EnvMXdIzc HC:1854 VC:000 FC:00 I:00
26F587 0 S:01FF P:EnvMXdIzc HC:1870 VC:000 FC:00 I:00
26F589 0 S:01FF P:EnvMXdIzc HC:1886 VC:000 FC:00 I:00
26F58C 0 S:01FF P:EnvMXdIzc HC:1902 VC:000 FC:00 I:00
26F58D 0 S:01FF P:EnvMXdIzc HC:1918 VC:000 FC:00 I:00
26F590 0 S:01FF P:EnvMXdIzc HC:1934 VC:000 FC:00 I:00
26F593 0 S:01FF P:EnvMXdIzc HC:1950 VC:000 FC:00 I:00
26F596 0 S:01FF P:EnvMXdIzc HC:1966 VC:000 FC:00 I:00
26F599 0 S:01FF P:EnvMXdIzc HC:1982 VC:000 FC:00 I:00
26F59B 0 S:01FF P:EnvMXdIzc HC:1998 VC:000 FC:00 I:00
26F59D 0 S:01FF P:EnvMXdIzc HC:2014 VC:000 FC:00 I:00
26F59F 0 S:01FF P:EnvMXdIzc HC:2030 VC:000 FC:00 I:00
26F5A2 0 S:01FF P:EnvMXdIzc HC:2046 VC:000 FC:00 I:00
26F5A5 0 S:01FF P:EnvMXdIzc HC:2062 VC:000 FC:00 I:00
26F5A8 0 S:01FF P:EnvMXdIzc HC:2078 VC:000 FC:00 I:00
26F5AB 0 S:01FF P:EnvMXdIzc HC:2094 VC:000 FC:00 I:00
26F5AD 0 S:01FF P:EnvMXdIzc HC:2110 VC:000 FC:00 I:00
26F5AF 0 S:01FF P:EnvMXdIzc HC:2126 VC:000 FC:00 I:00
26F5B2 0 S:01FF P:EnvMXdIzc HC:2142 VC:000 FC:00 I:00
26F5B4 0 S:01FF P:EnvMXdIzc HC:2158 VC:000 FC:00 I:00
26F5B7 0 S:01FF P:EnvMXdIzc HC:2174 VC:000 FC:00 I:00
26F5BA 0 S:01FF P:EnvMXdIzc HC:2190 VC:000 FC:00 I:00
26F5BD 0 S:01FF P:EnvMXdIzc HC:2206 VC:000 FC:00 I:00
26F5C0 0 S:01FF P:EnvMXdIzc HC:2222 VC:000 FC:00 I:00
26F5C3 0 S:01FF P:EnvMXdIzc HC:2238 VC:000 FC:00 I:00
26F5C5 0 S:01FF P:EnvMXdIzc HC:2254 VC:000 FC:00 I:00
26F5C8 0 S:01FF P:EnvMXdIzc HC:2270 VC:000 FC:00 I:00
26F5CB 0 S:01FF P:EnvMXdIzc HC:2286 VC:000 FC:00 I:00
26F5CE 0 S:01FF P:EnvMXdIzc HC:2302 VC:000 FC:00 I:00
26F5D1 0 S:01FF P:EnvMXdIzc HC:2318 VC:000 FC:00 I:00
26F5D3 0 S:01FF P:EnvMXdIzc HC:2334 VC:000 FC:00 I:00
26F5D4 0 S:01FF P:EnvMXdIzc HC:2350 VC:000 FC:00 I:00
26F5D5 0 S:01FF P:EnvMXdIzc HC:2366 VC:000 FC:00 I:00
26F5D6 0 S:01FF P:EnvMXdIzc HC:2382 VC:000 FC:00 I:00
26F5D7 0 S:01FF P:EnvMXdIzc HC:2398 VC:000 FC:00 I:00
26F5DA 0 S:01FF P:EnvMXdIzc HC:2414 VC:000 FC:00 I:00
26F5DD 0 S:01FF P:EnvMXdIzc HC:2430 VC:000 FC:00 I:00
26F5E0 0 S:01FF P:EnvMXdIzc HC:2446 VC:000 FC:00 I:00
26F5E3 0 S:01FF P:EnvMXdIzc HC:2462 VC:000 FC:00 I:00
26F5E6 0 S:01FF P:EnvMXdIzc HC:2478 VC:000 FC:00 I:00
26F5E9 0 S:01FF P:EnvMXdIzc HC:2494 VC:000 FC:00 I:00
26F5EC 0 S:01FF P:EnvMXdIzc HC:2510 VC:000 FC:00 I:00
26F5ED 0 S:01FF P:EnvMXdIzc HC:2526 VC:000 FC:00 I:00
26F5EE 0 S:01FF P:EnvMXdIzc HC:2542 VC:000 FC:00 I:00
26F5F0 0 S:01FF P:EnvMXdIzc HC:2558 VC:000 FC:00 I:00
26F5F3 0 S:01FF P:EnvMXdIzc HC:2574 VC:000 FC:00 I:00
26F5F5 0 S:01FF P:EnvMXdIzc HC:2590 VC:000 FC:00 I:00
26F5F8 0 S:01FF P:EnvMXdIzc HC:2606 VC:000 FC:00 I:00
26F5FA 0 S:01FF P:EnvMXdIzc HC:2622 VC:000 FC:00 I:00
26F5FD 0 S:01FF P:EnvMXdIzc HC:2638 VC:000 FC:00 I:00
26F600 0 S:01FF P:EnvMXdIzc HC:2654 VC:000 FC:00 I:00
26F602 0 S:01FF P:EnvMXdIzc HC:2670 VC:000 FC:00 I:00
26F604 0 S:01FF P:EnvMXdIzc HC:2686 VC:000 FC:00 I:00
26F607 0 S:01FF P:EnvMXdIzc HC:2702 VC:000 FC:00 I:00
26F60A 0 S:01FF P:EnvMXdIzc HC:2718 VC:000 FC:00 I:00
26F60D 0 S:01FF P:EnvMXdIzc HC:2734 VC:000 FC:00 I:00
26F610 0 S:01FF P:EnvMXdIzc HC:2750 VC:000 FC:00 I:00
26F613 0 S:01FF P:EnvMXdIzc HC:2766 VC:000 FC:00 I:00
26F616 0 S:01FF P:EnvMXdIzc HC:2782 VC:000 FC:00 I:00
26F618 0 S:01FF P:EnvMXdIzc HC:2798 VC:000 FC:00 I:00
26F61B 0 S:01FF P:EnvMXdIzc HC:2814 VC:000 FC:00 I:00
26F61D 0 S:01FF P:EnvMXdIzc HC:2830 VC:000 FC:00 I:00
26F620 0 S:01FF P:EnvMXdIzc HC:2846 VC:000 FC:00 I:00
26F621 0 S:01FF P:EnvMXdIzc HC:2862 VC:000 FC:00 I:00
26F622 0 S:01FF P:EnvMXdIzc HC:2878 VC:000 FC:00 I:00
26F623 0 S:01FF P:EnvMXdIzc HC:2894 VC:000 FC:00 I:00
26F625 0 S:01FF P:EnvMXdIzc HC:2910 VC:000 FC:00 I:00
26F627 0 S:01FF P:EnvMXdIzc HC:2926 VC:000 FC:00 I:00
26F628 0 S:01FF P:EnvMXdIzc HC:2942 VC:000 FC:00 I:00
26F629 0 S:01FF P:EnvMXdIzc HC:2958 VC:000 FC:00 I:00
26F62B 0 S:01FF P:EnvMXdIzc HC:2974 VC:000 FC:00 I:00
26F62D 0 S:01FF P:EnvMXdIzc HC:2990 VC:000 FC:00 I:00
26F62E 0 S:01FF P:EnvMXdIzc HC:3006 VC:000 FC:00 I:00
26F62F 0 S:01FF P:EnvMXdIzc HC:3022 VC:000 FC:00 I:00
26F631 0 S:01FF P:EnvMXdIzc HC:3038 VC:000 FC:00 I:00
26F632 0 S:01FF P:EnvMXdIzc HC:3054 VC:000 FC:00 I:00
26F635 0 S:01FF P:EnvMXdIzc HC:3070 VC:000 FC:00 I:00
26F638 0 S:01FF P:EnvMXdIzc HC:3086 VC:000 FC:00 I:00
26F639 0 S:01FF P:EnvMXdIzc HC:3102 VC:000 FC:00 I:00
26F63A 0 S:01FF P:EnvMXdIzc HC:3118 VC:000 FC:00 I:00
26F63B 0 S:01FF P:EnvMXdIzc HC:3134 VC:000 FC:00 I:00
26F63D 0 S:01FF P:EnvMXdIzc HC:3150 VC:000 FC:00 I:00
26F63E 0 S:01FF P:EnvMXdIzc HC:3166 VC:000 FC:00 I:00
26F641 0 S:01FF P:EnvMXdIzc HC:3182 VC:000 FC:00 I:00
26F644 0 S:01FF P:EnvMXdIzc HC:3198 VC:000 FC:00 I:00
26F645 0 S:01FF P:EnvMXdIzc HC:3214 VC:000 FC:00 I:00
26F648 0 S:01FF P:EnvMXdIzc HC:3230 VC:000 FC:00 I:00
26F649 0 S:01FF P:EnvMXdIzc HC:3246 VC:000 FC:00 I:00
26F64A 0 S:01FF P:EnvMXdIzc HC:3262 VC:000 FC:00 I:00
26F64B 0 S:01FF P:EnvMXdIzc HC:3278 VC:000 FC:00 I:00
26F64C 0 S:01FF P:EnvMXdIzc HC:3294 VC:000 FC:00 I:00
26F64D 0 S:01FF P:EnvMXdIzc HC:3310 VC:000 FC:00 I:00
26F650 0 S:01FF P:EnvMXdIzc HC:3326 VC:000 FC:00 I:00
26F653 0 S:01FF P:EnvMXdIzc HC:3342 VC:000 FC:00 I:00
26F654 0 S:01FF P:EnvMXdIzc HC:3358 VC:000 FC:00 I:00
26F656 0 S:01FF P:EnvMXdIzc HC:3374 VC:000 FC:00 I:00
26F659 0 S:01FF P:EnvMXdIzc HC:3390 VC:000 FC:00 I:00
26F65A 0 S:01FF P:EnvMXdIzc HC:3406 VC:000 FC:00 I:00
26F65B 0 S:01FF P:EnvMXdIzc HC:3422 VC:000 FC:00 I:00
26F65C 0 S:01FF P:EnvMXdIzc HC:3438 VC:000 FC:00 I:00
26F65D 0 S:01FF P:EnvMXdIzc HC:3454 VC:000 FC:00 I:00
26F65F 0 S:01FF P:EnvMXdIzc HC:3470 VC:000 FC:00 I:00
26F661 0 S:01FF P:EnvMXdIzc HC:3486 VC:000 FC:00 I:00
26F663 0 S:01FF P:EnvMXdIzc HC:3502 VC:000 FC:00 I:00
26F664 0 S:01FF P:EnvMXdIzc HC:3518 VC:000 FC:00 I:00
26F665 0 S:01FF P:EnvMXdIzc HC:3534 VC:000 FC:00 I:00
26F668 0 S:01FF P:EnvMXdIzc HC:3550 VC:000 FC:00 I:00
26F66B 0 S:01FF P:EnvMXdIzc HC:3566 VC:000 FC:00 I:00
26F66C 0 S:01FF P:EnvMXdIzc HC:3582 VC:000 FC:00 I:00
26F66E 0 S:01FF P:EnvMXdIzc HC:3598 VC:000 FC:00 I:00
26F670 0 S:01FF P:EnvMXdIzc HC:3614 VC:000 FC:00 I:00
26F671 0 S:01FF P:EnvMXdIzc HC:3630 VC:000 FC:00 I:00
26F672 0 S:01FF P:EnvMXdIzc HC:3646 VC:000 FC:00 I:00
26F675 0 S:01FF P:EnvMXdIzc HC:3662 VC:000 FC:00 I:00
26F678 0 S:01FF P:EnvMXdIzc HC:3678 VC:000 FC:00 I:00
279B82 Sprite INIT Routines
279B8E \
279B90  |
279B93  |
279B96  |
279B98  |
279B99  |
279B9A  |Sprite # to 24-bit pointer index
279B9C  | then jump to pointer code.
279B9D  |
279B9F  |
279BA3  |
279BA5  |
279BA9  |
279BAB  |
279BAF  |
279BB1  |
279BB3  |
279BB4 /
279BB7 \
279BBA  |$21:B263, NOT bank $27
279BBD  |
279BBF  |
279BC2 /
279D44 Sprite MAIN Routines
27A859 \Invert accumulator (8-bit)
27A85B  |
27A85C  |Something tells me SMW's version (InvertAccum) is better
27A85E /
27C60F Draw GFX for laser sprite
27C612 \
27C614 /
27C616 \
27C619  |
27C61A  |Y position decreases by 8 every frame
27C61C /
27C61F \
27C621  |
27C622  |
27C625  |
27C627  |
27C628  |X position decreases by 8 every frame
27C62B  |
27C62D  |
27C630  |
27C631 /
27C633 \Related to detecting solid tile for laser to
27C636 /interact with? Return if none found
27C638 \ Prepare smoke image position by altering own position
27C63B  |(Extended sprite Y position &= 0xF0) + 0x05
27C63D  |
27C63E  |
27C640 /
27C643 \
27C646  |(Extended sprite X position &= 0xF0) + 0x0B
27C648  |
27C64A /
27C64D Remove self (store 00 to extended sprite number)
27C650 \
27C652  |Search for free slot for smoke image
27C655  |
27C657  |
27C658  |
27C65A /
27C65B \Smoke image = smoke
27C65D /
27C660 \
27C663  |
27C664  |Setup smoke image x position
27C666  |
27C667  |
27C66A /
27C66D \
27C670  |
27C671  |Setu smoke image Y position
27C673  |
27C676 /
27C679 \How long does the smoke image last.
27C67B /
27D897 \
27D89A  |
27D89D  |
27D8A0 /
27D8A4 \
27D8A7  |If mario is not between $38 and $4C pixels 
27D8A8  |close to the sprite (20 pixels area), branch
27D8AA  |
27D8AC  |
27D8AE  |
27D8B0 /
27D8B2 \
27D8B4  |
27D8B7  |Search free slot for laser sprite
27D8B9  |(Not regular sprite index. rather it's some other type)
27D8BA / (Extended sprites maybe?)
27D8BC return
27D8BD \Sound effect the bowser statue laser plays
27D8BF /
27D8C2 \Sprite: Laser sprite
27D8C4 /
27D8C7 \
27D8CA  |
27D8CB  |Set extended sprite X pos
27D8CE  |
27D8D0  |
27D8D1  |
27D8D4  |
27D8D6  |
27D8D9  |
27D8DA /
27D8DD \
27D8E0  |Set extended sprite Y pos
27D8E1  |
27D8E3 /
288000 Pointers for regular sprites?
28EDF2 ROTO DISC MAIN routines?
28EE8C Update roto movement?
28EE8F Update roto offscreenness?
28EE93 Update roto interaction?
28EE97 Update roto interaction again?
28EE9B \
28EE9D  |
28EE9F /Set $0669 every 0x01 frame
28EEA2 \
28EEA4  |
28EEA5  |
28EEA6 /
28EEA9 ???
28EEAD Draw roto-disc.
2A8DB6 Is this the level loading routine?
2A994C 0 S:01FF P:EnvMXdIzc HC:20934 VC:000 FC:00 I:00
2A994E 0 S:01FF P:EnvMxdIzc HC:20950 VC:000 FC:00 I:00
2A9950 0 S:01FF P:EnvMxdIzc HC:20966 VC:000 FC:00 I:00
2A9954 0 S:01FF P:EnvMxdIzc HC:20982 VC:000 FC:00 I:00
2A9956 0 S:01FF P:EnvMxdIzc HC:20998 VC:000 FC:00 I:00
2A9958 0 S:01FF P:EnvMxdIzc HC:21014 VC:000 FC:00 I:00
2A995A 0 S:01FF P:EnvMxdIzc HC:21030 VC:000 FC:00 I:00
2A995D 0 S:01FF P:EnvMxdIzc HC:21054 VC:000 FC:00 I:00
2A995F 0 S:01FF P:EnvmxdIzc HC:21070 VC:000 FC:00 I:00
2A9961 0 S:01FF P:EnvmxdIzc HC:21086 VC:000 FC:00 I:00
2A9962 0 S:01FF P:EnvmxdIzc HC:21102 VC:000 FC:00 I:00
2A9965 0 S:01FF P:EnvmxdIzc HC:21118 VC:000 FC:00 I:00
2A9967 0 S:01FF P:EnvmxdIzc HC:21142 VC:000 FC:00 I:00
2A9969 0 S:01FF P:EnvMxdIzc HC:21158 VC:000 FC:00 I:00
2A996B 0 S:01FF P:EnvMxdIzc HC:21174 VC:000 FC:00 I:00
2A996D 0 S:01FF P:EnvMxdIzc HC:21190 VC:000 FC:00 I:00
2A9970 0 S:01FF P:EnvMxdIzc HC:21214 VC:000 FC:00 I:00
2A9972 0 S:01FF P:EnvmxdIzc HC:21230 VC:000 FC:00 I:00
2A9974 0 S:01FF P:EnvmxdIzc HC:21246 VC:000 FC:00 I:00
2A9975 0 S:01FF P:EnvmxdIzc HC:21262 VC:000 FC:00 I:00
2A9978 0 S:01FF P:EnvmxdIzc HC:21278 VC:000 FC:00 I:00
2A9979 0 S:01FF P:EnvmxdIzc HC:21302 VC:000 FC:00 I:00
2A997B 0 S:01FF P:EnvMxdIzc HC:21318 VC:000 FC:00 I:00
2A997D 0 S:01FF P:EnvMxdIzc HC:21334 VC:000 FC:00 I:00
2A9980 0 S:01FF P:EnvMxdIzc HC:21350 VC:000 FC:00 I:00
2A9982 0 S:01FF P:EnvMxdIzc HC:21366 VC:000 FC:00 I:00
2A9985 0 S:01FF P:EnvMxdIzc HC:21390 VC:000 FC:00 I:00
2A9AB4 0 S:01FF P:EnvMXdIzc HC:22470 VC:000 FC:00 I:00
2A9AB6 0 S:01FF P:EnvMXdIzc HC:22486 VC:000 FC:00 I:00
2A9AB9 0 S:01FF P:EnvMXdIzc HC:22502 VC:000 FC:00 I:00
2A9ABB 0 S:01FF P:EnvMXdIzc HC:22518 VC:000 FC:00 I:00
2A9BC5 0 S:01FF P:EnvMXdIzc HC:23006 VC:000 FC:00 I:00
2A9BC7 0 S:01FF P:EnvMXdIzc HC:23022 VC:000 FC:00 I:00
2A9BC9 0 S:01FF P:EnvMXdIzc HC:23038 VC:000 FC:00 I:00
2A9BCB 0 S:01FF P:EnvMXdIzc HC:23054 VC:000 FC:00 I:00
2A9BCD 0 S:01FF P:EnvMXdIzc HC:23070 VC:000 FC:00 I:00
2A9C06 0 S:01FF P:EnvMXdIzc HC:31510 VC:000 FC:00 I:00
2A9C08 0 S:01FF P:EnvmxdIzc HC:31526 VC:000 FC:00 I:00
2A9C0B 0 S:01FF P:EnvmxdIzc HC:31542 VC:000 FC:00 I:00
2A9C0D 0 S:01FF P:EnvmxdIzc HC:31558 VC:000 FC:00 I:00
2A9C10 0 S:01FF P:EnvmxdIzc HC:31574 VC:000 FC:00 I:00
2A9C12 0 S:01FF P:EnvmxdIzc HC:31590 VC:000 FC:00 I:00
2A9C14 0 S:01FF P:EnvmxdIzc HC:31614 VC:000 FC:00 I:00
2A9C16 0 S:01FF P:EnvmxdIzc HC:31630 VC:000 FC:00 I:00
2A9C19 0 S:01FF P:EnvmxdIzc HC:31646 VC:000 FC:00 I:00
2A9C1B 0 S:01FF P:EnvmxdIzc HC:31662 VC:000 FC:00 I:00
2A9C1E 0 S:01FF P:EnvmxdIzc HC:31678 VC:000 FC:00 I:00
2A9C20 0 S:01FF P:EnvmxdIzc HC:31694 VC:000 FC:00 I:00
2A9CCF 0 S:01FF P:EnvMXdIzc HC:33470 VC:000 FC:00 I:00
2A9CD1 0 S:01FF P:EnvmxdIzc HC:33486 VC:000 FC:00 I:00
2A9CD3 0 S:01FF P:EnvmxdIzc HC:33502 VC:000 FC:00 I:00
2A9CD4 0 S:01FF P:EnvmxdIzc HC:33518 VC:000 FC:00 I:00
2A9CD5 0 S:01FF P:EnvmxdIzc HC:33534 VC:000 FC:00 I:00
2A9CD8 0 S:01FF P:EnvmxdIzc HC:33550 VC:000 FC:00 I:00
2A9CDA 0 S:01FF P:EnvmxdIzc HC:33574 VC:000 FC:00 I:00
2A9CDC 0 S:01FF P:EnvMxdIzc HC:33590 VC:000 FC:00 I:00
2A9CDF 0 S:01FF P:EnvMxdIzc HC:33606 VC:000 FC:00 I:00                     
2A9D3A 0 S:01FF P:EnvMxdIzc HC:1990 VC:000 FC:00 I:00
2A9D3C 0 S:01FF P:EnvMxdIzc HC:2006 VC:000 FC:00 I:00
2A9D3F 0 S:01FF P:EnvMxdIzc HC:2022 VC:000 FC:00 I:00
2A9D41 0 S:01FF P:EnvMxdIzc HC:2038 VC:000 FC:00 I:00
2A9D44 0 S:01FF P:EnvMxdIzc HC:35406 VC:000 FC:00 I:00
2A9D46 0 S:01FF P:EnvmxdIzc HC:35422 VC:000 FC:00 I:00
2A9D47 0 S:01FF P:EnvmxdIzc HC:35438 VC:000 FC:00 I:00
2A9D48 0 S:01FF P:EnvmxdIzc HC:35454 VC:000 FC:00 I:00
2A9D4B 0 S:01FF P:EnvmxdIzc HC:35470 VC:000 FC:00 I:00
2A9D4C 0 S:01FF P:EnvmxdIzc HC:35494 VC:000 FC:00 I:00
2A9D4E 0 S:01FF P:EnvMxdIzc HC:35510 VC:000 FC:00 I:00
2A9D4F 0 S:01FF P:EnvMxdIzc HC:35526 VC:000 FC:00 I:00
2A9D52 0 S:01FF P:EnvMxdIzc HC:35542 VC:000 FC:00 I:00
2A9D54 0 S:01FF P:EnvMxdIzc HC:35558 VC:000 FC:00 I:00
2A9D56 0 S:01FF P:EnvMxdIzc HC:35574 VC:000 FC:00 I:00
2A9D58 0 S:01FF P:EnvMxdIzc HC:35590 VC:000 FC:00 I:00
2A9D5A 0 S:01FF P:EnvMxdIzc HC:35606 VC:000 FC:00 I:00
2A9D5C 0 S:01FF P:EnvMxdIzc HC:35622 VC:000 FC:00 I:00
2A9D5E 0 S:01FF P:EnvMxdIzc HC:35646 VC:000 FC:00 I:00
2A9EE8 0 S:01FF P:EnvMXdIzc HC:37134 VC:000 FC:00 I:00
2A9EEA 0 S:01FF P:EnvmxdIzc HC:37150 VC:000 FC:00 I:00
2A9EEC 0 S:01FF P:EnvmxdIzc HC:37166 VC:000 FC:00 I:00
2A9EED 0 S:01FF P:EnvmxdIzc HC:37182 VC:000 FC:00 I:00
2A9EEE 0 S:01FF P:EnvmxdIzc HC:37198 VC:000 FC:00 I:00
2A9EF1 0 S:01FF P:EnvmxdIzc HC:37214 VC:000 FC:00 I:00
2A9EF3 0 S:01FF P:EnvmxdIzc HC:37238 VC:000 FC:00 I:00
2A9EF5 0 S:01FF P:EnvMxdIzc HC:37254 VC:000 FC:00 I:00
2A9EF8 0 S:01FF P:EnvMxdIzc HC:37270 VC:000 FC:00 I:00
2A9EFA 0 S:01FF P:EnvMxdIzc HC:37286 VC:000 FC:00 I:00
2A9EFC 0 S:01FF P:EnvMxdIzc HC:37302 VC:000 FC:00 I:00
2A9EFF 0 S:01FF P:EnvMxdIzc HC:37318 VC:000 FC:00 I:00
2A9F01 0 S:01FF P:EnvMxdIzc HC:37334 VC:000 FC:00 I:00
2A9F04 0 S:01FF P:EnvMxdIzc HC:37358 VC:000 FC:00 I:00
2A9F06 0 S:01FF P:EnvmxdIzc HC:37374 VC:000 FC:00 I:00
2A9F08 0 S:01FF P:EnvmxdIzc HC:37390 VC:000 FC:00 I:00
2A9F0A 0 S:01FF P:EnvmxdIzc HC:37414 VC:000 FC:00 I:00
2A9F0C 0 S:01FF P:EnvMxdIzc HC:37430 VC:000 FC:00 I:00
2A9F0E 0 S:01FF P:EnvMxdIzc HC:37446 VC:000 FC:00 I:00
2A9F10 0 S:01FF P:EnvMxdIzc HC:37462 VC:000 FC:00 I:00
2A9F13 0 S:01FF P:EnvMxdIzc HC:37478 VC:000 FC:00 I:00
2A9F15 0 S:01FF P:EnvMxdIzc HC:37494 VC:000 FC:00 I:00
2A9F18 0 S:01FF P:EnvMxdIzc HC:37518 VC:000 FC:00 I:00
2A9F7D 0 S:01FF P:EnvMXdIzc HC:39302 VC:000 FC:00 I:00
2A9F7F 0 S:01FF P:EnvMxdIzc HC:39318 VC:000 FC:00 I:00
2A9F82 0 S:01FF P:EnvMxdIzc HC:39334 VC:000 FC:00 I:00
2AA120 0 S:01FF P:EnvMXdIzc HC:40366 VC:000 FC:00 I:00
2AA123 0 S:01FF P:EnvMXdIzc HC:40390 VC:000 FC:00 I:00
2AA125 0 S:01FF P:EnvMxdIzc HC:40406 VC:000 FC:00 I:00
2AA127 0 S:01FF P:EnvMxdIzc HC:40422 VC:000 FC:00 I:00
2AA129 0 S:01FF P:EnvMxdIzc HC:40438 VC:000 FC:00 I:00
2AA12B 0 S:01FF P:EnvMxdIzc HC:40454 VC:000 FC:00 I:00
2AA12E 0 S:01FF P:EnvMxdIzc HC:40470 VC:000 FC:00 I:00
2AA130 0 S:01FF P:EnvMxdIzc HC:40486 VC:000 FC:00 I:00
2AA133 0 S:01FF P:EnvMxdIzc HC:40510 VC:000 FC:00 I:00
2AA135 0 S:01FF P:EnvMXdIzc HC:40526 VC:000 FC:00 I:00                  
2AA221 0 S:01FF P:EnvMXdIzc HC:40550 VC:000 FC:00 I:00
2AA223 0 S:01FF P:EnvMXdIzc HC:40566 VC:000 FC:00 I:00
2AA225 0 S:01FF P:EnvMXdIzc HC:40582 VC:000 FC:00 I:00                 
2AA38D 0 S:01FF P:EnvMXdIzc HC:40606 VC:000 FC:00 I:00
2AA38F 0 S:01FF P:EnvMXdIzc HC:40622 VC:000 FC:00 I:00
2AA391 0 S:01FF P:EnvMXdIzc HC:40638 VC:000 FC:00 I:00                   
2AA505 0 S:01FF P:EnvMXdIzc HC:41462 VC:000 FC:00 I:00
2AA507 0 S:01FF P:EnvMxdIzc HC:41478 VC:000 FC:00 I:00
2AA509 0 S:01FF P:EnvMxdIzc HC:41494 VC:000 FC:00 I:00
2AA50B 0 S:01FF P:EnvMxdIzc HC:41510 VC:000 FC:00 I:00
2AA50F 0 S:01FF P:EnvMxdIzc HC:41526 VC:000 FC:00 I:00
2AA511 0 S:01FF P:EnvMxdIzc HC:41542 VC:000 FC:00 I:00
2AA513 0 S:01FF P:EnvMxdIzc HC:41558 VC:000 FC:00 I:00
2AA515 0 S:01FF P:EnvMxdIzc HC:41574 VC:000 FC:00 I:00
2AA517 0 S:01FF P:EnvMxdIzc HC:41590 VC:000 FC:00 I:00
2AA519 0 S:01FF P:EnvMxdIzc HC:41606 VC:000 FC:00 I:00
2AA51C 0 S:01FF P:EnvMxdIzc HC:41622 VC:000 FC:00 I:00
2AA51E 0 S:01FF P:EnvMxdIzc HC:41638 VC:000 FC:00 I:00
2AA520                
2AA6D7 0 S:01FF P:EnvMXdIzc HC:43606 VC:000 FC:00 I:00
2AA6D9 0 S:01FF P:EnvMxdIzc HC:43622 VC:000 FC:00 I:00
2AA6DB 0 S:01FF P:EnvMxdIzc HC:43638 VC:000 FC:00 I:00
2AA6DF 0 S:01FF P:EnvMxdIzc HC:43654 VC:000 FC:00 I:00
2AA6E1 0 S:01FF P:EnvMxdIzc HC:43670 VC:000 FC:00 I:00
2AA6E3 0 S:01FF P:EnvMxdIzc HC:43686 VC:000 FC:00 I:00
2AA6E5 0 S:01FF P:EnvMxdIzc HC:43702 VC:000 FC:00 I:00
2AA6E7 0 S:01FF P:EnvMxdIzc HC:43718 VC:000 FC:00 I:00
2AA6EA 0 S:01FF P:EnvMxdIzc HC:43734 VC:000 FC:00 I:00
2AA6EB 0 S:01FF P:EnvMxdIzc HC:43750 VC:000 FC:00 I:00
2AA6EC 0 S:01FF P:EnvMxdIzc HC:43766 VC:000 FC:00 I:00
2AA6EE 0 S:01FF P:EnvMxdIzc HC:43782 VC:000 FC:00 I:00
2AA6F0 0 S:01FF P:EnvMxdIzc HC:43806 VC:000 FC:00 I:00                  
2AA97A 0 S:01FF P:EnvMxdIzc HC:43822 VC:000 FC:00 I:00
2AA97C 0 S:01FF P:EnvMxdIzc HC:43838 VC:000 FC:00 I:00
2AA97F 0 S:01FF P:EnvMxdIzc HC:43854 VC:000 FC:00 I:00
2AA981 0 S:01FF P:EnvMxdIzc HC:43870 VC:000 FC:00 I:00
2AA984 0 S:01FF P:EnvMxdIzc HC:43886 VC:000 FC:00 I:00
2AA986 0 S:01FF P:EnvMxdIzc HC:43902 VC:000 FC:00 I:00
2AA989 0 S:01FF P:EnvMxdIzc HC:43918 VC:000 FC:00 I:00
2AA98A 0 S:01FF P:EnvMxdIzc HC:43934 VC:000 FC:00 I:00
2AA98B 0 S:01FF P:EnvMxdIzc HC:43950 VC:000 FC:00 I:00
2AA98D 0 S:01FF P:EnvMxdIzc HC:43966 VC:000 FC:00 I:00
2AA98F 0 S:01FF P:EnvMxdIzc HC:43990 VC:000 FC:00 I:00
2AA991 0 S:01FF P:EnvmxdIzc HC:44006 VC:000 FC:00 I:00
2AA992 0 S:01FF P:EnvmxdIzc HC:44022 VC:000 FC:00 I:00
2AA995 0 S:01FF P:EnvmxdIzc HC:44038 VC:000 FC:00 I:00
2AA997 0 S:01FF P:EnvmxdIzc HC:44054 VC:000 FC:00 I:00
2AA998 0 S:01FF P:EnvmxdIzc HC:44070 VC:000 FC:00 I:00
2AA99B 0 S:01FF P:EnvmxdIzc HC:44086 VC:000 FC:00 I:00         
2AA9CB 0 S:01FF P:EnvMxdIzc HC:44102 VC:000 FC:00 I:00
2AA9CE 0 S:01FF P:EnvMxdIzc HC:44118 VC:000 FC:00 I:00
2AA9D0 0 S:01FF P:EnvMxdIzc HC:44134 VC:000 FC:00 I:00
2AA9D2 0 S:01FF P:EnvMxdIzc HC:44150 VC:000 FC:00 I:00
2AA9D5 0 S:01FF P:EnvMxdIzc HC:44166 VC:000 FC:00 I:00
2AA9D6 0 S:01FF P:EnvMxdIzc HC:44182 VC:000 FC:00 I:00
2AA9D8 0 S:01FF P:EnvMxdIzc HC:44198 VC:000 FC:00 I:00
2AA9DB 0 S:01FF P:EnvMxdIzc HC:44222 VC:000 FC:00 I:00
2AA9DD 0 S:01FF P:EnvmxdIzc HC:44238 VC:000 FC:00 I:00
2AA9DF 0 S:01FF P:EnvmxdIzc HC:44254 VC:000 FC:00 I:00
2AA9E0 0 S:01FF P:EnvmxdIzc HC:44270 VC:000 FC:00 I:00
2AA9E3 0 S:01FF P:EnvmxdIzc HC:44286 VC:000 FC:00 I:00
2AA9E5 0 S:01FF P:EnvmxdIzc HC:44310 VC:000 FC:00 I:00
2AA9E7 0 S:01FF P:EnvMxdIzc HC:44326 VC:000 FC:00 I:00
2AA9E8 0 S:01FF P:EnvMxdIzc HC:44342 VC:000 FC:00 I:00
2AA9E9 0 S:01FF P:EnvMxdIzc HC:44358 VC:000 FC:00 I:00
2AA9EB 0 S:01FF P:EnvMxdIzc HC:44374 VC:000 FC:00 I:00
2AA9ED 0 S:01FF P:EnvMxdIzc HC:44390 VC:000 FC:00 I:00                    
2AA9F6 0 S:01FF P:EnvMXdIzc HC:44414 VC:000 FC:00 I:00
2AA9F8 0 S:01FF P:EnvMxdIzc HC:44430 VC:000 FC:00 I:00
2AA9FA 0 S:01FF P:EnvMxdIzc HC:44446 VC:000 FC:00 I:00
2AA9FC 0 S:01FF P:EnvMxdIzc HC:44462 VC:000 FC:00 I:00
2AA9FF 0 S:01FF P:EnvMxdIzc HC:44478 VC:000 FC:00 I:00
2AAA01 0 S:01FF P:EnvMxdIzc HC:44494 VC:000 FC:00 I:00
2AAA04 0 S:01FF P:EnvMxdIzc HC:44510 VC:000 FC:00 I:00
2AAA05 0 S:01FF P:EnvMxdIzc HC:44526 VC:000 FC:00 I:00
2AAA07 0 S:01FF P:EnvMxdIzc HC:44542 VC:000 FC:00 I:00
2AAA0A 0 S:01FF P:EnvMxdIzc HC:44558 VC:000 FC:00 I:00
2AAA0C 0 S:01FF P:EnvMxdIzc HC:44574 VC:000 FC:00 I:00
2AAA0F 0 S:01FF P:EnvMxdIzc HC:44598 VC:000 FC:00 I:00
2AAA11                        
2AAA57 0 S:01FF P:EnvMXdIzc HC:56726 VC:000 FC:00 I:00
2AAA59 0 S:01FF P:EnvmxdIzc HC:56742 VC:000 FC:00 I:00
2AAA5C 0 S:01FF P:EnvmxdIzc HC:56758 VC:000 FC:00 I:00
2AAA5E 0 S:01FF P:EnvmxdIzc HC:56774 VC:000 FC:00 I:00
2AAD96 0 S:01FF P:EnvMxdIzc HC:58270 VC:000 FC:00 I:00
2AAD98 0 S:01FF P:EnvMxdIzc HC:58286 VC:000 FC:00 I:00
2AAD9B 0 S:01FF P:EnvMxdIzc HC:58302 VC:000 FC:00 I:00
2AAD9C 0 S:01FF P:EnvMxdIzc HC:58318 VC:000 FC:00 I:00
2AAD9D 0 S:01FF P:EnvMxdIzc HC:58334 VC:000 FC:00 I:00
2AADA0 0 S:01FF P:EnvMxdIzc HC:58350 VC:000 FC:00 I:00
2AADA2 0 S:01FF P:EnvMxdIzc HC:58366 VC:000 FC:00 I:00
2AAE80 0 S:01FF P:EnvMXdIzc HC:1198 VC:000 FC:00 I:00
2AAE82 0 S:01FF P:EnvmXdIzc HC:1214 VC:000 FC:00 I:00
2AAEF6 0 S:01FF P:EnvMXdIzc HC:1374 VC:000 FC:00 I:00
2AAEF8 0 S:01FF P:EnvMXdIzc HC:1390 VC:000 FC:00 I:00
2AAEFA 0 S:01FF P:EnvMXdIzc HC:1406 VC:000 FC:00 I:00
2AAEFD 0 S:01FF P:EnvMXdIzc HC:1422 VC:000 FC:00 I:00
2AAEFE 0 S:01FF P:EnvMXdIzc HC:1438 VC:000 FC:00 I:00
2AAFF4 0 S:01FF P:EnvMXdIzc HC:1502 VC:000 FC:00 I:00
2AAFF6 0 S:01FF P:EnvMXdIzc HC:1518 VC:000 FC:00 I:00
2AAFF8 0 S:01FF P:EnvMXdIzc HC:1534 VC:000 FC:00 I:00
2AAFFA 0 S:01FF P:EnvMXdIzc HC:1550 VC:000 FC:00 I:00
2AAFFD 0 S:01FF P:EnvMXdIzc HC:1566 VC:000 FC:00 I:00
2AAFFE 0 S:01FF P:EnvMXdIzc HC:1582 VC:000 FC:00 I:00
2AB000 0 S:01FF P:EnvMXdIzc HC:1598 VC:000 FC:00 I:00
2AB002 0 S:01FF P:EnvMXdIzc HC:1614 VC:000 FC:00 I:00                     
2AB1FF 0 S:01FF P:EnvMXdIzc HC:1630 VC:000 FC:00 I:00
2AB201 0 S:01FF P:EnvMXdIzc HC:1646 VC:000 FC:00 I:00
2AB203 0 S:01FF P:EnvMXdIzc HC:1662 VC:000 FC:00 I:00
2AB205 0 S:01FF P:EnvMXdIzc HC:1678 VC:000 FC:00 I:00
2AB207 0 S:01FF P:EnvMXdIzc HC:1694 VC:000 FC:00 I:00
2AB209 0 S:01FF P:EnvMXdIzc HC:1710 VC:000 FC:00 I:00
2AB20B 0 S:01FF P:EnvMXdIzc HC:1726 VC:000 FC:00 I:00
2AB20D 0 S:01FF P:EnvMXdIzc HC:1742 VC:000 FC:00 I:00
2AB20F 0 S:01FF P:EnvMXdIzc HC:1758 VC:000 FC:00 I:00
2AB315 0 S:01FF P:EnvMXdIzc HC:1782 VC:000 FC:00 I:00
2AB317 0 S:01FF P:EnvmxdIzc HC:1798 VC:000 FC:00 I:00
2AB31A 0 S:01FF P:EnvmxdIzc HC:1814 VC:000 FC:00 I:00
2AB31C 0 S:01FF P:EnvmxdIzc HC:1830 VC:000 FC:00 I:00
2AB31F 0 S:01FF P:EnvmxdIzc HC:1846 VC:000 FC:00 I:00
2AB321 0 S:01FF P:EnvmxdIzc HC:1870 VC:000 FC:00 I:00
2AB323 0 S:01FF P:EnvMxdIzc HC:1886 VC:000 FC:00 I:00
2AB326 0 S:01FF P:EnvMxdIzc HC:1910 VC:000 FC:00 I:00
2AB331 0 S:01FF P:EnvMXdIzc HC:3710 VC:000 FC:00 I:00
2AB333 0 S:01FF P:EnvmxdIzc HC:3726 VC:000 FC:00 I:00
2AB336 0 S:01FF P:EnvmxdIzc HC:3742 VC:000 FC:00 I:00
2AB338 0 S:01FF P:EnvmxdIzc HC:3758 VC:000 FC:00 I:00
2AB33B 0 S:01FF P:EnvmxdIzc HC:3774 VC:000 FC:00 I:00
2AB33D 0 S:01FF P:EnvmxdIzc HC:3798 VC:000 FC:00 I:00
2AB33F 0 S:01FF P:EnvMxdIzc HC:3814 VC:000 FC:00 I:00
2AB342 0 S:01FF P:EnvMxdIzc HC:3838 VC:000 FC:00 I:00
2AB344 0 S:01FF P:EnvMXdIzc HC:3854 VC:000 FC:00 I:00
2AB353 0 S:01FF P:EnvMXdIzc HC:3982 VC:000 FC:00 I:00
2AB356 0 S:01FF P:EnvMXdIzc HC:3998 VC:000 FC:00 I:00
2AB358 0 S:01FF P:EnvMXdIzc HC:4014 VC:000 FC:00 I:00
2AB35B 0 S:01FF P:EnvMXdIzc HC:4030 VC:000 FC:00 I:00
2AB35C 0 S:01FF P:EnvMXdIzc HC:4046 VC:000 FC:00 I:00
2AB35E 0 S:01FF P:EnvMXdIzc HC:4062 VC:000 FC:00 I:00
2AB361 0 S:01FF P:EnvMXdIzc HC:4078 VC:000 FC:00 I:00
2AB363 0 S:01FF P:EnvMXdIzc HC:4094 VC:000 FC:00 I:00
2AB366 0 S:01FF P:EnvMXdIzc HC:4118 VC:000 FC:00 I:00
2AB3EE 0 S:01FF P:EnvMxdIzc HC:5430 VC:000 FC:00 I:00
2AB3F0 0 S:01FF P:EnvMxdIzc HC:5446 VC:000 FC:00 I:00
2AB3F3 0 S:01FF P:EnvMxdIzc HC:5462 VC:000 FC:00 I:00
2AB3F5 0 S:01FF P:EnvMxdIzc HC:5478 VC:000 FC:00 I:00
2AB3F7 0 S:01FF P:EnvMxdIzc HC:5494 VC:000 FC:00 I:00
2AB3F9 0 S:01FF P:EnvMxdIzc HC:5510 VC:000 FC:00 I:00
2AB3FB 0 S:01FF P:EnvMxdIzc HC:5526 VC:000 FC:00 I:00
2AFA63 Windowing HDMA routine
2AFA67 \ Color Addition Select
2AFA69 / Add Subscreen, prevent color math inside window
2AFA6C \
2AFA6E  | Direct page becomes $0200
2AFA71 /
2AFA72 \ Pointer to windowing HDMA table, low and high byte
2AFA75 /  ($9000)
2AFA77 \
2AFA7A  | Pointer to windowing HDMA table, bank byte
2AFA7D /  ($7F)
2AFA7F \
2AFA81  |
2AFA84  | Pointer to windowing HDMA table, low and high byte
2AFA86  | ($9200)
2AFA89 /
2AFA8B \
2AFA8E  | Pointer to windowing HDMA table, bank byte
2AFA91 /  ($7F)
2AFB8F 0 S:01FF P:EnvmxdIzc HC:9174 VC:000 FC:00 I:00
2AFB91 0 S:01FF P:EnvMXdIzc HC:9190 VC:000 FC:00 I:00
2AFB93 0 S:01FF P:EnvMXdIzc HC:9206 VC:000 FC:00 I:00
2AFB94 0 S:01FF P:EnvMXdIzc HC:9222 VC:000 FC:00 I:00
2AFB96 0 S:01FF P:EnvMXdIzc HC:9238 VC:000 FC:00 I:00
2AFB98 0 S:01FF P:EnvMXdIzc HC:9254 VC:000 FC:00 I:00
2AFB9A 0 S:01FF P:EnvMXdIzc HC:9270 VC:000 FC:00 I:00
2AFB9C 0 S:01FF P:EnvMXdIzc HC:9286 VC:000 FC:00 I:00
2AFB9E 0 S:01FF P:EnvMXdIzc HC:9302 VC:000 FC:00 I:00
2AFBA0 0 S:01FF P:EnvMXdIzc HC:9318 VC:000 FC:00 I:00
2AFBA1 0 S:01FF P:EnvMXdIzc HC:9334 VC:000 FC:00 I:00
2AFBA3 0 S:01FF P:EnvMXdIzc HC:9350 VC:000 FC:00 I:00
2AFBA5 0 S:01FF P:EnvMXdIzc HC:9366 VC:000 FC:00 I:00
2AFBA7 0 S:01FF P:EnvMXdIzc HC:9382 VC:000 FC:00 I:00
2AFBAA 0 S:01FF P:EnvMXdIzc HC:9398 VC:000 FC:00 I:00
2AFBAC 0 S:01FF P:EnvMXdIzc HC:9414 VC:000 FC:00 I:00
2AFBAF 0 S:01FF P:EnvMXdIzc HC:9430 VC:000 FC:00 I:00
2AFBB1 0 S:01FF P:EnvMXdIzc HC:9446 VC:000 FC:00 I:00
2AFBB3 0 S:01FF P:EnvMXdIzc HC:9462 VC:000 FC:00 I:00
2AFBB5 0 S:01FF P:EnvMXdIzc HC:9478 VC:000 FC:00 I:00
2AFBB7 0 S:01FF P:EnvMXdIzc HC:9494 VC:000 FC:00 I:00
2AFBB9 0 S:01FF P:EnvMXdIzc HC:9510 VC:000 FC:00 I:00
2AFBBB 0 S:01FF P:EnvMXdIzc HC:9526 VC:000 FC:00 I:00
2AFBBD 0 S:01FF P:EnvMXdIzc HC:9542 VC:000 FC:00 I:00
2AFBC0 0 S:01FF P:EnvMXdIzc HC:9558 VC:000 FC:00 I:00
2AFBC2 0 S:01FF P:EnvMXdIzc HC:9574 VC:000 FC:00 I:00
2AFBC5 0 S:01FF P:EnvMXdIzc HC:9590 VC:000 FC:00 I:00
2AFBC7 0 S:01FF P:EnvMXdIzc HC:9606 VC:000 FC:00 I:00
2AFBC9 0 S:01FF P:EnvMXdIzc HC:9622 VC:000 FC:00 I:00
2AFBCB 0 S:01FF P:EnvMXdIzc HC:9638 VC:000 FC:00 I:00
2AFBCD 0 S:01FF P:EnvMXdIzc HC:9654 VC:000 FC:00 I:00
2AFBCF 0 S:01FF P:EnvMXdIzc HC:9670 VC:000 FC:00 I:00
2AFBD1 0 S:01FF P:EnvMXdIzc HC:9686 VC:000 FC:00 I:00
2AFBD3 0 S:01FF P:EnvMXdIzc HC:9702 VC:000 FC:00 I:00
2AFBD5 0 S:01FF P:EnvMXdIzc HC:9718 VC:000 FC:00 I:00
2AFBD7 0 S:01FF P:EnvMXdIzc HC:9734 VC:000 FC:00 I:00
2AFBD9 0 S:01FF P:EnvMXdIzc HC:9750 VC:000 FC:00 I:00
2AFBDB 0 S:01FF P:EnvMXdIzc HC:9766 VC:000 FC:00 I:00
2AFBDD 0 S:01FF P:EnvMXdIzc HC:9782 VC:000 FC:00 I:00
2AFBDF 0 S:01FF P:EnvMXdIzc HC:9798 VC:000 FC:00 I:00
2AFBE1 0 S:01FF P:EnvMXdIzc HC:9814 VC:000 FC:00 I:00
2AFBE3 0 S:01FF P:EnvMXdIzc HC:9830 VC:000 FC:00 I:00
2AFBE5 0 S:01FF P:EnvMXdIzc HC:9846 VC:000 FC:00 I:00
2AFBE7 0 S:01FF P:EnvMXdIzc HC:9862 VC:000 FC:00 I:00
2AFBE9 0 S:01FF P:EnvMXdIzc HC:9878 VC:000 FC:00 I:00
2AFBEB 0 S:01FF P:EnvMXdIzc HC:9894 VC:000 FC:00 I:00
2AFBED 0 S:01FF P:EnvMXdIzc HC:9910 VC:000 FC:00 I:00
2AFBEF 0 S:01FF P:EnvMXdIzc HC:9926 VC:000 FC:00 I:00
2AFBF1 0 S:01FF P:EnvMXdIzc HC:9942 VC:000 FC:00 I:00
2AFBF3 0 S:01FF P:EnvMXdIzc HC:9958 VC:000 FC:00 I:00
2AFBF5 0 S:01FF P:EnvMXdIzc HC:9974 VC:000 FC:00 I:00
2AFBF7 0 S:01FF P:EnvMXdIzc HC:9990 VC:000 FC:00 I:00
2AFBFA 0 S:01FF P:EnvMXdIzc HC:10006 VC:000 FC:00 I:00
2AFBFC 0 S:01FF P:EnvMXdIzc HC:10022 VC:000 FC:00 I:00
2AFBFE 0 S:01FF P:EnvMXdIzc HC:10038 VC:000 FC:00 I:00
2AFC00 0 S:01FF P:EnvMXdIzc HC:10054 VC:000 FC:00 I:00
2AFC02 0 S:01FF P:EnvMXdIzc HC:10070 VC:000 FC:00 I:00
2AFC04 0 S:01FF P:EnvMXdIzc HC:10086 VC:000 FC:00 I:00
2AFC06 0 S:01FF P:EnvMXdIzc HC:10102 VC:000 FC:00 I:00
2AFC07 0 S:01FF P:EnvMXdIzc HC:10118 VC:000 FC:00 I:00
2AFC09 0 S:01FF P:EnvMXdIzc HC:10134 VC:000 FC:00 I:00
2AFC0B 0 S:01FF P:EnvMXdIzc HC:10150 VC:000 FC:00 I:00
2AFC0D 0 S:01FF P:EnvMXdIzc HC:10166 VC:000 FC:00 I:00
2AFC0F 0 S:01FF P:EnvMXdIzc HC:10182 VC:000 FC:00 I:00
2AFC12 0 S:01FF P:EnvMXdIzc HC:10198 VC:000 FC:00 I:00
2AFC14 0 S:01FF P:EnvMXdIzc HC:10214 VC:000 FC:00 I:00
2AFC16 0 S:01FF P:EnvMXdIzc HC:10230 VC:000 FC:00 I:00
2AFC17 0 S:01FF P:EnvMXdIzc HC:10246 VC:000 FC:00 I:00
2AFC19 0 S:01FF P:EnvMXdIzc HC:10262 VC:000 FC:00 I:00
2AFC1B 0 S:01FF P:EnvMXdIzc HC:10278 VC:000 FC:00 I:00
2AFC1D 0 S:01FF P:EnvMXdIzc HC:10294 VC:000 FC:00 I:00
2AFC1F 0 S:01FF P:EnvMXdIzc HC:10310 VC:000 FC:00 I:00
2AFC21 0 S:01FF P:EnvMXdIzc HC:10326 VC:000 FC:00 I:00
2AFC23 0 S:01FF P:EnvMXdIzc HC:10342 VC:000 FC:00 I:00
2AFC25 0 S:01FF P:EnvMXdIzc HC:10358 VC:000 FC:00 I:00
2AFC28 0 S:01FF P:EnvMXdIzc HC:10374 VC:000 FC:00 I:00
2AFC2A 0 S:01FF P:EnvMXdIzc HC:10390 VC:000 FC:00 I:00
2AFC2D 0 S:01FF P:EnvMXdIzc HC:10406 VC:000 FC:00 I:00
2AFC2F 0 S:01FF P:EnvMXdIzc HC:10422 VC:000 FC:00 I:00
2AFC31 0 S:01FF P:EnvMXdIzc HC:10438 VC:000 FC:00 I:00
2AFC33 0 S:01FF P:EnvMXdIzc HC:10454 VC:000 FC:00 I:00
2AFC35 0 S:01FF P:EnvMXdIzc HC:10470 VC:000 FC:00 I:00
2AFC37 0 S:01FF P:EnvMXdIzc HC:10486 VC:000 FC:00 I:00
2AFC39 0 S:01FF P:EnvMXdIzc HC:10502 VC:000 FC:00 I:00
2AFC3B 0 S:01FF P:EnvMXdIzc HC:10518 VC:000 FC:00 I:00
2AFC3D 0 S:01FF P:EnvMXdIzc HC:10534 VC:000 FC:00 I:00
2AFC3F 0 S:01FF P:EnvMXdIzc HC:10550 VC:000 FC:00 I:00
2AFC41 0 S:01FF P:EnvMXdIzc HC:10566 VC:000 FC:00 I:00
2AFC43 0 S:01FF P:EnvMXdIzc HC:10582 VC:000 FC:00 I:00
2AFC45 0 S:01FF P:EnvMXdIzc HC:10598 VC:000 FC:00 I:00
2AFC47 0 S:01FF P:EnvMXdIzc HC:10614 VC:000 FC:00 I:00
2AFC49 0 S:01FF P:EnvMXdIzc HC:10630 VC:000 FC:00 I:00
2AFC4B 0 S:01FF P:EnvMXdIzc HC:10646 VC:000 FC:00 I:00
2AFC4D 0 S:01FF P:EnvMXdIzc HC:10662 VC:000 FC:00 I:00
2AFC4F 0 S:01FF P:EnvMXdIzc HC:10678 VC:000 FC:00 I:00
2AFC51 0 S:01FF P:EnvMXdIzc HC:10694 VC:000 FC:00 I:00
2AFC53 0 S:01FF P:EnvMXdIzc HC:10710 VC:000 FC:00 I:00
2AFC55 0 S:01FF P:EnvMXdIzc HC:10726 VC:000 FC:00 I:00
2AFC57 0 S:01FF P:EnvMXdIzc HC:10742 VC:000 FC:00 I:00
2AFC59 0 S:01FF P:EnvMXdIzc HC:10758 VC:000 FC:00 I:00
2AFC5B 0 S:01FF P:EnvMXdIzc HC:10774 VC:000 FC:00 I:00
2AFC5D 0 S:01FF P:EnvMXdIzc HC:10790 VC:000 FC:00 I:00
2AFC5F 0 S:01FF P:EnvMXdIzc HC:10806 VC:000 FC:00 I:00
2AFC61 0 S:01FF P:EnvMXdIzc HC:10822 VC:000 FC:00 I:00
2AFC63 0 S:01FF P:EnvMXdIzc HC:10838 VC:000 FC:00 I:00
2AFC65 0 S:01FF P:EnvMXdIzc HC:10854 VC:000 FC:00 I:00
2AFC67 0 S:01FF P:EnvMXdIzc HC:10870 VC:000 FC:00 I:00
2AFC69 0 S:01FF P:EnvMXdIzc HC:10886 VC:000 FC:00 I:00
2AFC6B 0 S:01FF P:EnvMXdIzc HC:10902 VC:000 FC:00 I:00
2AFC6D 0 S:01FF P:EnvMXdIzc HC:10918 VC:000 FC:00 I:00
2AFC6F 0 S:01FF P:EnvMXdIzc HC:10934 VC:000 FC:00 I:00
2AFC71 0 S:01FF P:EnvMXdIzc HC:10950 VC:000 FC:00 I:00
2AFC72 0 S:01FF P:EnvMXdIzc HC:10966 VC:000 FC:00 I:00
2AFE63 0 S:01FF P:EnvMXdIzc HC:12734 VC:000 FC:00 I:00
2AFE65 0 S:01FF P:EnvMXdIzc HC:12750 VC:000 FC:00 I:00
2AFE69 0 S:01FF P:EnvMXdIzc HC:12766 VC:000 FC:00 I:00
2AFE6C 0 S:01FF P:EnvMXdIzc HC:12782 VC:000 FC:00 I:00
2AFE6D 0 S:01FF P:EnvMXdIzc HC:12798 VC:000 FC:00 I:00
2AFE6F 0 S:01FF P:EnvMXdIzc HC:12814 VC:000 FC:00 I:00
2AFE72 0 S:01FF P:EnvMXdIzc HC:12830 VC:000 FC:00 I:00
2AFE75 0 S:01FF P:EnvMXdIzc HC:12846 VC:000 FC:00 I:00
2AFE78 0 S:01FF P:EnvMXdIzc HC:12862 VC:000 FC:00 I:00
2AFE7B 0 S:01FF P:EnvMXdIzc HC:12878 VC:000 FC:00 I:00
2AFE7E 0 S:01FF P:EnvMXdIzc HC:12894 VC:000 FC:00 I:00
2AFE81 0 S:01FF P:EnvMXdIzc HC:12910 VC:000 FC:00 I:00
2AFE84 0 S:01FF P:EnvMXdIzc HC:12926 VC:000 FC:00 I:00
2AFE87 0 S:01FF P:EnvMXdIzc HC:12942 VC:000 FC:00 I:00
2AFE8A 0 S:01FF P:EnvMXdIzc HC:12958 VC:000 FC:00 I:00                      
